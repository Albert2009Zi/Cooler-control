

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Apr 28 20:53:40 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x5E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 29/04/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC12F675 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0019                     	;# 
    66  001E                     	;# 
    67  001F                     	;# 
    68  0081                     	;# 
    69  0085                     	;# 
    70  008C                     	;# 
    71  008E                     	;# 
    72  0090                     	;# 
    73  0095                     	;# 
    74  0096                     	;# 
    75  0096                     	;# 
    76  0099                     	;# 
    77  009A                     	;# 
    78  009A                     	;# 
    79  009B                     	;# 
    80  009C                     	;# 
    81  009D                     	;# 
    82  009E                     	;# 
    83  009F                     	;# 
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0019                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  008C                     	;# 
   103  008E                     	;# 
   104  0090                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0096                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0019                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  0081                     	;# 
   133  0085                     	;# 
   134  008C                     	;# 
   135  008E                     	;# 
   136  0090                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0096                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0019                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  008C                     	;# 
   167  008E                     	;# 
   168  0090                     	;# 
   169  0095                     	;# 
   170  0096                     	;# 
   171  0096                     	;# 
   172  0099                     	;# 
   173  009A                     	;# 
   174  009A                     	;# 
   175  009B                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  009F                     	;# 
   180  0000                     	;# 
   181  0001                     	;# 
   182  0002                     	;# 
   183  0003                     	;# 
   184  0004                     	;# 
   185  0005                     	;# 
   186  000A                     	;# 
   187  000B                     	;# 
   188  000C                     	;# 
   189  000E                     	;# 
   190  000E                     	;# 
   191  000F                     	;# 
   192  0010                     	;# 
   193  0019                     	;# 
   194  001E                     	;# 
   195  001F                     	;# 
   196  0081                     	;# 
   197  0085                     	;# 
   198  008C                     	;# 
   199  008E                     	;# 
   200  0090                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0096                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  000B                     _INTCONbits	set	11
   213  0001                     _TMR0	set	1
   214  001E                     _ADRESH	set	30
   215  0005                     _GPIO	set	5
   216  0019                     _CMCON	set	25
   217  005D                     _T0IE	set	93
   218  005A                     _T0IF	set	90
   219  0066                     _ADIF	set	102
   220  00F9                     _GO	set	249
   221  005F                     _GIE	set	95
   222  00FA                     _CHS0	set	250
   223  00FB                     _CHS1	set	251
   224  0029                     _GP1	set	41
   225  00FE                     _VCFG	set	254
   226  00FF                     _ADFM	set	255
   227  00F8                     _ADON	set	248
   228  002C                     _GP4	set	44
   229  002D                     _GP5	set	45
   230  0081                     _OPTION_REG	set	129
   231  009E                     _ADRESL	set	158
   232  009F                     _ANSEL	set	159
   233  0085                     _TRISIO	set	133
   234  0099                     _VRCON	set	153
   235  0429                     _TRISIO1	set	1065
   236  0428                     _TRISIO0	set	1064
   237  042C                     _TRISIO4	set	1068
   238  042D                     _TRISIO5	set	1069
   239                           
   240                           	psect	cinit
   241  000C                     start_initialization:	
   242                           ; #config settings
   243                           
   244  000C                     __initialization:
   245                           
   246                           ; Clear objects allocated to BANK0
   247  000C  1283               	bcf	3,5	;RP0=0, select bank0
   248  000D  01A0               	clrf	__pbssBANK0& (0+127)
   249  000E  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   250  000F  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   251  0010  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   252  0011  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   253  0012  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   254  0013                     end_of_initialization:	
   255                           ;End of C runtime variable initialization code
   256                           
   257  0013                     __end_of__initialization:
   258  0013  0183               	clrf	3
   259  0014  293F               	ljmp	_main	;jump to C main() function
   260                           
   261                           	psect	bssBANK0
   262  0020                     __pbssBANK0:
   263  0020                     _pulsePerTakt:
   264  0020                     	ds	2
   265  0022                     _ADC_Value:
   266  0022                     	ds	2
   267  0024                     _PWM_Value:
   268  0024                     	ds	2
   269                           
   270                           	psect	cstackCOMMON
   271  0000                     __pcstackCOMMON:
   272  0000                     ??_init_uC:
   273  0000                     ??_buttonEvent:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0000                     ??_main:	
   277                           ; 1 bytes @ 0x0
   278                           
   279                           
   280                           	psect	cstackBANK0
   281  0026                     __pcstackBANK0:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0026                     ?_init_uC:
   285  0026                     ?_buttonEvent:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0026                     ?_ISR:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0026                     ??_ISR:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0026                     ?_initTimer0:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0026                     ?_main:	
   298                           ; 1 bytes @ 0x0
   299                           
   300                           
   301                           ; 1 bytes @ 0x0
   302  0026                     	ds	2
   303  0028                     ??_initTimer0:
   304  0028                     ?_thermoControl:	
   305                           ; 1 bytes @ 0x2
   306                           
   307                           
   308                           ; 2 bytes @ 0x2
   309  0028                     	ds	2
   310  002A                     ??_thermoControl:
   311                           
   312                           ; 1 bytes @ 0x4
   313  002A                     	ds	2
   314                           
   315                           	psect	maintext
   316  013F                     __pmaintext:	
   317 ;;
   318 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   319 ;;
   320 ;; *************** function _main *****************
   321 ;; Defined at:
   322 ;;		line 28 in file "main.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;		None
   325 ;; Auto vars:     Size  Location     Type
   326 ;;		None
   327 ;; Return value:  Size  Location     Type
   328 ;;                  1    wreg      void 
   329 ;; Registers used:
   330 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   331 ;; Tracked objects:
   332 ;;		On entry : B00/0
   333 ;;		On exit  : 0/0
   334 ;;		Unchanged: 0/0
   335 ;; Data sizes:     COMMON   BANK0
   336 ;;      Params:         0       0
   337 ;;      Locals:         0       0
   338 ;;      Temps:          0       0
   339 ;;      Totals:         0       0
   340 ;;Total ram usage:        0 bytes
   341 ;; Hardware stack levels required when called:    3
   342 ;; This function calls:
   343 ;;		_buttonEvent
   344 ;;		_initTimer0
   345 ;;		_init_uC
   346 ;; This function is called by:
   347 ;;		Startup code after reset
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           
   352                           ;psect for function _main
   353  013F                     _main:
   354  013F                     l904:	
   355                           ;incstack = 0
   356                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   357                           
   358  013F  2137               	fcall	_initTimer0
   359  0140  2102               	fcall	_init_uC
   360  0141                     l906:
   361  0141  178B               	bsf	11,7	;volatile
   362  0142                     l908:
   363  0142  2122               	fcall	_buttonEvent
   364  0143  2942               	goto	l908
   365  0144  280B               	ljmp	start
   366  0145                     __end_of_main:
   367                           
   368                           	psect	text1
   369  0102                     __ptext1:	
   370 ;; *************** function _init_uC *****************
   371 ;; Defined at:
   372 ;;		line 10 in file "ADC.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;		None
   375 ;; Auto vars:     Size  Location     Type
   376 ;;		None
   377 ;; Return value:  Size  Location     Type
   378 ;;                  1    wreg      void 
   379 ;; Registers used:
   380 ;;		wreg, status,2
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMMON   BANK0
   386 ;;      Params:         0       0
   387 ;;      Locals:         0       0
   388 ;;      Temps:          0       0
   389 ;;      Totals:         0       0
   390 ;;Total ram usage:        0 bytes
   391 ;; Hardware stack levels used:    1
   392 ;; Hardware stack levels required when called:    1
   393 ;; This function calls:
   394 ;;		Nothing
   395 ;; This function is called by:
   396 ;;		_main
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           
   401                           ;psect for function _init_uC
   402  0102                     _init_uC:
   403  0102                     l842:	
   404                           ;incstack = 0
   405                           ; Regs used in _init_uC: [wreg+status,2]
   406                           
   407                           
   408                           ;ADC.c: 12:  CMCON = 0x07;
   409  0102  3007               	movlw	7
   410  0103  1283               	bcf	3,5	;RP0=0, select bank0
   411  0104  0099               	movwf	25	;volatile
   412  0105                     l844:
   413                           
   414                           ;ADC.c: 13:     VRCON = 0x00;
   415  0105  1683               	bsf	3,5	;RP0=1, select bank1
   416  0106  0199               	clrf	25	;volatile
   417  0107                     l846:
   418                           
   419                           ;ADC.c: 16:     TRISIO = 0;
   420  0107  0185               	clrf	5	;volatile
   421  0108                     l848:
   422                           
   423                           ;ADC.c: 17:     GPIO = 0;
   424  0108  1283               	bcf	3,5	;RP0=0, select bank0
   425  0109  0185               	clrf	5	;volatile
   426  010A                     l850:
   427                           
   428                           ;ADC.c: 20:     TRISIO5 = 0;
   429  010A  1683               	bsf	3,5	;RP0=1, select bank1
   430  010B  1285               	bcf	5,5	;volatile
   431  010C                     l852:
   432                           
   433                           ;ADC.c: 21:     GP5 = 1;
   434  010C  1283               	bcf	3,5	;RP0=0, select bank0
   435  010D  1685               	bsf	5,5	;volatile
   436  010E                     l854:
   437                           
   438                           ;ADC.c: 24:     TRISIO4 = 0;
   439  010E  1683               	bsf	3,5	;RP0=1, select bank1
   440  010F  1205               	bcf	5,4	;volatile
   441  0110                     l856:
   442                           
   443                           ;ADC.c: 25:     GP4 = 0;
   444  0110  1283               	bcf	3,5	;RP0=0, select bank0
   445  0111  1205               	bcf	5,4	;volatile
   446  0112                     l858:
   447                           
   448                           ;ADC.c: 29:     ADON = 1;
   449  0112  141F               	bsf	31,0	;volatile
   450  0113                     l860:
   451                           
   452                           ;ADC.c: 30:     ADFM = 1;
   453  0113  179F               	bsf	31,7	;volatile
   454  0114                     l862:
   455                           
   456                           ;ADC.c: 31:     VCFG = 0;
   457  0114  131F               	bcf	31,6	;volatile
   458  0115                     l864:
   459                           
   460                           ;ADC.c: 32:     TRISIO0 = 1;
   461  0115  1683               	bsf	3,5	;RP0=1, select bank1
   462  0116  1405               	bsf	5,0	;volatile
   463  0117                     l866:
   464                           
   465                           ;ADC.c: 33:     TRISIO1 = 1;
   466  0117  1485               	bsf	5,1	;volatile
   467  0118                     l868:
   468                           
   469                           ;ADC.c: 34:     GP1 = 0;
   470  0118  1283               	bcf	3,5	;RP0=0, select bank0
   471  0119  1085               	bcf	5,1	;volatile
   472  011A                     l870:
   473                           
   474                           ;ADC.c: 36:     ANSEL = 0b00110001;
   475  011A  3031               	movlw	49
   476  011B  1683               	bsf	3,5	;RP0=1, select bank1
   477  011C  009F               	movwf	31	;volatile
   478  011D                     l872:
   479                           
   480                           ;ADC.c: 38:     CHS1 = 0;
   481  011D  1283               	bcf	3,5	;RP0=0, select bank0
   482  011E  119F               	bcf	31,3	;volatile
   483  011F                     l874:
   484                           
   485                           ;ADC.c: 39:     CHS0 = 0;
   486  011F  111F               	bcf	31,2	;volatile
   487  0120                     l876:
   488                           
   489                           ;ADC.c: 40:     GIE = 1;
   490  0120  178B               	bsf	11,7	;volatile
   491  0121                     l55:
   492  0121  0008               	return
   493  0122                     __end_of_init_uC:
   494                           
   495                           	psect	text2
   496  0137                     __ptext2:	
   497 ;; *************** function _initTimer0 *****************
   498 ;; Defined at:
   499 ;;		line 4 in file "timer0.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;		None
   502 ;; Auto vars:     Size  Location     Type
   503 ;;		None
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg, status,2, status,0
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMMON   BANK0
   513 ;;      Params:         0       0
   514 ;;      Locals:         0       0
   515 ;;      Temps:          0       1
   516 ;;      Totals:         0       1
   517 ;;Total ram usage:        1 bytes
   518 ;; Hardware stack levels used:    1
   519 ;; Hardware stack levels required when called:    1
   520 ;; This function calls:
   521 ;;		Nothing
   522 ;; This function is called by:
   523 ;;		_main
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           
   528                           ;psect for function _initTimer0
   529  0137                     _initTimer0:
   530  0137                     l888:	
   531                           ;incstack = 0
   532                           ; Regs used in _initTimer0: [wreg+status,2+status,0]
   533                           
   534                           
   535                           ;timer0.c: 7:  OPTION_REG &= 0xC0;
   536  0137  30C0               	movlw	192
   537  0138  1283               	bcf	3,5	;RP0=0, select bank0
   538  0139  00A8               	movwf	??_initTimer0
   539  013A  0828               	movf	??_initTimer0,w
   540  013B  1683               	bsf	3,5	;RP0=1, select bank1
   541  013C  0581               	andwf	1,f	;volatile
   542  013D                     l890:
   543                           
   544                           ;timer0.c: 8:  T0IE = 1;
   545  013D  168B               	bsf	11,5	;volatile
   546  013E                     l102:
   547  013E  0008               	return
   548  013F                     __end_of_initTimer0:
   549                           
   550                           	psect	text3
   551  0122                     __ptext3:	
   552 ;; *************** function _buttonEvent *****************
   553 ;; Defined at:
   554 ;;		line 44 in file "ADC.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, status,2, btemp+1, pclath, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMMON   BANK0
   568 ;;      Params:         0       0
   569 ;;      Locals:         0       0
   570 ;;      Temps:          0       0
   571 ;;      Totals:         0       0
   572 ;;Total ram usage:        0 bytes
   573 ;; Hardware stack levels used:    1
   574 ;; Hardware stack levels required when called:    2
   575 ;; This function calls:
   576 ;;		_thermoControl
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           
   583                           ;psect for function _buttonEvent
   584  0122                     _buttonEvent:
   585  0122                     l878:	
   586                           ;incstack = 0
   587                           ; Regs used in _buttonEvent: [wreg+status,2+btemp+1+pclath+cstack]
   588                           
   589                           
   590                           ;ADC.c: 46:         if (GP1)
   591  0122  1283               	bcf	3,5	;RP0=0, select bank0
   592  0123  1C85               	btfss	5,1	;volatile
   593  0124  2926               	goto	u161
   594  0125  2927               	goto	u160
   595  0126                     u161:
   596  0126  292F               	goto	l58
   597  0127                     u160:
   598  0127                     l880:
   599                           
   600                           ;ADC.c: 47:                       {;ADC.c: 48:                        GP5 = 0;
   601  0127  1285               	bcf	5,5	;volatile
   602  0128                     l882:
   603                           
   604                           ;ADC.c: 49:                        PWM_Value = thermoControl();
   605  0128  2015               	fcall	_thermoControl
   606  0129  1283               	bcf	3,5	;RP0=0, select bank0
   607  012A  0829               	movf	?_thermoControl+1,w
   608  012B  00A5               	movwf	_PWM_Value+1
   609  012C  0828               	movf	?_thermoControl,w
   610  012D  00A4               	movwf	_PWM_Value
   611                           
   612                           ;ADC.c: 51:                       }
   613  012E  2936               	goto	l61
   614  012F                     l58:	
   615                           ;ADC.c: 52:         else if (!GP1)
   616                           
   617  012F  1885               	btfsc	5,1	;volatile
   618  0130  2932               	goto	u171
   619  0131  2933               	goto	u170
   620  0132                     u171:
   621  0132  2936               	goto	l61
   622  0133                     u170:
   623  0133                     l884:
   624                           
   625                           ;ADC.c: 53:                       {;ADC.c: 54:                        GP5 = 1;
   626  0133  1685               	bsf	5,5	;volatile
   627  0134                     l886:
   628                           
   629                           ;ADC.c: 55:                        PWM_Value = 0;
   630  0134  01A4               	clrf	_PWM_Value
   631  0135  01A5               	clrf	_PWM_Value+1
   632  0136                     l61:
   633  0136  0008               	return
   634  0137                     __end_of_buttonEvent:
   635                           
   636                           	psect	text4
   637  0015                     __ptext4:	
   638 ;; *************** function _thermoControl *****************
   639 ;; Defined at:
   640 ;;		line 59 in file "ADC.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  2    2[BANK0 ] unsigned int 
   647 ;; Registers used:
   648 ;;		wreg, btemp+1
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMMON   BANK0
   654 ;;      Params:         0       2
   655 ;;      Locals:         0       0
   656 ;;      Temps:          0       2
   657 ;;      Totals:         0       4
   658 ;;Total ram usage:        4 bytes
   659 ;; Hardware stack levels used:    1
   660 ;; Hardware stack levels required when called:    1
   661 ;; This function calls:
   662 ;;		Nothing
   663 ;; This function is called by:
   664 ;;		_buttonEvent
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           
   669                           ;psect for function _thermoControl
   670  0015                     _thermoControl:
   671  0015                     l806:	
   672                           ;incstack = 0
   673                           ; Regs used in _thermoControl: [wreg+btemp+1]
   674                           
   675                           
   676                           ;ADC.c: 61:        _delay((unsigned long)((10)*(4000000/4000.0)));
   677  0015  300D               	movlw	13
   678  0016  1283               	bcf	3,5	;RP0=0, select bank0
   679  0017  00AB               	movwf	??_thermoControl+1
   680  0018  30FB               	movlw	251
   681  0019  00AA               	movwf	??_thermoControl
   682  001A                     u217:
   683  001A  0BAA               	decfsz	??_thermoControl,f
   684  001B  281A               	goto	u217
   685  001C  0BAB               	decfsz	??_thermoControl+1,f
   686  001D  281A               	goto	u217
   687  001E  281F               	nop2
   688  001F                     l808:
   689                           
   690                           ;ADC.c: 62:        GO = 1;
   691  001F  1283               	bcf	3,5	;RP0=0, select bank0
   692  0020  149F               	bsf	31,1	;volatile
   693  0021                     l64:	
   694                           ;ADC.c: 63:        while(!ADIF);
   695                           
   696  0021  1F0C               	btfss	12,6	;volatile
   697  0022  2824               	goto	u61
   698  0023  2825               	goto	u60
   699  0024                     u61:
   700  0024  2821               	goto	l64
   701  0025                     u60:
   702  0025                     l810:
   703                           
   704                           ;ADC.c: 64:        _delay((unsigned long)((10)*(4000000/4000.0)));
   705  0025  300D               	movlw	13
   706  0026  00AB               	movwf	??_thermoControl+1
   707  0027  30FB               	movlw	251
   708  0028  00AA               	movwf	??_thermoControl
   709  0029                     u227:
   710  0029  0BAA               	decfsz	??_thermoControl,f
   711  002A  2829               	goto	u227
   712  002B  0BAB               	decfsz	??_thermoControl+1,f
   713  002C  2829               	goto	u227
   714  002D  282E               	nop2
   715                           
   716                           ;ADC.c: 66:        ADC_Value = (int) ((ADRESH<<8)+ADRESL);
   717  002E  1283               	bcf	3,5	;RP0=0, select bank0
   718  002F  081E               	movf	30,w	;volatile
   719  0030  00A3               	movwf	_ADC_Value+1
   720  0031  1683               	bsf	3,5	;RP0=1, select bank1
   721  0032  081E               	movf	30,w	;volatile
   722  0033  1283               	bcf	3,5	;RP0=0, select bank0
   723  0034  00A2               	movwf	_ADC_Value
   724  0035                     l812:
   725                           
   726                           ;ADC.c: 68:              if (ADC_Value < 180)
   727  0035  0823               	movf	_ADC_Value+1,w
   728  0036  3A80               	xorlw	128
   729  0037  00DF               	movwf	btemp+1
   730  0038  3080               	movlw	128
   731  0039  025F               	subwf	btemp+1,w
   732  003A  1D03               	skipz
   733  003B  283E               	goto	u75
   734  003C  30B4               	movlw	180
   735  003D  0222               	subwf	_ADC_Value,w
   736  003E                     u75:
   737  003E  1803               	skipnc
   738  003F  2841               	goto	u71
   739  0040  2842               	goto	u70
   740  0041                     u71:
   741  0041  2848               	goto	l816
   742  0042                     u70:
   743  0042                     l814:
   744                           
   745                           ;ADC.c: 69:                        {;ADC.c: 70:                         PWM_Value = 10;
   746  0042  300A               	movlw	10
   747  0043  1283               	bcf	3,5	;RP0=0, select bank0
   748  0044  00A4               	movwf	_PWM_Value
   749  0045  3000               	movlw	0
   750  0046  00A5               	movwf	_PWM_Value+1
   751                           
   752                           ;ADC.c: 71:                        }
   753  0047  28D0               	goto	l68
   754  0048                     l816:
   755  0048  1283               	bcf	3,5	;RP0=0, select bank0
   756  0049  0823               	movf	_ADC_Value+1,w
   757  004A  3A80               	xorlw	128
   758  004B  00DF               	movwf	btemp+1
   759  004C  3080               	movlw	128
   760  004D  025F               	subwf	btemp+1,w
   761  004E  1D03               	skipz
   762  004F  2852               	goto	u85
   763  0050  30B4               	movlw	180
   764  0051  0222               	subwf	_ADC_Value,w
   765  0052                     u85:
   766  0052  1C03               	skipc
   767  0053  2855               	goto	u81
   768  0054  2856               	goto	u80
   769  0055                     u81:
   770  0055  286A               	goto	l822
   771  0056                     u80:
   772  0056                     l818:
   773  0056  1283               	bcf	3,5	;RP0=0, select bank0
   774  0057  0823               	movf	_ADC_Value+1,w
   775  0058  3A80               	xorlw	128
   776  0059  00DF               	movwf	btemp+1
   777  005A  3081               	movlw	129
   778  005B  025F               	subwf	btemp+1,w
   779  005C  1D03               	skipz
   780  005D  2860               	goto	u95
   781  005E  30CC               	movlw	204
   782  005F  0222               	subwf	_ADC_Value,w
   783  0060                     u95:
   784  0060  1803               	skipnc
   785  0061  2863               	goto	u91
   786  0062  2864               	goto	u90
   787  0063                     u91:
   788  0063  286A               	goto	l822
   789  0064                     u90:
   790  0064                     l820:
   791                           
   792                           ;ADC.c: 73:                        {;ADC.c: 74:                         PWM_Value = 25;
   793  0064  3019               	movlw	25
   794  0065  1283               	bcf	3,5	;RP0=0, select bank0
   795  0066  00A4               	movwf	_PWM_Value
   796  0067  3000               	movlw	0
   797  0068  00A5               	movwf	_PWM_Value+1
   798                           
   799                           ;ADC.c: 75:                        }
   800  0069  28D0               	goto	l68
   801  006A                     l822:
   802  006A  1283               	bcf	3,5	;RP0=0, select bank0
   803  006B  0823               	movf	_ADC_Value+1,w
   804  006C  3A80               	xorlw	128
   805  006D  00DF               	movwf	btemp+1
   806  006E  3081               	movlw	129
   807  006F  025F               	subwf	btemp+1,w
   808  0070  1D03               	skipz
   809  0071  2874               	goto	u105
   810  0072  30CC               	movlw	204
   811  0073  0222               	subwf	_ADC_Value,w
   812  0074                     u105:
   813  0074  1C03               	skipc
   814  0075  2877               	goto	u101
   815  0076  2878               	goto	u100
   816  0077                     u101:
   817  0077  288C               	goto	l828
   818  0078                     u100:
   819  0078                     l824:
   820  0078  1283               	bcf	3,5	;RP0=0, select bank0
   821  0079  0823               	movf	_ADC_Value+1,w
   822  007A  3A80               	xorlw	128
   823  007B  00DF               	movwf	btemp+1
   824  007C  3082               	movlw	130
   825  007D  025F               	subwf	btemp+1,w
   826  007E  1D03               	skipz
   827  007F  2882               	goto	u115
   828  0080  3066               	movlw	102
   829  0081  0222               	subwf	_ADC_Value,w
   830  0082                     u115:
   831  0082  1803               	skipnc
   832  0083  2885               	goto	u111
   833  0084  2886               	goto	u110
   834  0085                     u111:
   835  0085  288C               	goto	l828
   836  0086                     u110:
   837  0086                     l826:
   838                           
   839                           ;ADC.c: 77:                        {;ADC.c: 78:                         PWM_Value = 50;
   840  0086  3032               	movlw	50
   841  0087  1283               	bcf	3,5	;RP0=0, select bank0
   842  0088  00A4               	movwf	_PWM_Value
   843  0089  3000               	movlw	0
   844  008A  00A5               	movwf	_PWM_Value+1
   845                           
   846                           ;ADC.c: 79:                        }
   847  008B  28D0               	goto	l68
   848  008C                     l828:
   849  008C  1283               	bcf	3,5	;RP0=0, select bank0
   850  008D  0823               	movf	_ADC_Value+1,w
   851  008E  3A80               	xorlw	128
   852  008F  00DF               	movwf	btemp+1
   853  0090  3082               	movlw	130
   854  0091  025F               	subwf	btemp+1,w
   855  0092  1D03               	skipz
   856  0093  2896               	goto	u125
   857  0094  3066               	movlw	102
   858  0095  0222               	subwf	_ADC_Value,w
   859  0096                     u125:
   860  0096  1C03               	skipc
   861  0097  2899               	goto	u121
   862  0098  289A               	goto	u120
   863  0099                     u121:
   864  0099  28AE               	goto	l834
   865  009A                     u120:
   866  009A                     l830:
   867  009A  1283               	bcf	3,5	;RP0=0, select bank0
   868  009B  0823               	movf	_ADC_Value+1,w
   869  009C  3A80               	xorlw	128
   870  009D  00DF               	movwf	btemp+1
   871  009E  3082               	movlw	130
   872  009F  025F               	subwf	btemp+1,w
   873  00A0  1D03               	skipz
   874  00A1  28A4               	goto	u135
   875  00A2  30E1               	movlw	225
   876  00A3  0222               	subwf	_ADC_Value,w
   877  00A4                     u135:
   878  00A4  1803               	skipnc
   879  00A5  28A7               	goto	u131
   880  00A6  28A8               	goto	u130
   881  00A7                     u131:
   882  00A7  28AE               	goto	l834
   883  00A8                     u130:
   884  00A8                     l832:
   885                           
   886                           ;ADC.c: 81:                        {;ADC.c: 82:                         PWM_Value = 75;
   887  00A8  304B               	movlw	75
   888  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   889  00AA  00A4               	movwf	_PWM_Value
   890  00AB  3000               	movlw	0
   891  00AC  00A5               	movwf	_PWM_Value+1
   892                           
   893                           ;ADC.c: 83:                        }
   894  00AD  28D0               	goto	l68
   895  00AE                     l834:
   896  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   897  00AF  0823               	movf	_ADC_Value+1,w
   898  00B0  3A80               	xorlw	128
   899  00B1  00DF               	movwf	btemp+1
   900  00B2  3082               	movlw	130
   901  00B3  025F               	subwf	btemp+1,w
   902  00B4  1D03               	skipz
   903  00B5  28B8               	goto	u145
   904  00B6  30E1               	movlw	225
   905  00B7  0222               	subwf	_ADC_Value,w
   906  00B8                     u145:
   907  00B8  1C03               	skipc
   908  00B9  28BB               	goto	u141
   909  00BA  28BC               	goto	u140
   910  00BB                     u141:
   911  00BB  28D0               	goto	l72
   912  00BC                     u140:
   913  00BC                     l836:
   914  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   915  00BD  0823               	movf	_ADC_Value+1,w
   916  00BE  3A80               	xorlw	128
   917  00BF  00DF               	movwf	btemp+1
   918  00C0  3083               	movlw	131
   919  00C1  025F               	subwf	btemp+1,w
   920  00C2  1D03               	skipz
   921  00C3  28C6               	goto	u155
   922  00C4  30FF               	movlw	255
   923  00C5  0222               	subwf	_ADC_Value,w
   924  00C6                     u155:
   925  00C6  1803               	skipnc
   926  00C7  28C9               	goto	u151
   927  00C8  28CA               	goto	u150
   928  00C9                     u151:
   929  00C9  28D0               	goto	l72
   930  00CA                     u150:
   931  00CA                     l838:
   932                           
   933                           ;ADC.c: 85:                        {;ADC.c: 86:                         PWM_Value = 95;
   934  00CA  305F               	movlw	95
   935  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   936  00CC  00A4               	movwf	_PWM_Value
   937  00CD  3000               	movlw	0
   938  00CE  00A5               	movwf	_PWM_Value+1
   939  00CF  28D0               	goto	l68
   940  00D0                     l72:
   941  00D0                     l68:
   942                           
   943                           ;ADC.c: 89:        return PWM_Value;
   944  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   945  00D1  0825               	movf	_PWM_Value+1,w
   946  00D2  00A9               	movwf	?_thermoControl+1
   947  00D3  0824               	movf	_PWM_Value,w
   948  00D4  00A8               	movwf	?_thermoControl
   949  00D5                     l76:
   950  00D5  0008               	return
   951  00D6                     __end_of_thermoControl:
   952                           
   953                           	psect	text5
   954  00D6                     __ptext5:	
   955 ;; *************** function _ISR *****************
   956 ;; Defined at:
   957 ;;		line 7 in file "interrupt.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;		None
   960 ;; Auto vars:     Size  Location     Type
   961 ;;		None
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, status,2
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0
   971 ;;      Params:         0       0
   972 ;;      Locals:         0       0
   973 ;;      Temps:          0       2
   974 ;;      Totals:         0       2
   975 ;;Total ram usage:        2 bytes
   976 ;; Hardware stack levels used:    1
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		Interrupt level 1
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           
   985                           ;psect for function _ISR
   986  00D6                     _ISR:
   987  00D6                     i1l892:
   988                           
   989                           ;interrupt.c: 9:       TMR0 = 200;
   990  00D6  30C8               	movlw	200
   991  00D7  0081               	movwf	1	;volatile
   992                           
   993                           ;interrupt.c: 10:       pulsePerTakt++;
   994  00D8  3001               	movlw	1
   995  00D9  07A0               	addwf	_pulsePerTakt,f
   996  00DA  1803               	skipnc
   997  00DB  0AA1               	incf	_pulsePerTakt+1,f
   998  00DC  3000               	movlw	0
   999  00DD  07A1               	addwf	_pulsePerTakt+1,f
  1000  00DE                     i1l894:
  1001                           
  1002                           ;interrupt.c: 11:    if(T0IF)
  1003  00DE  1D0B               	btfss	11,2	;volatile
  1004  00DF  28E1               	goto	u18_21
  1005  00E0  28E2               	goto	u18_20
  1006  00E1                     u18_21:
  1007  00E1  28F0               	goto	i1l900
  1008  00E2                     u18_20:
  1009  00E2                     i1l896:
  1010                           
  1011                           ;interrupt.c: 12:     {;interrupt.c: 13:         if (pulsePerTakt < PWM_Value)
  1012  00E2  0825               	movf	_PWM_Value+1,w
  1013  00E3  0221               	subwf	_pulsePerTakt+1,w
  1014  00E4  1D03               	skipz
  1015  00E5  28E8               	goto	u19_25
  1016  00E6  0824               	movf	_PWM_Value,w
  1017  00E7  0220               	subwf	_pulsePerTakt,w
  1018  00E8                     u19_25:
  1019  00E8  1803               	skipnc
  1020  00E9  28EB               	goto	u19_21
  1021  00EA  28EC               	goto	u19_20
  1022  00EB                     u19_21:
  1023  00EB  28EE               	goto	i1l92
  1024  00EC                     u19_20:
  1025  00EC                     i1l898:
  1026                           
  1027                           ;interrupt.c: 14:          {GP4 = 1;}
  1028  00EC  1605               	bsf	5,4	;volatile
  1029  00ED  28EF               	goto	i1l93
  1030  00EE                     i1l92:	
  1031                           ;interrupt.c: 15:         else
  1032                           
  1033                           
  1034                           ;interrupt.c: 16:    {GP4 = 0;}
  1035  00EE  1205               	bcf	5,4	;volatile
  1036  00EF                     i1l93:
  1037                           
  1038                           ;interrupt.c: 17:   T0IF = 0;
  1039  00EF  110B               	bcf	11,2	;volatile
  1040  00F0                     i1l900:
  1041                           
  1042                           ;interrupt.c: 19:       if (pulsePerTakt > 100)
  1043  00F0  3000               	movlw	0
  1044  00F1  0221               	subwf	_pulsePerTakt+1,w
  1045  00F2  3065               	movlw	101
  1046  00F3  1903               	skipnz
  1047  00F4  0220               	subwf	_pulsePerTakt,w
  1048  00F5  1C03               	skipc
  1049  00F6  28F8               	goto	u20_21
  1050  00F7  28F9               	goto	u20_20
  1051  00F8                     u20_21:
  1052  00F8  28FB               	goto	i1l95
  1053  00F9                     u20_20:
  1054  00F9                     i1l902:
  1055                           
  1056                           ;interrupt.c: 20:        {;interrupt.c: 21:          pulsePerTakt = 0;
  1057  00F9  01A0               	clrf	_pulsePerTakt
  1058  00FA  01A1               	clrf	_pulsePerTakt+1
  1059  00FB                     i1l95:
  1060  00FB  0827               	movf	??_ISR+1,w
  1061  00FC  008A               	movwf	10
  1062  00FD  0E26               	swapf	??_ISR,w
  1063  00FE  0083               	movwf	3
  1064  00FF  0EDE               	swapf	btemp,f
  1065  0100  0E5E               	swapf	btemp,w
  1066  0101  0009               	retfie
  1067  0102                     __end_of_ISR:
  1068  005E                     btemp	set	94	;btemp
  1069  005E                     wtemp0	set	94
  1070                           
  1071                           	psect	intentry
  1072  0004                     __pintentry:	
  1073                           ;incstack = 0
  1074                           ; Regs used in _ISR: [wreg+status,2]
  1075                           
  1076  0004                     interrupt_function:
  1077  005E                     saved_w	set	btemp
  1078  0004  00DE               	movwf	btemp
  1079  0005  0E03               	swapf	3,w
  1080  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1081  0007  00A6               	movwf	??_ISR
  1082  0008  080A               	movf	10,w
  1083  0009  00A7               	movwf	??_ISR+1
  1084  000A  28D6               	ljmp	_ISR
  1085                           
  1086                           	psect	config
  1087                           
  1088                           ;Config register CONFIG @ 0x2007
  1089                           ;	Oscillator Selection bits
  1090                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  1091                           ;	Watchdog Timer Enable bit
  1092                           ;	WDTE = OFF, WDT disabled
  1093                           ;	Power-Up Timer Enable bit
  1094                           ;	PWRTE = OFF, PWRT disabled
  1095                           ;	GP3/MCLR pin function select
  1096                           ;	MCLRE = ON, GP3/MCLR pin function is MCLR
  1097                           ;	Brown-out Detect Enable bit
  1098                           ;	BOREN = ON, BOD enabled
  1099                           ;	Code Protection bit
  1100                           ;	CP = OFF, Program Memory code protection is disabled
  1101                           ;	Data Code Protection bit
  1102                           ;	CPD = OFF, Data memory code protection is disabled
  1103  2007                     	org	8199
  1104  2007  31F4               	dw	12788

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      6      12

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _buttonEvent->_thermoControl

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _buttonEvent
                         _initTimer0
                            _init_uC
 ---------------------------------------------------------------------------------
 (1) _init_uC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTimer0                                           1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _buttonEvent                                          0     0      0       0
                      _thermoControl
 ---------------------------------------------------------------------------------
 (2) _thermoControl                                        4     2      2       0
                                              2 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buttonEvent
     _thermoControl
   _initTimer0
   _init_uC

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      6       C       4       19.4%
ABS                  0      0       C       5        0.0%
DATA                 0      0       C       6        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Apr 28 20:53:40 2022

                     l61 0136                       l55 0121                       l72 00D0  
                     l64 0021                       l58 012F                       l76 00D5  
                     l68 00D0                       _GO 00F9                       u60 0025  
                     u61 0024                       u70 0042                       u71 0041  
                     u80 0056                       u81 0055                       u90 0064  
                     u91 0063                       u75 003E             _pulsePerTakt 0020  
                     u85 0052                       u95 0060                      l102 013E  
                    l810 0025                      l820 0064                      l812 0035  
                    l830 009A                      l822 006A                      l814 0042  
                    l806 0015                      l832 00A8                      l824 0078  
                    l816 0048                      l808 001F                      l904 013F  
                    l834 00AE                      l826 0086                      l818 0056  
                    l850 010A                      l842 0102                      l906 0141  
                    l836 00BC                      l828 008C                      l860 0113  
                    l852 010C                      l844 0105                      l908 0142  
                    l838 00CA                      l870 011A                      l862 0114  
                    l854 010E                      l846 0107                      l880 0127  
                    l872 011D                      l864 0115                      l856 0110  
                    l848 0108                      l882 0128                      l890 013D  
                    l874 011F                      l866 0117                      l858 0112  
                    l884 0133                      l876 0120                      l868 0118  
                    _GP1 0029                      l886 0134                      l878 0122  
                    l888 0137                      _GP4 002C                      _GP5 002D  
                    _GIE 005F                      u100 0078                      u101 0077  
                    u110 0086                      u111 0085                      u120 009A  
                    u121 0099                      u105 0074                      u130 00A8  
                    u131 00A7                      u115 0082                      u140 00BC  
                    u141 00BB                      u125 0096                      u150 00CA  
                    u151 00C9                      u135 00A4                      u160 0127  
                    u145 00B8                      u217 001A                      u161 0126  
                    u170 0133                      u155 00C6                      u227 0029  
                    u171 0132                      _ISR 00D6                     ?_ISR 0026  
                   _ADIF 0066                     _ADFM 00FF                     _ADON 00F8  
                   _CHS0 00FA                     _CHS1 00FB                     _T0IE 005D  
                   _T0IF 005A                     _GPIO 0005                     i1l92 00EE  
                   i1l93 00EF                     i1l95 00FB                     _VCFG 00FE  
                   _TMR0 0001                     _main 013F                     btemp 005E  
                   start 000B                    ??_ISR 0026                    ?_main 0026  
                  _CMCON 0019                    _ANSEL 009F                    i1l900 00F0  
                  i1l902 00F9                    i1l892 00D6             ?_buttonEvent 0026  
                  i1l894 00DE                    i1l896 00E2                    i1l898 00EC  
                  u20_20 00F9                    u20_21 00F8                    u18_20 00E2  
                  u18_21 00E1                    u19_20 00EC                    u19_21 00EB  
                  u19_25 00E8                    _VRCON 0099          __end_of_init_uC 0122  
                  pclath 000A                    status 0003                    wtemp0 005E  
        __initialization 000C             __end_of_main 0145                   ??_main 0000  
                 _ADRESH 001E                   _ADRESL 009E                   _TRISIO 0085  
              ??_init_uC 0000                   saved_w 005E  __end_of__initialization 0013  
         __pcstackCOMMON 0000     __size_of_buttonEvent 0015               __pbssBANK0 0020  
  __end_of_thermoControl 00D6               __pmaintext 013F               __pintentry 0004  
                _TRISIO0 0428                  _TRISIO1 0429                  _TRISIO4 042C  
                _TRISIO5 042D                _ADC_Value 0022               _initTimer0 0137  
                __ptext1 0102                  __ptext2 0137                  __ptext3 0122  
                __ptext4 0015                  __ptext5 00D6             __size_of_ISR 002C  
                _init_uC 0102     end_of_initialization 0013                _PWM_Value 0024  
            ?_initTimer0 0026      start_initialization 000C              __end_of_ISR 0102  
          ??_buttonEvent 0000                ___latbits 0000            __pcstackBANK0 0026  
    __size_of_initTimer0 0008                 ?_init_uC 0026   __size_of_thermoControl 00C1  
    __end_of_buttonEvent 0137        interrupt_function 0004            _thermoControl 0015  
           ??_initTimer0 0028              _buttonEvent 0122         __size_of_init_uC 0020  
     __end_of_initTimer0 013F            __size_of_main 0006           ?_thermoControl 0028  
             _INTCONbits 000B                 intlevel1 0000               _OPTION_REG 0081  
        ??_thermoControl 002A  
