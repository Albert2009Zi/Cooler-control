

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Mar 08 21:12:59 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x5E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 29/04/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC12F675 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0019                     	;# 
    63  001E                     	;# 
    64  001F                     	;# 
    65  0081                     	;# 
    66  0085                     	;# 
    67  008C                     	;# 
    68  008E                     	;# 
    69  0090                     	;# 
    70  0095                     	;# 
    71  0096                     	;# 
    72  0096                     	;# 
    73  0099                     	;# 
    74  009A                     	;# 
    75  009A                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  009F                     	;# 
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0019                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  008C                     	;# 
   100  008E                     	;# 
   101  0090                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0096                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0019                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  0081                     	;# 
   130  0085                     	;# 
   131  008C                     	;# 
   132  008E                     	;# 
   133  0090                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0096                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009A                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  009F                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0019                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  008C                     	;# 
   164  008E                     	;# 
   165  0090                     	;# 
   166  0095                     	;# 
   167  0096                     	;# 
   168  0096                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009A                     	;# 
   172  009B                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  009F                     	;# 
   177  0000                     nosup@@$_$_CONFIG	set	0	;# 
   178  0000                     	;# 
   179  0001                     	;# 
   180  0002                     	;# 
   181  0003                     	;# 
   182  0004                     	;# 
   183  0005                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000E                     	;# 
   188  000E                     	;# 
   189  000F                     	;# 
   190  0010                     	;# 
   191  0019                     	;# 
   192  001E                     	;# 
   193  001F                     	;# 
   194  0081                     	;# 
   195  0085                     	;# 
   196  008C                     	;# 
   197  008E                     	;# 
   198  0090                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0096                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  000B                     _INTCONbits	set	11
   211  001E                     _ADRESH	set	30
   212  0005                     _GPIO	set	5
   213  0019                     _CMCON	set	25
   214  005D                     _T0IE	set	93
   215  0066                     _ADIF	set	102
   216  00F9                     _GO	set	249
   217  005F                     _GIE	set	95
   218  00FA                     _CHS0	set	250
   219  00FB                     _CHS1	set	251
   220  00FE                     _VCFG	set	254
   221  00FF                     _ADFM	set	255
   222  00F8                     _ADON	set	248
   223  002C                     _GP4	set	44
   224  002D                     _GP5	set	45
   225  0081                     _OPTION_REG	set	129
   226  009E                     _ADRESL	set	158
   227  009F                     _ANSEL	set	159
   228  0085                     _TRISIO	set	133
   229  0466                     _ADIE	set	1126
   230  0429                     _TRISIO1	set	1065
   231  0428                     _TRISIO0	set	1064
   232  042C                     _TRISIO4	set	1068
   233  042D                     _TRISIO5	set	1069
   234                           
   235                           	psect	cinit
   236  000E                     start_initialization:	
   237                           ; #config settings
   238                           
   239  000E                     __initialization:
   240                           
   241                           ; Clear objects allocated to BANK0
   242  000E  1283               	bcf	3,5	;RP0=0, select bank0
   243  000F  01A5               	clrf	__pbssBANK0& (0+127)
   244  0010  01A6               	clrf	(__pbssBANK0+1)& (0+127)
   245  0011  01A7               	clrf	(__pbssBANK0+2)& (0+127)
   246  0012                     end_of_initialization:	
   247                           ;End of C runtime variable initialization code
   248                           
   249  0012                     __end_of__initialization:
   250  0012  0183               	clrf	3
   251  0013  2862               	ljmp	_main	;jump to C main() function
   252                           
   253                           	psect	bssBANK0
   254  0025                     __pbssBANK0:
   255  0025                     _ADC_Value:
   256  0025                     	ds	2
   257  0027                     _PWM_Value:
   258  0027                     	ds	1
   259                           
   260                           	psect	cstackCOMMON
   261  0000                     __pcstackCOMMON:
   262  0000                     ??_Init_uC:
   263  0000                     ??_main:	
   264                           ; 1 bytes @ 0x0
   265                           
   266                           
   267                           	psect	cstackBANK0
   268  0020                     __pcstackBANK0:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0020                     ?_Init_uC:
   272  0020                     ?_ISR:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0020                     ??_ISR:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0020                     ?_InitTimer0:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0020                     ?_main:	
   282                           ; 1 bytes @ 0x0
   283                           
   284                           
   285                           ; 1 bytes @ 0x0
   286  0020                     	ds	4
   287  0024                     ??_InitTimer0:
   288                           
   289                           ; 1 bytes @ 0x4
   290  0024                     	ds	1
   291                           
   292                           	psect	maintext
   293  0062                     __pmaintext:	
   294 ;;
   295 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   296 ;;
   297 ;; *************** function _main *****************
   298 ;; Defined at:
   299 ;;		line 10 in file "main.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, status,2, status,0, pclath, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : B00/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMMON   BANK0
   313 ;;      Params:         0       0
   314 ;;      Locals:         0       0
   315 ;;      Temps:          0       0
   316 ;;      Totals:         0       0
   317 ;;Total ram usage:        0 bytes
   318 ;; Hardware stack levels required when called:    2
   319 ;; This function calls:
   320 ;;		_InitTimer0
   321 ;;		_Init_uC
   322 ;; This function is called by:
   323 ;;		Startup code after reset
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           
   328                           ;psect for function _main
   329  0062                     _main:
   330  0062                     l781:	
   331                           ;incstack = 0
   332                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   333                           
   334                           
   335                           ;main.c: 12:  InitTimer0();
   336  0062  206D               	fcall	_InitTimer0
   337                           
   338                           ;main.c: 13:     Init_uC();
   339  0063  2044               	fcall	_Init_uC
   340  0064                     l783:
   341                           
   342                           ;main.c: 14:     (INTCONbits.GIE = 1);
   343  0064  178B               	bsf	11,7	;volatile
   344  0065                     l785:
   345                           
   346                           ;main.c: 16:  {;main.c: 17:         if (GP5 == 0)
   347  0065  1283               	bcf	3,5	;RP0=0, select bank0
   348  0066  1A85               	btfsc	5,5	;volatile
   349  0067  2869               	goto	u61
   350  0068  286A               	goto	u60
   351  0069                     u61:
   352  0069  2865               	goto	l785
   353  006A                     u60:
   354  006A                     l787:
   355                           
   356                           ;main.c: 18:         {GP4 = 1;}
   357  006A  1605               	bsf	5,4	;volatile
   358  006B  2865               	goto	l785
   359  006C  280D               	ljmp	start
   360  006D                     __end_of_main:
   361                           
   362                           	psect	text1
   363  0044                     __ptext1:	
   364 ;; *************** function _Init_uC *****************
   365 ;; Defined at:
   366 ;;		line 4 in file "ADC.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;		None
   369 ;; Auto vars:     Size  Location     Type
   370 ;;		None
   371 ;; Return value:  Size  Location     Type
   372 ;;                  1    wreg      void 
   373 ;; Registers used:
   374 ;;		wreg, status,2
   375 ;; Tracked objects:
   376 ;;		On entry : 0/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMMON   BANK0
   380 ;;      Params:         0       0
   381 ;;      Locals:         0       0
   382 ;;      Temps:          0       0
   383 ;;      Totals:         0       0
   384 ;;Total ram usage:        0 bytes
   385 ;; Hardware stack levels used:    1
   386 ;; Hardware stack levels required when called:    1
   387 ;; This function calls:
   388 ;;		Nothing
   389 ;; This function is called by:
   390 ;;		_main
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394                           
   395                           ;psect for function _Init_uC
   396  0044                     _Init_uC:
   397  0044                     l735:	
   398                           ;incstack = 0
   399                           ; Regs used in _Init_uC: [wreg+status,2]
   400                           
   401                           
   402                           ;ADC.c: 6:  CMCON = 0x07;
   403  0044  3007               	movlw	7
   404  0045  1283               	bcf	3,5	;RP0=0, select bank0
   405  0046  0099               	movwf	25	;volatile
   406  0047                     l737:
   407                           
   408                           ;ADC.c: 9:     TRISIO = 0;
   409  0047  1683               	bsf	3,5	;RP0=1, select bank1
   410  0048  0185               	clrf	5	;volatile
   411  0049                     l739:
   412                           
   413                           ;ADC.c: 10:     GPIO = 0;
   414  0049  1283               	bcf	3,5	;RP0=0, select bank0
   415  004A  0185               	clrf	5	;volatile
   416  004B                     l741:
   417                           
   418                           ;ADC.c: 13:     TRISIO5 = 0;
   419  004B  1683               	bsf	3,5	;RP0=1, select bank1
   420  004C  1285               	bcf	5,5	;volatile
   421  004D                     l743:
   422                           
   423                           ;ADC.c: 14:     GP5 = 1;
   424  004D  1283               	bcf	3,5	;RP0=0, select bank0
   425  004E  1685               	bsf	5,5	;volatile
   426  004F                     l745:
   427                           
   428                           ;ADC.c: 17:     TRISIO4 = 0;
   429  004F  1683               	bsf	3,5	;RP0=1, select bank1
   430  0050  1205               	bcf	5,4	;volatile
   431  0051                     l747:
   432                           
   433                           ;ADC.c: 18:     GP4 = 0;
   434  0051  1283               	bcf	3,5	;RP0=0, select bank0
   435  0052  1205               	bcf	5,4	;volatile
   436  0053                     l749:
   437                           
   438                           ;ADC.c: 22:     ADON = 1;
   439  0053  141F               	bsf	31,0	;volatile
   440  0054                     l751:
   441                           
   442                           ;ADC.c: 23:     ADFM = 1;
   443  0054  179F               	bsf	31,7	;volatile
   444  0055                     l753:
   445                           
   446                           ;ADC.c: 24:     VCFG = 0;
   447  0055  131F               	bcf	31,6	;volatile
   448  0056                     l755:
   449                           
   450                           ;ADC.c: 25:     TRISIO0 = 1;
   451  0056  1683               	bsf	3,5	;RP0=1, select bank1
   452  0057  1405               	bsf	5,0	;volatile
   453  0058                     l757:
   454                           
   455                           ;ADC.c: 26:     TRISIO1 = 1;
   456  0058  1485               	bsf	5,1	;volatile
   457                           
   458                           ;ADC.c: 28:     ANSEL = 0b00110011;
   459  0059  3033               	movlw	51
   460  005A  009F               	movwf	31	;volatile
   461  005B                     l759:
   462                           
   463                           ;ADC.c: 30:     CHS1 = 0;
   464  005B  1283               	bcf	3,5	;RP0=0, select bank0
   465  005C  119F               	bcf	31,3	;volatile
   466  005D                     l761:
   467                           
   468                           ;ADC.c: 31:     CHS0 = 1;
   469  005D  151F               	bsf	31,2	;volatile
   470  005E                     l763:
   471                           
   472                           ;ADC.c: 32:     ADIE = 1;
   473  005E  1683               	bsf	3,5	;RP0=1, select bank1
   474  005F  170C               	bsf	12,6	;volatile
   475  0060                     l765:
   476                           
   477                           ;ADC.c: 33:     GIE = 1;
   478  0060  178B               	bsf	11,7	;volatile
   479  0061                     l37:
   480  0061  0008               	return
   481  0062                     __end_of_Init_uC:
   482                           
   483                           	psect	text2
   484  006D                     __ptext2:	
   485 ;; *************** function _InitTimer0 *****************
   486 ;; Defined at:
   487 ;;		line 4 in file "timer0.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;		None
   492 ;; Return value:  Size  Location     Type
   493 ;;                  1    wreg      void 
   494 ;; Registers used:
   495 ;;		wreg, status,2, status,0
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMMON   BANK0
   501 ;;      Params:         0       0
   502 ;;      Locals:         0       0
   503 ;;      Temps:          0       1
   504 ;;      Totals:         0       1
   505 ;;Total ram usage:        1 bytes
   506 ;; Hardware stack levels used:    1
   507 ;; Hardware stack levels required when called:    1
   508 ;; This function calls:
   509 ;;		Nothing
   510 ;; This function is called by:
   511 ;;		_main
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515                           
   516                           ;psect for function _InitTimer0
   517  006D                     _InitTimer0:
   518  006D                     l767:	
   519                           ;incstack = 0
   520                           ; Regs used in _InitTimer0: [wreg+status,2+status,0]
   521                           
   522                           
   523                           ;timer0.c: 7:  OPTION_REG &= 0xC0;
   524  006D  30C0               	movlw	192
   525  006E  1283               	bcf	3,5	;RP0=0, select bank0
   526  006F  00A4               	movwf	??_InitTimer0
   527  0070  0824               	movf	??_InitTimer0,w
   528  0071  1683               	bsf	3,5	;RP0=1, select bank1
   529  0072  0581               	andwf	1,f	;volatile
   530  0073                     l769:
   531                           
   532                           ;timer0.c: 9:  T0IE = 1;
   533  0073  168B               	bsf	11,5	;volatile
   534  0074                     l70:
   535  0074  0008               	return
   536  0075                     __end_of_InitTimer0:
   537                           
   538                           	psect	text3
   539  0014                     __ptext3:	
   540 ;; *************** function _ISR *****************
   541 ;; Defined at:
   542 ;;		line 9 in file "interrupt.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;		None
   545 ;; Auto vars:     Size  Location     Type
   546 ;;		None
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      void 
   549 ;; Registers used:
   550 ;;		wreg, btemp+1
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMMON   BANK0
   556 ;;      Params:         0       0
   557 ;;      Locals:         0       0
   558 ;;      Temps:          0       4
   559 ;;      Totals:         0       4
   560 ;;Total ram usage:        4 bytes
   561 ;; Hardware stack levels used:    1
   562 ;; This function calls:
   563 ;;		Nothing
   564 ;; This function is called by:
   565 ;;		Interrupt level 1
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           
   570                           ;psect for function _ISR
   571  0014                     _ISR:
   572  0014                     i1l771:
   573                           
   574                           ;interrupt.c: 11:     _delay((unsigned long)((10)*(4000000/4000000.0)));
   575  0014  3003               	movlw	3
   576  0015  00A0               	movwf	??_ISR
   577  0016                     u7_27:
   578  0016  0BA0               	decfsz	??_ISR,f
   579  0017  2816               	goto	u7_27
   580  0018                     i1l773:
   581                           
   582                           ;interrupt.c: 12:     GO = 1;
   583  0018  1283               	bcf	3,5	;RP0=0, select bank0
   584  0019  149F               	bsf	31,1	;volatile
   585  001A                     i1l58:	
   586                           ;interrupt.c: 13:     while(!ADIF);
   587                           
   588  001A  1F0C               	btfss	12,6	;volatile
   589  001B  281D               	goto	u4_21
   590  001C  281E               	goto	u4_20
   591  001D                     u4_21:
   592  001D  281A               	goto	i1l58
   593  001E                     u4_20:
   594  001E                     i1l775:
   595                           
   596                           ;interrupt.c: 14:     _delay((unsigned long)((10)*(4000000/4000000.0)));
   597  001E  3003               	movlw	3
   598  001F  00A0               	movwf	??_ISR
   599  0020                     u8_27:
   600  0020  0BA0               	decfsz	??_ISR,f
   601  0021  2820               	goto	u8_27
   602                           
   603                           ;interrupt.c: 16:     ADC_Value = (int) ((ADRESH<<8)+ADRESL);
   604  0022  1283               	bcf	3,5	;RP0=0, select bank0
   605  0023  081E               	movf	30,w	;volatile
   606  0024  00A6               	movwf	_ADC_Value+1
   607  0025  1683               	bsf	3,5	;RP0=1, select bank1
   608  0026  081E               	movf	30,w	;volatile
   609  0027  1283               	bcf	3,5	;RP0=0, select bank0
   610  0028  00A5               	movwf	_ADC_Value
   611  0029                     i1l777:
   612                           
   613                           ;interrupt.c: 18:     if (ADC_Value > 470)
   614  0029  0826               	movf	_ADC_Value+1,w
   615  002A  3A80               	xorlw	128
   616  002B  00DF               	movwf	btemp+1
   617  002C  3081               	movlw	129
   618  002D  025F               	subwf	btemp+1,w
   619  002E  1D03               	skipz
   620  002F  2832               	goto	u5_25
   621  0030  30D7               	movlw	215
   622  0031  0225               	subwf	_ADC_Value,w
   623  0032                     u5_25:
   624  0032  1C03               	skipc
   625  0033  2835               	goto	u5_21
   626  0034  2836               	goto	u5_20
   627  0035                     u5_21:
   628  0035  2839               	goto	i1l61
   629  0036                     u5_20:
   630  0036                     i1l779:
   631                           
   632                           ;interrupt.c: 19:           {GP5 = 0;}
   633  0036  1283               	bcf	3,5	;RP0=0, select bank0
   634  0037  1285               	bcf	5,5	;volatile
   635  0038  283B               	goto	i1l63
   636  0039                     i1l61:	
   637                           ;interrupt.c: 20:     else {GP5 = 1;}
   638                           
   639  0039  1283               	bcf	3,5	;RP0=0, select bank0
   640  003A  1685               	bsf	5,5	;volatile
   641  003B                     i1l63:
   642  003B  0823               	movf	??_ISR+3,w
   643  003C  00DF               	movwf	btemp+1
   644  003D  0822               	movf	??_ISR+2,w
   645  003E  008A               	movwf	10
   646  003F  0E21               	swapf	??_ISR+1,w
   647  0040  0083               	movwf	3
   648  0041  0EDE               	swapf	btemp,f
   649  0042  0E5E               	swapf	btemp,w
   650  0043  0009               	retfie
   651  0044                     __end_of_ISR:
   652  005E                     btemp	set	94	;btemp
   653  005E                     wtemp0	set	94
   654                           
   655                           	psect	intentry
   656  0004                     __pintentry:	
   657                           ;incstack = 0
   658                           ; Regs used in _ISR: [wreg+btemp+1]
   659                           
   660  0004                     interrupt_function:
   661  005E                     saved_w	set	btemp
   662  0004  00DE               	movwf	btemp
   663  0005  0E03               	swapf	3,w
   664  0006  1283               	bcf	3,5	;RP0=0, select bank0
   665  0007  00A1               	movwf	??_ISR+1
   666  0008  080A               	movf	10,w
   667  0009  00A2               	movwf	??_ISR+2
   668  000A  085F               	movf	btemp+1,w
   669  000B  00A3               	movwf	??_ISR+3
   670  000C  2814               	ljmp	_ISR

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      5       8

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_InitTimer0

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _InitTimer0
                            _Init_uC
 ---------------------------------------------------------------------------------
 (1) _Init_uC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitTimer0
   _Init_uC

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      5       8       4       12.9%
ABS                  0      0       8       5        0.0%
DATA                 0      0       8       6        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Mar 08 21:12:59 2022

                     l37 0061                       l70 0074                       _GO 00F9  
                     u60 006A                       u61 0069                      l741 004B  
                    l751 0054                      l743 004D                      l735 0044  
                    l761 005D                      l753 0055                      l745 004F  
                    l737 0047                      l763 005E                      l755 0056  
                    l747 0051                      l739 0049                      l765 0060  
                    l757 0058                      l749 0053                      l781 0062  
                    l767 006D                      l759 005B                      l783 0064  
                    l769 0073                      l785 0065                      l787 006A  
                    _GP4 002C                      _GP5 002D                      _GIE 005F  
                    _ISR 0014                     ?_ISR 0020                     _ADIE 0466  
                   _ADIF 0066                     _ADFM 00FF                     _ADON 00F8  
                   _CHS0 00FA                     _CHS1 00FB                     _T0IE 005D  
                   _GPIO 0005                     i1l61 0039                     i1l63 003B  
                   i1l58 001A                     _VCFG 00FE                     u4_20 001E  
                   u4_21 001D                     u5_20 0036                     u5_21 0035  
                   u5_25 0032                     u7_27 0016                     u8_27 0020  
                   _main 0062                     btemp 005E                     start 000D  
        __end_of_Init_uC 0062                    ??_ISR 0020         nosup@@$_$_CONFIG 0000  
                  ?_main 0020                    _CMCON 0019                    _ANSEL 009F  
                  i1l771 0014                    i1l773 0018                    i1l775 001E  
                  i1l777 0029                    i1l779 0036                    pclath 000A  
                  status 0003                    wtemp0 005E          __initialization 000E  
             _InitTimer0 006D             __end_of_main 006D                   ??_main 0000  
                 _ADRESH 001E                   _ADRESL 009E                   _TRISIO 0085  
              ??_Init_uC 0000                   saved_w 005E  __end_of__initialization 0012  
            ?_InitTimer0 0020           __pcstackCOMMON 0000               __pbssBANK0 0025  
             __pmaintext 0062               __pintentry 0004                  _TRISIO0 0428  
                _TRISIO1 0429                  _TRISIO4 042C                  _TRISIO5 042D  
    __size_of_InitTimer0 0008                  _Init_uC 0044                _ADC_Value 0025  
                __ptext1 0044                  __ptext2 006D                  __ptext3 0014  
           __size_of_ISR 0030     end_of_initialization 0012                _PWM_Value 0027  
           ??_InitTimer0 0024      start_initialization 000E              __end_of_ISR 0044  
     __end_of_InitTimer0 0075                ___latbits 0000            __pcstackBANK0 0020  
               ?_Init_uC 0020        interrupt_function 0004         __size_of_Init_uC 001E  
          __size_of_main 000B               _INTCONbits 000B                 intlevel1 0000  
             _OPTION_REG 0081  
