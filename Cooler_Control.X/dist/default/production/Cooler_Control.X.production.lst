

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Mar 14 22:12:10 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x5E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 29/04/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC12F675 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0019                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  0081                     	;# 
    68  0085                     	;# 
    69  008C                     	;# 
    70  008E                     	;# 
    71  0090                     	;# 
    72  0095                     	;# 
    73  0096                     	;# 
    74  0096                     	;# 
    75  0099                     	;# 
    76  009A                     	;# 
    77  009A                     	;# 
    78  009B                     	;# 
    79  009C                     	;# 
    80  009D                     	;# 
    81  009E                     	;# 
    82  009F                     	;# 
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0019                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  008C                     	;# 
   102  008E                     	;# 
   103  0090                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0096                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0019                     	;# 
   129  001E                     	;# 
   130  001F                     	;# 
   131  0081                     	;# 
   132  0085                     	;# 
   133  008C                     	;# 
   134  008E                     	;# 
   135  0090                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0096                     	;# 
   139  0099                     	;# 
   140  009A                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  009F                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0019                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  008C                     	;# 
   166  008E                     	;# 
   167  0090                     	;# 
   168  0095                     	;# 
   169  0096                     	;# 
   170  0096                     	;# 
   171  0099                     	;# 
   172  009A                     	;# 
   173  009A                     	;# 
   174  009B                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  009F                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  000A                     	;# 
   186  000B                     	;# 
   187  000C                     	;# 
   188  000E                     	;# 
   189  000E                     	;# 
   190  000F                     	;# 
   191  0010                     	;# 
   192  0019                     	;# 
   193  001E                     	;# 
   194  001F                     	;# 
   195  0081                     	;# 
   196  0085                     	;# 
   197  008C                     	;# 
   198  008E                     	;# 
   199  0090                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0096                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  000B                     _INTCONbits	set	11
   212  0001                     _TMR0	set	1
   213  001E                     _ADRESH	set	30
   214  0005                     _GPIO	set	5
   215  0019                     _CMCON	set	25
   216  005D                     _T0IE	set	93
   217  005A                     _T0IF	set	90
   218  0066                     _ADIF	set	102
   219  00F9                     _GO	set	249
   220  005F                     _GIE	set	95
   221  00FA                     _CHS0	set	250
   222  00FB                     _CHS1	set	251
   223  00FE                     _VCFG	set	254
   224  00FF                     _ADFM	set	255
   225  00F8                     _ADON	set	248
   226  002C                     _GP4	set	44
   227  002D                     _GP5	set	45
   228  0081                     _OPTION_REG	set	129
   229  009E                     _ADRESL	set	158
   230  009F                     _ANSEL	set	159
   231  0085                     _TRISIO	set	133
   232  0099                     _VRCON	set	153
   233  0429                     _TRISIO1	set	1065
   234  0428                     _TRISIO0	set	1064
   235  042C                     _TRISIO4	set	1068
   236  042D                     _TRISIO5	set	1069
   237                           
   238                           	psect	cinit
   239  000C                     start_initialization:	
   240                           ; #config settings
   241                           
   242  000C                     __initialization:
   243                           
   244                           ; Clear objects allocated to BANK0
   245  000C  1283               	bcf	3,5	;RP0=0, select bank0
   246  000D  01A0               	clrf	__pbssBANK0& (0+127)
   247  000E  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   248  000F  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   249  0010  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   250  0011  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   251  0012                     end_of_initialization:	
   252                           ;End of C runtime variable initialization code
   253                           
   254  0012                     __end_of__initialization:
   255  0012  0183               	clrf	3
   256  0013  288D               	ljmp	_main	;jump to C main() function
   257                           
   258                           	psect	bssBANK0
   259  0020                     __pbssBANK0:
   260  0020                     _ADC_Value:
   261  0020                     	ds	2
   262  0022                     _Button_Value:
   263  0022                     	ds	2
   264  0024                     _PWM_Value:
   265  0024                     	ds	1
   266                           
   267                           	psect	cstackCOMMON
   268  0000                     __pcstackCOMMON:
   269  0000                     ??_Init_uC:
   270  0000                     ??_main:	
   271                           ; 1 bytes @ 0x0
   272                           
   273                           
   274                           	psect	cstackBANK0
   275  0025                     __pcstackBANK0:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0025                     ?_Init_uC:
   279  0025                     ?_measurements:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0025                     ?_ISR:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0025                     ??_ISR:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0025                     ?_InitTimer0:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0025                     ?_main:	
   292                           ; 1 bytes @ 0x0
   293                           
   294                           
   295                           ; 1 bytes @ 0x0
   296  0025                     	ds	2
   297  0027                     ??_measurements:
   298  0027                     ??_InitTimer0:	
   299                           ; 1 bytes @ 0x2
   300                           
   301                           
   302                           ; 1 bytes @ 0x2
   303  0027                     	ds	2
   304                           
   305                           	psect	maintext
   306  008D                     __pmaintext:	
   307 ;;
   308 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   309 ;;
   310 ;; *************** function _main *****************
   311 ;; Defined at:
   312 ;;		line 28 in file "main.c"
   313 ;; Parameters:    Size  Location     Type
   314 ;;		None
   315 ;; Auto vars:     Size  Location     Type
   316 ;;		None
   317 ;; Return value:  Size  Location     Type
   318 ;;                  1    wreg      void 
   319 ;; Registers used:
   320 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   321 ;; Tracked objects:
   322 ;;		On entry : B00/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMMON   BANK0
   326 ;;      Params:         0       0
   327 ;;      Locals:         0       0
   328 ;;      Temps:          0       0
   329 ;;      Totals:         0       0
   330 ;;Total ram usage:        0 bytes
   331 ;; Hardware stack levels required when called:    2
   332 ;; This function calls:
   333 ;;		_InitTimer0
   334 ;;		_Init_uC
   335 ;;		_measurements
   336 ;; This function is called by:
   337 ;;		Startup code after reset
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           
   342                           ;psect for function _main
   343  008D                     _main:
   344  008D                     l825:	
   345                           ;incstack = 0
   346                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   347                           
   348  008D  2085               	fcall	_InitTimer0
   349  008E  204C               	fcall	_Init_uC
   350  008F                     l827:
   351  008F  178B               	bsf	11,7	;volatile
   352  0090                     l829:
   353  0090  2014               	fcall	_measurements
   354  0091  2890               	goto	l829
   355  0092  280B               	ljmp	start
   356  0093                     __end_of_main:
   357                           
   358                           	psect	text1
   359  0014                     __ptext1:	
   360 ;; *************** function _measurements *****************
   361 ;; Defined at:
   362 ;;		line 44 in file "ADC.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, status,2, btemp+1
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMMON   BANK0
   376 ;;      Params:         0       0
   377 ;;      Locals:         0       0
   378 ;;      Temps:          0       2
   379 ;;      Totals:         0       2
   380 ;;Total ram usage:        2 bytes
   381 ;; Hardware stack levels used:    1
   382 ;; Hardware stack levels required when called:    1
   383 ;; This function calls:
   384 ;;		Nothing
   385 ;; This function is called by:
   386 ;;		_main
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           
   391                           ;psect for function _measurements
   392  0014                     _measurements:
   393  0014                     l793:	
   394                           ;incstack = 0
   395                           ; Regs used in _measurements: [wreg+status,2+btemp+1]
   396                           
   397                           
   398                           ;ADC.c: 46:     _delay((unsigned long)((10)*(4000000/4000.0)));
   399  0014  300D               	movlw	13
   400  0015  1283               	bcf	3,5	;RP0=0, select bank0
   401  0016  00A8               	movwf	??_measurements+1
   402  0017  30FB               	movlw	251
   403  0018  00A7               	movwf	??_measurements
   404  0019                     u97:
   405  0019  0BA7               	decfsz	??_measurements,f
   406  001A  2819               	goto	u97
   407  001B  0BA8               	decfsz	??_measurements+1,f
   408  001C  2819               	goto	u97
   409  001D  281E               	nop2
   410  001E                     l795:
   411                           
   412                           ;ADC.c: 47:     GO = 1;
   413  001E  1283               	bcf	3,5	;RP0=0, select bank0
   414  001F  149F               	bsf	31,1	;volatile
   415  0020                     l54:	
   416                           ;ADC.c: 48:     while(!ADIF);
   417                           
   418  0020  1F0C               	btfss	12,6	;volatile
   419  0021  2823               	goto	u41
   420  0022  2824               	goto	u40
   421  0023                     u41:
   422  0023  2820               	goto	l54
   423  0024                     u40:
   424  0024                     l797:
   425                           
   426                           ;ADC.c: 49:     _delay((unsigned long)((10)*(4000000/4000.0)));
   427  0024  300D               	movlw	13
   428  0025  00A8               	movwf	??_measurements+1
   429  0026  30FB               	movlw	251
   430  0027  00A7               	movwf	??_measurements
   431  0028                     u107:
   432  0028  0BA7               	decfsz	??_measurements,f
   433  0029  2828               	goto	u107
   434  002A  0BA8               	decfsz	??_measurements+1,f
   435  002B  2828               	goto	u107
   436  002C  282D               	nop2
   437                           
   438                           ;ADC.c: 50:     Button_Value = (int) ((ADRESH<<8)+ADRESL);
   439  002D  1283               	bcf	3,5	;RP0=0, select bank0
   440  002E  081E               	movf	30,w	;volatile
   441  002F  00A3               	movwf	_Button_Value+1
   442  0030  1683               	bsf	3,5	;RP0=1, select bank1
   443  0031  081E               	movf	30,w	;volatile
   444  0032  1283               	bcf	3,5	;RP0=0, select bank0
   445  0033  00A2               	movwf	_Button_Value
   446  0034                     l799:
   447                           
   448                           ;ADC.c: 52:     if (Button_Value < 460)
   449  0034  0823               	movf	_Button_Value+1,w
   450  0035  3A80               	xorlw	128
   451  0036  00DF               	movwf	btemp+1
   452  0037  3081               	movlw	129
   453  0038  025F               	subwf	btemp+1,w
   454  0039  1D03               	skipz
   455  003A  283D               	goto	u55
   456  003B  30CC               	movlw	204
   457  003C  0222               	subwf	_Button_Value,w
   458  003D                     u55:
   459  003D  1803               	skipnc
   460  003E  2840               	goto	u51
   461  003F  2841               	goto	u50
   462  0040                     u51:
   463  0040  2845               	goto	l57
   464  0041                     u50:
   465  0041                     l801:
   466                           
   467                           ;ADC.c: 53:           {GP5 = 1;
   468  0041  1283               	bcf	3,5	;RP0=0, select bank0
   469  0042  1685               	bsf	5,5	;volatile
   470  0043                     l803:
   471                           
   472                           ;ADC.c: 54:            PWM_Value = 0;}
   473  0043  01A4               	clrf	_PWM_Value
   474  0044  284B               	goto	l59
   475  0045                     l57:	
   476                           ;ADC.c: 55:     else {GP5 = 0;
   477                           
   478  0045  1283               	bcf	3,5	;RP0=0, select bank0
   479  0046  1285               	bcf	5,5	;volatile
   480  0047                     l805:
   481                           
   482                           ;ADC.c: 56:            PWM_Value = 127;}
   483  0047  307F               	movlw	127
   484  0048  00A7               	movwf	??_measurements
   485  0049  0827               	movf	??_measurements,w
   486  004A  00A4               	movwf	_PWM_Value
   487  004B                     l59:
   488  004B  0008               	return
   489  004C                     __end_of_measurements:
   490                           
   491                           	psect	text2
   492  004C                     __ptext2:	
   493 ;; *************** function _Init_uC *****************
   494 ;; Defined at:
   495 ;;		line 11 in file "ADC.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, status,2
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMMON   BANK0
   509 ;;      Params:         0       0
   510 ;;      Locals:         0       0
   511 ;;      Temps:          0       0
   512 ;;      Totals:         0       0
   513 ;;Total ram usage:        0 bytes
   514 ;; Hardware stack levels used:    1
   515 ;; Hardware stack levels required when called:    1
   516 ;; This function calls:
   517 ;;		Nothing
   518 ;; This function is called by:
   519 ;;		_main
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           
   524                           ;psect for function _Init_uC
   525  004C                     _Init_uC:
   526  004C                     l759:	
   527                           ;incstack = 0
   528                           ; Regs used in _Init_uC: [wreg+status,2]
   529                           
   530                           
   531                           ;ADC.c: 13:  CMCON = 0x07;
   532  004C  3007               	movlw	7
   533  004D  1283               	bcf	3,5	;RP0=0, select bank0
   534  004E  0099               	movwf	25	;volatile
   535  004F                     l761:
   536                           
   537                           ;ADC.c: 14:     VRCON = 0x00;
   538  004F  1683               	bsf	3,5	;RP0=1, select bank1
   539  0050  0199               	clrf	25	;volatile
   540  0051                     l763:
   541                           
   542                           ;ADC.c: 17:     TRISIO = 0;
   543  0051  0185               	clrf	5	;volatile
   544  0052                     l765:
   545                           
   546                           ;ADC.c: 18:     GPIO = 0;
   547  0052  1283               	bcf	3,5	;RP0=0, select bank0
   548  0053  0185               	clrf	5	;volatile
   549  0054                     l767:
   550                           
   551                           ;ADC.c: 21:     TRISIO5 = 0;
   552  0054  1683               	bsf	3,5	;RP0=1, select bank1
   553  0055  1285               	bcf	5,5	;volatile
   554  0056                     l769:
   555                           
   556                           ;ADC.c: 22:     GP5 = 0;
   557  0056  1283               	bcf	3,5	;RP0=0, select bank0
   558  0057  1285               	bcf	5,5	;volatile
   559  0058                     l771:
   560                           
   561                           ;ADC.c: 25:     TRISIO4 = 0;
   562  0058  1683               	bsf	3,5	;RP0=1, select bank1
   563  0059  1205               	bcf	5,4	;volatile
   564  005A                     l773:
   565                           
   566                           ;ADC.c: 26:     GP4 = 0;
   567  005A  1283               	bcf	3,5	;RP0=0, select bank0
   568  005B  1205               	bcf	5,4	;volatile
   569  005C                     l775:
   570                           
   571                           ;ADC.c: 30:     ADON = 1;
   572  005C  141F               	bsf	31,0	;volatile
   573  005D                     l777:
   574                           
   575                           ;ADC.c: 31:     ADFM = 1;
   576  005D  179F               	bsf	31,7	;volatile
   577  005E                     l779:
   578                           
   579                           ;ADC.c: 32:     VCFG = 0;
   580  005E  131F               	bcf	31,6	;volatile
   581  005F                     l781:
   582                           
   583                           ;ADC.c: 33:     TRISIO0 = 1;
   584  005F  1683               	bsf	3,5	;RP0=1, select bank1
   585  0060  1405               	bsf	5,0	;volatile
   586  0061                     l783:
   587                           
   588                           ;ADC.c: 34:     TRISIO1 = 1;
   589  0061  1485               	bsf	5,1	;volatile
   590  0062                     l785:
   591                           
   592                           ;ADC.c: 36:     ANSEL = 0b00110011;
   593  0062  3033               	movlw	51
   594  0063  009F               	movwf	31	;volatile
   595  0064                     l787:
   596                           
   597                           ;ADC.c: 38:     CHS1 = 0;
   598  0064  1283               	bcf	3,5	;RP0=0, select bank0
   599  0065  119F               	bcf	31,3	;volatile
   600  0066                     l789:
   601                           
   602                           ;ADC.c: 39:     CHS0 = 1;
   603  0066  151F               	bsf	31,2	;volatile
   604  0067                     l791:
   605                           
   606                           ;ADC.c: 40:     GIE = 1;
   607  0067  178B               	bsf	11,7	;volatile
   608  0068                     l51:
   609  0068  0008               	return
   610  0069                     __end_of_Init_uC:
   611                           
   612                           	psect	text3
   613  0085                     __ptext3:	
   614 ;; *************** function _InitTimer0 *****************
   615 ;; Defined at:
   616 ;;		line 4 in file "timer0.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, status,2, status,0
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0
   630 ;;      Params:         0       0
   631 ;;      Locals:         0       0
   632 ;;      Temps:          0       1
   633 ;;      Totals:         0       1
   634 ;;Total ram usage:        1 bytes
   635 ;; Hardware stack levels used:    1
   636 ;; Hardware stack levels required when called:    1
   637 ;; This function calls:
   638 ;;		Nothing
   639 ;; This function is called by:
   640 ;;		_main
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           
   645                           ;psect for function _InitTimer0
   646  0085                     _InitTimer0:
   647  0085                     l807:	
   648                           ;incstack = 0
   649                           ; Regs used in _InitTimer0: [wreg+status,2+status,0]
   650                           
   651                           
   652                           ;timer0.c: 7:  OPTION_REG &= 0xC0;
   653  0085  30C0               	movlw	192
   654  0086  1283               	bcf	3,5	;RP0=0, select bank0
   655  0087  00A7               	movwf	??_InitTimer0
   656  0088  0827               	movf	??_InitTimer0,w
   657  0089  1683               	bsf	3,5	;RP0=1, select bank1
   658  008A  0581               	andwf	1,f	;volatile
   659  008B                     l809:
   660                           
   661                           ;timer0.c: 9:  T0IE = 1;
   662  008B  168B               	bsf	11,5	;volatile
   663  008C                     l83:
   664  008C  0008               	return
   665  008D                     __end_of_InitTimer0:
   666                           
   667                           	psect	text4
   668  0069                     __ptext4:	
   669 ;; *************** function _ISR *****************
   670 ;; Defined at:
   671 ;;		line 8 in file "interrupt.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, status,2, status,0
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0
   685 ;;      Params:         0       0
   686 ;;      Locals:         0       0
   687 ;;      Temps:          0       2
   688 ;;      Totals:         0       2
   689 ;;Total ram usage:        2 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; This function calls:
   692 ;;		Nothing
   693 ;; This function is called by:
   694 ;;		Interrupt level 1
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           
   699                           ;psect for function _ISR
   700  0069                     _ISR:
   701  0069                     i1l811:
   702                           
   703                           ;interrupt.c: 10:       TMR0 = PWM_Value;
   704  0069  0824               	movf	_PWM_Value,w
   705  006A  0081               	movwf	1	;volatile
   706  006B                     i1l813:
   707                           
   708                           ;interrupt.c: 11:    if(T0IF)
   709  006B  1D0B               	btfss	11,2	;volatile
   710  006C  286E               	goto	u6_21
   711  006D  286F               	goto	u6_20
   712  006E                     u6_21:
   713  006E  287E               	goto	i1l76
   714  006F                     u6_20:
   715  006F                     i1l815:
   716                           
   717                           ;interrupt.c: 12:     {;interrupt.c: 13:         if (PWM_Value == 0)
   718  006F  0824               	movf	_PWM_Value,w
   719  0070  1D03               	btfss	3,2
   720  0071  2873               	goto	u7_21
   721  0072  2874               	goto	u7_20
   722  0073                     u7_21:
   723  0073  2876               	goto	i1l819
   724  0074                     u7_20:
   725  0074                     i1l817:
   726                           
   727                           ;interrupt.c: 14:         {GP4 = 0;}
   728  0074  1205               	bcf	5,4	;volatile
   729  0075  287D               	goto	i1l823
   730  0076                     i1l819:
   731  0076  0824               	movf	_PWM_Value,w
   732  0077  1903               	btfsc	3,2
   733  0078  287A               	goto	u8_21
   734  0079  287B               	goto	u8_20
   735  007A                     u8_21:
   736  007A  287D               	goto	i1l823
   737  007B                     u8_20:
   738  007B                     i1l821:
   739                           
   740                           ;interrupt.c: 16:   {GP4 = ~GP4;}
   741  007B  3010               	movlw	16
   742  007C  0685               	xorwf	5,f
   743  007D                     i1l823:
   744                           
   745                           ;interrupt.c: 17:   T0IF = 0;
   746  007D  110B               	bcf	11,2	;volatile
   747  007E                     i1l76:
   748  007E  0826               	movf	??_ISR+1,w
   749  007F  008A               	movwf	10
   750  0080  0E25               	swapf	??_ISR,w
   751  0081  0083               	movwf	3
   752  0082  0EDE               	swapf	btemp,f
   753  0083  0E5E               	swapf	btemp,w
   754  0084  0009               	retfie
   755  0085                     __end_of_ISR:
   756  005E                     btemp	set	94	;btemp
   757  005E                     wtemp0	set	94
   758                           
   759                           	psect	intentry
   760  0004                     __pintentry:	
   761                           ;incstack = 0
   762                           ; Regs used in _ISR: [wreg+status,2+status,0]
   763                           
   764  0004                     interrupt_function:
   765  005E                     saved_w	set	btemp
   766  0004  00DE               	movwf	btemp
   767  0005  0E03               	swapf	3,w
   768  0006  1283               	bcf	3,5	;RP0=0, select bank0
   769  0007  00A5               	movwf	??_ISR
   770  0008  080A               	movf	10,w
   771  0009  00A6               	movwf	??_ISR+1
   772  000A  2869               	ljmp	_ISR
   773                           
   774                           	psect	config
   775                           
   776                           ;Config register CONFIG @ 0x2007
   777                           ;	Oscillator Selection bits
   778                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
   779                           ;	Watchdog Timer Enable bit
   780                           ;	WDTE = OFF, WDT disabled
   781                           ;	Power-Up Timer Enable bit
   782                           ;	PWRTE = OFF, PWRT disabled
   783                           ;	GP3/MCLR pin function select
   784                           ;	MCLRE = ON, GP3/MCLR pin function is MCLR
   785                           ;	Brown-out Detect Enable bit
   786                           ;	BOREN = ON, BOD enabled
   787                           ;	Code Protection bit
   788                           ;	CP = OFF, Program Memory code protection is disabled
   789                           ;	Data Code Protection bit
   790                           ;	CPD = OFF, Data memory code protection is disabled
   791  2007                     	org	8199
   792  2007  31F4               	dw	12788

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      4       9

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_measurements

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _InitTimer0
                            _Init_uC
                       _measurements
 ---------------------------------------------------------------------------------
 (1) _measurements                                         2     2      0       0
                                              2 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Init_uC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitTimer0
   _Init_uC
   _measurements

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      4       9       4       14.5%
ABS                  0      0       9       5        0.0%
DATA                 0      0       9       6        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Mar 14 22:12:10 2022

                     l51 0068                       l54 0020                       l57 0045  
                     l83 008C                       l59 004B                       _GO 00F9  
                     u40 0024                       u41 0023                       u50 0041  
                     u51 0040                       u55 003D                       u97 0019  
                    l801 0041                      l803 0043                      l805 0047  
                    l807 0085                      l809 008B                      l761 004F  
                    l825 008D                      l771 0058                      l763 0051  
                    l827 008F                      l781 005F                      l773 005A  
                    l765 0052                      l829 0090                      l791 0067  
                    l783 0061                      l775 005C                      l767 0054  
                    l759 004C                      l785 0062                      l777 005D  
                    l769 0056                      l793 0014                      l787 0064  
                    l779 005E                      l795 001E                      l789 0066  
                    l797 0024                      l799 0034                      _GP4 002C  
                    _GP5 002D                      _GIE 005F                      u107 0028  
                    _ISR 0069                     ?_ISR 0025                     _ADIF 0066  
                   _ADFM 00FF                     _ADON 00F8                     _CHS0 00FA  
                   _CHS1 00FB                     _T0IE 005D                     _T0IF 005A  
                   _GPIO 0005                     i1l76 007E                     _VCFG 00FE  
                   _TMR0 0001                     u6_20 006F                     u6_21 006E  
                   u7_20 0074                     u7_21 0073                     u8_20 007B  
                   u8_21 007A                     _main 008D                     btemp 005E  
                   start 000B          __end_of_Init_uC 0069                    ??_ISR 0025  
                  ?_main 0025                    _CMCON 0019                    _ANSEL 009F  
                  i1l811 0069                    i1l821 007B                    i1l813 006B  
                  i1l823 007D                    i1l815 006F                    i1l817 0074  
                  i1l819 0076                    _VRCON 0099                    pclath 000A  
                  status 0003                    wtemp0 005E          __initialization 000C  
             _InitTimer0 0085             __end_of_main 0093            ?_measurements 0025  
                 ??_main 0000                   _ADRESH 001E                   _ADRESL 009E  
                 _TRISIO 0085                ??_Init_uC 0000           ??_measurements 0027  
                 saved_w 005E  __end_of__initialization 0012              ?_InitTimer0 0025  
         __pcstackCOMMON 0000               __pbssBANK0 0020               __pmaintext 008D  
             __pintentry 0004                  _TRISIO0 0428                  _TRISIO1 0429  
                _TRISIO4 042C                  _TRISIO5 042D      __size_of_InitTimer0 0008  
   __end_of_measurements 004C                  _Init_uC 004C                _ADC_Value 0020  
                __ptext1 0014                  __ptext2 004C                  __ptext3 0085  
                __ptext4 0069             __size_of_ISR 001C     end_of_initialization 0012  
              _PWM_Value 0024             ??_InitTimer0 0027      start_initialization 000C  
            __end_of_ISR 0085    __size_of_measurements 0038             _Button_Value 0022  
     __end_of_InitTimer0 008D             _measurements 0014                ___latbits 0000  
          __pcstackBANK0 0025                 ?_Init_uC 0025        interrupt_function 0004  
       __size_of_Init_uC 001D            __size_of_main 0006               _INTCONbits 000B  
               intlevel1 0000               _OPTION_REG 0081  
