

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 17 20:41:59 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x5E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 29/04/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC12F675 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0019                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  0081                     	;# 
    68  0085                     	;# 
    69  008C                     	;# 
    70  008E                     	;# 
    71  0090                     	;# 
    72  0095                     	;# 
    73  0096                     	;# 
    74  0096                     	;# 
    75  0099                     	;# 
    76  009A                     	;# 
    77  009A                     	;# 
    78  009B                     	;# 
    79  009C                     	;# 
    80  009D                     	;# 
    81  009E                     	;# 
    82  009F                     	;# 
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0019                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  008C                     	;# 
   102  008E                     	;# 
   103  0090                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0096                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0019                     	;# 
   129  001E                     	;# 
   130  001F                     	;# 
   131  0081                     	;# 
   132  0085                     	;# 
   133  008C                     	;# 
   134  008E                     	;# 
   135  0090                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0096                     	;# 
   139  0099                     	;# 
   140  009A                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  009F                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0019                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  008C                     	;# 
   166  008E                     	;# 
   167  0090                     	;# 
   168  0095                     	;# 
   169  0096                     	;# 
   170  0096                     	;# 
   171  0099                     	;# 
   172  009A                     	;# 
   173  009A                     	;# 
   174  009B                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  009F                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  000A                     	;# 
   186  000B                     	;# 
   187  000C                     	;# 
   188  000E                     	;# 
   189  000E                     	;# 
   190  000F                     	;# 
   191  0010                     	;# 
   192  0019                     	;# 
   193  001E                     	;# 
   194  001F                     	;# 
   195  0081                     	;# 
   196  0085                     	;# 
   197  008C                     	;# 
   198  008E                     	;# 
   199  0090                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0096                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  000B                     _INTCONbits	set	11
   212  0001                     _TMR0	set	1
   213  001E                     _ADRESH	set	30
   214  0005                     _GPIO	set	5
   215  0019                     _CMCON	set	25
   216  005D                     _T0IE	set	93
   217  005A                     _T0IF	set	90
   218  0066                     _ADIF	set	102
   219  00F9                     _GO	set	249
   220  005F                     _GIE	set	95
   221  00FA                     _CHS0	set	250
   222  00FB                     _CHS1	set	251
   223  0029                     _GP1	set	41
   224  00FE                     _VCFG	set	254
   225  00FF                     _ADFM	set	255
   226  00F8                     _ADON	set	248
   227  002C                     _GP4	set	44
   228  002D                     _GP5	set	45
   229  0081                     _OPTION_REG	set	129
   230  009E                     _ADRESL	set	158
   231  009F                     _ANSEL	set	159
   232  0085                     _TRISIO	set	133
   233  0099                     _VRCON	set	153
   234  0429                     _TRISIO1	set	1065
   235  0428                     _TRISIO0	set	1064
   236  042C                     _TRISIO4	set	1068
   237  042D                     _TRISIO5	set	1069
   238                           
   239                           	psect	cinit
   240  000C                     start_initialization:	
   241                           ; #config settings
   242                           
   243  000C                     __initialization:
   244                           
   245                           ; Clear objects allocated to BANK0
   246  000C  1283               	bcf	3,5	;RP0=0, select bank0
   247  000D  01A0               	clrf	__pbssBANK0& (0+127)
   248  000E  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   249  000F  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   250  0010                     end_of_initialization:	
   251                           ;End of C runtime variable initialization code
   252                           
   253  0010                     __end_of__initialization:
   254  0010  0183               	clrf	3
   255  0011  2864               	ljmp	_main	;jump to C main() function
   256                           
   257                           	psect	bssBANK0
   258  0020                     __pbssBANK0:
   259  0020                     _ADC_Value:
   260  0020                     	ds	2
   261  0022                     _PWM_Value:
   262  0022                     	ds	1
   263                           
   264                           	psect	cstackCOMMON
   265  0000                     __pcstackCOMMON:
   266  0000                     ??_init_uC:
   267  0000                     ??_main:	
   268                           ; 1 bytes @ 0x0
   269                           
   270                           
   271                           	psect	cstackBANK0
   272  0023                     __pcstackBANK0:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0023                     ?_init_uC:
   276  0023                     ?_buttonEvent:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0023                     ?_ISR:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0023                     ??_ISR:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0023                     ?_initTimer0:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0023                     ?_main:	
   289                           ; 1 bytes @ 0x0
   290                           
   291                           
   292                           ; 1 bytes @ 0x0
   293  0023                     	ds	2
   294  0025                     ??_buttonEvent:
   295  0025                     ??_initTimer0:	
   296                           ; 1 bytes @ 0x2
   297                           
   298                           
   299                           ; 1 bytes @ 0x2
   300  0025                     	ds	1
   301                           
   302                           	psect	maintext
   303  0064                     __pmaintext:	
   304 ;;
   305 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   306 ;;
   307 ;; *************** function _main *****************
   308 ;; Defined at:
   309 ;;		line 28 in file "main.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;		None
   312 ;; Auto vars:     Size  Location     Type
   313 ;;		None
   314 ;; Return value:  Size  Location     Type
   315 ;;                  1    wreg      void 
   316 ;; Registers used:
   317 ;;		wreg, status,2, status,0, pclath, cstack
   318 ;; Tracked objects:
   319 ;;		On entry : B00/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMMON   BANK0
   323 ;;      Params:         0       0
   324 ;;      Locals:         0       0
   325 ;;      Temps:          0       0
   326 ;;      Totals:         0       0
   327 ;;Total ram usage:        0 bytes
   328 ;; Hardware stack levels required when called:    2
   329 ;; This function calls:
   330 ;;		_buttonEvent
   331 ;;		_initTimer0
   332 ;;		_init_uC
   333 ;; This function is called by:
   334 ;;		Startup code after reset
   335 ;; This function uses a non-reentrant model
   336 ;;
   337                           
   338                           
   339                           ;psect for function _main
   340  0064                     _main:
   341  0064                     l883:	
   342                           ;incstack = 0
   343                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   344                           
   345  0064  205C               	fcall	_initTimer0
   346  0065  2012               	fcall	_init_uC
   347  0066                     l885:
   348  0066  178B               	bsf	11,7	;volatile
   349  0067                     l112:
   350  0067  204E               	fcall	_buttonEvent
   351  0068  2867               	goto	l112
   352  0069  280B               	ljmp	start
   353  006A                     __end_of_main:
   354                           
   355                           	psect	text1
   356  0012                     __ptext1:	
   357 ;; *************** function _init_uC *****************
   358 ;; Defined at:
   359 ;;		line 9 in file "ADC.c"
   360 ;; Parameters:    Size  Location     Type
   361 ;;		None
   362 ;; Auto vars:     Size  Location     Type
   363 ;;		None
   364 ;; Return value:  Size  Location     Type
   365 ;;                  1    wreg      void 
   366 ;; Registers used:
   367 ;;		wreg, status,2
   368 ;; Tracked objects:
   369 ;;		On entry : 0/0
   370 ;;		On exit  : 0/0
   371 ;;		Unchanged: 0/0
   372 ;; Data sizes:     COMMON   BANK0
   373 ;;      Params:         0       0
   374 ;;      Locals:         0       0
   375 ;;      Temps:          0       0
   376 ;;      Totals:         0       0
   377 ;;Total ram usage:        0 bytes
   378 ;; Hardware stack levels used:    1
   379 ;; Hardware stack levels required when called:    1
   380 ;; This function calls:
   381 ;;		Nothing
   382 ;; This function is called by:
   383 ;;		_main
   384 ;; This function uses a non-reentrant model
   385 ;;
   386                           
   387                           
   388                           ;psect for function _init_uC
   389  0012                     _init_uC:
   390  0012                     l791:	
   391                           ;incstack = 0
   392                           ; Regs used in _init_uC: [wreg+status,2]
   393                           
   394                           
   395                           ;ADC.c: 11:  CMCON = 0x07;
   396  0012  3007               	movlw	7
   397  0013  1283               	bcf	3,5	;RP0=0, select bank0
   398  0014  0099               	movwf	25	;volatile
   399  0015                     l793:
   400                           
   401                           ;ADC.c: 12:     VRCON = 0x00;
   402  0015  1683               	bsf	3,5	;RP0=1, select bank1
   403  0016  0199               	clrf	25	;volatile
   404  0017                     l795:
   405                           
   406                           ;ADC.c: 15:     TRISIO = 0;
   407  0017  0185               	clrf	5	;volatile
   408  0018                     l797:
   409                           
   410                           ;ADC.c: 16:     GPIO = 0;
   411  0018  1283               	bcf	3,5	;RP0=0, select bank0
   412  0019  0185               	clrf	5	;volatile
   413  001A                     l799:
   414                           
   415                           ;ADC.c: 19:     TRISIO5 = 0;
   416  001A  1683               	bsf	3,5	;RP0=1, select bank1
   417  001B  1285               	bcf	5,5	;volatile
   418  001C                     l801:
   419                           
   420                           ;ADC.c: 20:     GP5 = 0;
   421  001C  1283               	bcf	3,5	;RP0=0, select bank0
   422  001D  1285               	bcf	5,5	;volatile
   423  001E                     l803:
   424                           
   425                           ;ADC.c: 23:     TRISIO4 = 0;
   426  001E  1683               	bsf	3,5	;RP0=1, select bank1
   427  001F  1205               	bcf	5,4	;volatile
   428  0020                     l805:
   429                           
   430                           ;ADC.c: 24:     GP4 = 0;
   431  0020  1283               	bcf	3,5	;RP0=0, select bank0
   432  0021  1205               	bcf	5,4	;volatile
   433  0022                     l807:
   434                           
   435                           ;ADC.c: 28:     ADON = 1;
   436  0022  141F               	bsf	31,0	;volatile
   437  0023                     l809:
   438                           
   439                           ;ADC.c: 29:     ADFM = 1;
   440  0023  179F               	bsf	31,7	;volatile
   441  0024                     l811:
   442                           
   443                           ;ADC.c: 30:     VCFG = 0;
   444  0024  131F               	bcf	31,6	;volatile
   445  0025                     l813:
   446                           
   447                           ;ADC.c: 31:     TRISIO0 = 1;
   448  0025  1683               	bsf	3,5	;RP0=1, select bank1
   449  0026  1405               	bsf	5,0	;volatile
   450  0027                     l815:
   451                           
   452                           ;ADC.c: 32:     TRISIO1 = 1;
   453  0027  1485               	bsf	5,1	;volatile
   454  0028                     l817:
   455                           
   456                           ;ADC.c: 33:     GP1 = 0;
   457  0028  1283               	bcf	3,5	;RP0=0, select bank0
   458  0029  1085               	bcf	5,1	;volatile
   459  002A                     l819:
   460                           
   461                           ;ADC.c: 35:     ANSEL = 0b00110001;
   462  002A  3031               	movlw	49
   463  002B  1683               	bsf	3,5	;RP0=1, select bank1
   464  002C  009F               	movwf	31	;volatile
   465  002D                     l821:
   466                           
   467                           ;ADC.c: 37:     CHS1 = 0;
   468  002D  1283               	bcf	3,5	;RP0=0, select bank0
   469  002E  119F               	bcf	31,3	;volatile
   470  002F                     l823:
   471                           
   472                           ;ADC.c: 38:     CHS0 = 0;
   473  002F  111F               	bcf	31,2	;volatile
   474  0030                     l825:
   475                           
   476                           ;ADC.c: 39:     GIE = 1;
   477  0030  178B               	bsf	11,7	;volatile
   478  0031                     l53:
   479  0031  0008               	return
   480  0032                     __end_of_init_uC:
   481                           
   482                           	psect	text2
   483  005C                     __ptext2:	
   484 ;; *************** function _initTimer0 *****************
   485 ;; Defined at:
   486 ;;		line 4 in file "timer0.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;		None
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		wreg, status,2, status,0
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMMON   BANK0
   500 ;;      Params:         0       0
   501 ;;      Locals:         0       0
   502 ;;      Temps:          0       1
   503 ;;      Totals:         0       1
   504 ;;Total ram usage:        1 bytes
   505 ;; Hardware stack levels used:    1
   506 ;; Hardware stack levels required when called:    1
   507 ;; This function calls:
   508 ;;		Nothing
   509 ;; This function is called by:
   510 ;;		_main
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           
   515                           ;psect for function _initTimer0
   516  005C                     _initTimer0:
   517  005C                     l835:	
   518                           ;incstack = 0
   519                           ; Regs used in _initTimer0: [wreg+status,2+status,0]
   520                           
   521                           
   522                           ;timer0.c: 7:  OPTION_REG &= 0xC0;
   523  005C  30C0               	movlw	192
   524  005D  1283               	bcf	3,5	;RP0=0, select bank0
   525  005E  00A5               	movwf	??_initTimer0
   526  005F  0825               	movf	??_initTimer0,w
   527  0060  1683               	bsf	3,5	;RP0=1, select bank1
   528  0061  0581               	andwf	1,f	;volatile
   529  0062                     l837:
   530                           
   531                           ;timer0.c: 8:  T0IE = 1;
   532  0062  168B               	bsf	11,5	;volatile
   533  0063                     l95:
   534  0063  0008               	return
   535  0064                     __end_of_initTimer0:
   536                           
   537                           	psect	text3
   538  004E                     __ptext3:	
   539 ;; *************** function _buttonEvent *****************
   540 ;; Defined at:
   541 ;;		line 43 in file "ADC.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, status,2
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0
   555 ;;      Params:         0       0
   556 ;;      Locals:         0       0
   557 ;;      Temps:          0       1
   558 ;;      Totals:         0       1
   559 ;;Total ram usage:        1 bytes
   560 ;; Hardware stack levels used:    1
   561 ;; Hardware stack levels required when called:    1
   562 ;; This function calls:
   563 ;;		Nothing
   564 ;; This function is called by:
   565 ;;		_main
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           
   570                           ;psect for function _buttonEvent
   571  004E                     _buttonEvent:
   572  004E                     l827:	
   573                           ;incstack = 0
   574                           ; Regs used in _buttonEvent: [wreg+status,2]
   575                           
   576                           
   577                           ;ADC.c: 45:         if (GP1)
   578  004E  1283               	bcf	3,5	;RP0=0, select bank0
   579  004F  1C85               	btfss	5,1	;volatile
   580  0050  2852               	goto	u41
   581  0051  2853               	goto	u40
   582  0052                     u41:
   583  0052  2859               	goto	l56
   584  0053                     u40:
   585  0053                     l829:
   586                           
   587                           ;ADC.c: 46:               {GP5 = 0;
   588  0053  1285               	bcf	5,5	;volatile
   589  0054                     l831:
   590                           
   591                           ;ADC.c: 48:                PWM_Value = 127;}
   592  0054  307F               	movlw	127
   593  0055  00A5               	movwf	??_buttonEvent
   594  0056  0825               	movf	??_buttonEvent,w
   595  0057  00A2               	movwf	_PWM_Value
   596  0058  285B               	goto	l58
   597  0059                     l56:	
   598                           ;ADC.c: 49:         else {GP5 = 1;
   599                           
   600  0059  1685               	bsf	5,5	;volatile
   601  005A                     l833:
   602                           
   603                           ;ADC.c: 50:                PWM_Value = 0;}
   604  005A  01A2               	clrf	_PWM_Value
   605  005B                     l58:
   606  005B  0008               	return
   607  005C                     __end_of_buttonEvent:
   608                           
   609                           	psect	text4
   610  0032                     __ptext4:	
   611 ;; *************** function _ISR *****************
   612 ;; Defined at:
   613 ;;		line 6 in file "interrupt.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		wreg, status,2, status,0
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMMON   BANK0
   627 ;;      Params:         0       0
   628 ;;      Locals:         0       0
   629 ;;      Temps:          0       2
   630 ;;      Totals:         0       2
   631 ;;Total ram usage:        2 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; This function calls:
   634 ;;		Nothing
   635 ;; This function is called by:
   636 ;;		Interrupt level 1
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           
   641                           ;psect for function _ISR
   642  0032                     _ISR:
   643  0032                     i1l869:
   644                           
   645                           ;interrupt.c: 8:       TMR0 = PWM_Value;
   646  0032  0822               	movf	_PWM_Value,w
   647  0033  0081               	movwf	1	;volatile
   648  0034                     i1l871:
   649                           
   650                           ;interrupt.c: 9:    if(T0IF)
   651  0034  1D0B               	btfss	11,2	;volatile
   652  0035  2837               	goto	u13_21
   653  0036  2838               	goto	u13_20
   654  0037                     u13_21:
   655  0037  2847               	goto	i1l88
   656  0038                     u13_20:
   657  0038                     i1l873:
   658                           
   659                           ;interrupt.c: 10:     {;interrupt.c: 11:         if (PWM_Value == 0)
   660  0038  0822               	movf	_PWM_Value,w
   661  0039  1D03               	btfss	3,2
   662  003A  283C               	goto	u14_21
   663  003B  283D               	goto	u14_20
   664  003C                     u14_21:
   665  003C  283F               	goto	i1l877
   666  003D                     u14_20:
   667  003D                     i1l875:
   668                           
   669                           ;interrupt.c: 12:         {GP4 = 0;}
   670  003D  1205               	bcf	5,4	;volatile
   671  003E  2846               	goto	i1l881
   672  003F                     i1l877:
   673  003F  0822               	movf	_PWM_Value,w
   674  0040  1903               	btfsc	3,2
   675  0041  2843               	goto	u15_21
   676  0042  2844               	goto	u15_20
   677  0043                     u15_21:
   678  0043  2846               	goto	i1l881
   679  0044                     u15_20:
   680  0044                     i1l879:
   681                           
   682                           ;interrupt.c: 14:   {GP4 = ~GP4;}
   683  0044  3010               	movlw	16
   684  0045  0685               	xorwf	5,f
   685  0046                     i1l881:
   686                           
   687                           ;interrupt.c: 15:   T0IF = 0;
   688  0046  110B               	bcf	11,2	;volatile
   689  0047                     i1l88:
   690  0047  0824               	movf	??_ISR+1,w
   691  0048  008A               	movwf	10
   692  0049  0E23               	swapf	??_ISR,w
   693  004A  0083               	movwf	3
   694  004B  0EDE               	swapf	btemp,f
   695  004C  0E5E               	swapf	btemp,w
   696  004D  0009               	retfie
   697  004E                     __end_of_ISR:
   698  005E                     btemp	set	94	;btemp
   699  005E                     wtemp0	set	94
   700                           
   701                           	psect	intentry
   702  0004                     __pintentry:	
   703                           ;incstack = 0
   704                           ; Regs used in _ISR: [wreg+status,2+status,0]
   705                           
   706  0004                     interrupt_function:
   707  005E                     saved_w	set	btemp
   708  0004  00DE               	movwf	btemp
   709  0005  0E03               	swapf	3,w
   710  0006  1283               	bcf	3,5	;RP0=0, select bank0
   711  0007  00A3               	movwf	??_ISR
   712  0008  080A               	movf	10,w
   713  0009  00A4               	movwf	??_ISR+1
   714  000A  2832               	ljmp	_ISR
   715                           
   716                           	psect	config
   717                           
   718                           ;Config register CONFIG @ 0x2007
   719                           ;	Oscillator Selection bits
   720                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
   721                           ;	Watchdog Timer Enable bit
   722                           ;	WDTE = OFF, WDT disabled
   723                           ;	Power-Up Timer Enable bit
   724                           ;	PWRTE = OFF, PWRT disabled
   725                           ;	GP3/MCLR pin function select
   726                           ;	MCLRE = ON, GP3/MCLR pin function is MCLR
   727                           ;	Brown-out Detect Enable bit
   728                           ;	BOREN = ON, BOD enabled
   729                           ;	Code Protection bit
   730                           ;	CP = OFF, Program Memory code protection is disabled
   731                           ;	Data Code Protection bit
   732                           ;	CPD = OFF, Data memory code protection is disabled
   733  2007                     	org	8199
   734  2007  31F4               	dw	12788

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      3       6

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_buttonEvent
    _main->_initTimer0

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _buttonEvent
                         _initTimer0
                            _init_uC
 ---------------------------------------------------------------------------------
 (1) _init_uC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTimer0                                           1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _buttonEvent                                          1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buttonEvent
   _initTimer0
   _init_uC

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      3       6       4        9.7%
ABS                  0      0       6       5        0.0%
DATA                 0      0       6       6        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 17 20:41:59 2022

                     l53 0031                       l56 0059                       l58 005B  
                     l95 0063                       _GO 00F9                       u40 0053  
                     u41 0052                      l112 0067                      l801 001C  
                    l811 0024                      l803 001E                      l821 002D  
                    l813 0025                      l805 0020                      l831 0054  
                    l823 002F                      l815 0027                      l807 0022  
                    l833 005A                      l825 0030                      l817 0028  
                    l809 0023                      l827 004E                      l835 005C  
                    l819 002A                      l829 0053                      l837 0062  
                    l791 0012                      l793 0015                      l795 0017  
                    l883 0064                      l797 0018                      l885 0066  
                    _GP1 0029                      l799 001A                      _GP4 002C  
                    _GP5 002D                      _GIE 005F                      _ISR 0032  
                   ?_ISR 0023                     _ADIF 0066                     _ADFM 00FF  
                   _ADON 00F8                     _CHS0 00FA                     _CHS1 00FB  
                   _T0IE 005D                     _T0IF 005A                     _GPIO 0005  
                   i1l88 0047                     _VCFG 00FE                     _TMR0 0001  
                   _main 0064                     btemp 005E                     start 000B  
                  ??_ISR 0023                    ?_main 0023                    _CMCON 0019  
                  _ANSEL 009F                    i1l871 0034                    i1l881 0046  
                  i1l873 0038                    i1l875 003D                    i1l877 003F  
                  i1l869 0032             ?_buttonEvent 0023                    i1l879 0044  
                  u13_20 0038                    u13_21 0037                    u14_20 003D  
                  u14_21 003C                    u15_20 0044                    u15_21 0043  
                  _VRCON 0099          __end_of_init_uC 0032                    pclath 000A  
                  status 0003                    wtemp0 005E          __initialization 000C  
           __end_of_main 006A                   ??_main 0000                   _ADRESH 001E  
                 _ADRESL 009E                   _TRISIO 0085                ??_init_uC 0000  
                 saved_w 005E  __end_of__initialization 0010           __pcstackCOMMON 0000  
   __size_of_buttonEvent 000E               __pbssBANK0 0020               __pmaintext 0064  
             __pintentry 0004                  _TRISIO0 0428                  _TRISIO1 0429  
                _TRISIO4 042C                  _TRISIO5 042D                _ADC_Value 0020  
             _initTimer0 005C                  __ptext1 0012                  __ptext2 005C  
                __ptext3 004E                  __ptext4 0032             __size_of_ISR 001C  
                _init_uC 0012     end_of_initialization 0010                _PWM_Value 0022  
            ?_initTimer0 0023      start_initialization 000C              __end_of_ISR 004E  
          ??_buttonEvent 0025                ___latbits 0000            __pcstackBANK0 0023  
    __size_of_initTimer0 0008                 ?_init_uC 0023      __end_of_buttonEvent 005C  
      interrupt_function 0004             ??_initTimer0 0025              _buttonEvent 004E  
       __size_of_init_uC 0020       __end_of_initTimer0 0064            __size_of_main 0006  
             _INTCONbits 000B                 intlevel1 0000               _OPTION_REG 0081  
