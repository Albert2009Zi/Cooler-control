

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Dec 06 23:38:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x5E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 29/04/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC12F675 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0019                     	;# 
    67  001E                     	;# 
    68  001F                     	;# 
    69  0081                     	;# 
    70  0085                     	;# 
    71  008C                     	;# 
    72  008E                     	;# 
    73  0090                     	;# 
    74  0095                     	;# 
    75  0096                     	;# 
    76  0096                     	;# 
    77  0099                     	;# 
    78  009A                     	;# 
    79  009A                     	;# 
    80  009B                     	;# 
    81  009C                     	;# 
    82  009D                     	;# 
    83  009E                     	;# 
    84  009F                     	;# 
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0019                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  008C                     	;# 
   104  008E                     	;# 
   105  0090                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0096                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0019                     	;# 
   131  001E                     	;# 
   132  001F                     	;# 
   133  0081                     	;# 
   134  0085                     	;# 
   135  008C                     	;# 
   136  008E                     	;# 
   137  0090                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0096                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  009F                     	;# 
   149  001E                     _ADRESH	set	30
   150  00F9                     _GO	set	249
   151  00FA                     _CHS0	set	250
   152  00FB                     _CHS1	set	251
   153  00FE                     _VCFG	set	254
   154  00FF                     _ADFM	set	255
   155  00F8                     _ADON	set	248
   156  002A                     _GP2	set	42
   157  002D                     _GP5	set	45
   158  009E                     _ADRESL	set	158
   159  009F                     _ANSEL	set	159
   160  0429                     _TRISIO1	set	1065
   161  0428                     _TRISIO0	set	1064
   162  042A                     _TRISIO2	set	1066
   163  042D                     _TRISIO5	set	1069
   164                           
   165                           	psect	cinit
   166  03F9                     start_initialization:	
   167                           ; #config settings
   168                           
   169  03F9                     __initialization:
   170                           
   171                           ; Clear objects allocated to BANK0
   172  03F9  1283               	bcf	3,5	;RP0=0, select bank0
   173  03FA  01BC               	clrf	__pbssBANK0& (0+127)
   174  03FB  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   175  03FC  01BE               	clrf	(__pbssBANK0+2)& (0+127)
   176  03FD                     end_of_initialization:	
   177                           ;End of C runtime variable initialization code
   178                           
   179  03FD                     __end_of__initialization:
   180  03FD  0183               	clrf	3
   181  03FE  2907               	ljmp	_main	;jump to C main() function
   182                           
   183                           	psect	bssBANK0
   184  003C                     __pbssBANK0:
   185  003C                     _ADC_Result:
   186  003C                     	ds	2
   187  003E                     System_Start_Control@Pwr_Good:
   188  003E                     	ds	1
   189                           
   190                           	psect	cstackCOMMON
   191  0000                     __pcstackCOMMON:
   192  0000                     ??_Init_uC:
   193  0000                     ??_Temperature_Control:	
   194                           ; 1 bytes @ 0x0
   195                           
   196  0000                     ??_main:	
   197                           ; 1 bytes @ 0x0
   198                           
   199  0000                     ??___wmul:	
   200                           ; 1 bytes @ 0x0
   201                           
   202                           
   203                           	psect	cstackBANK0
   204  0020                     __pcstackBANK0:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0020                     ?_Init_uC:
   208  0020                     ?_Get_Voltage:	
   209                           ; 1 bytes @ 0x0
   210                           
   211  0020                     ??_Get_Voltage:	
   212                           ; 1 bytes @ 0x0
   213                           
   214  0020                     ?_System_Start_Control:	
   215                           ; 1 bytes @ 0x0
   216                           
   217  0020                     ?_Temperature_Control:	
   218                           ; 1 bytes @ 0x0
   219                           
   220  0020                     ?_main:	
   221                           ; 1 bytes @ 0x0
   222                           
   223  0020                     ?___wmul:	
   224                           ; 1 bytes @ 0x0
   225                           
   226  0020                     ?___xxtofl:	
   227                           ; 2 bytes @ 0x0
   228                           
   229  0020                     ___wmul@multiplier:	
   230                           ; 4 bytes @ 0x0
   231                           
   232  0020                     ___xxtofl@val:	
   233                           ; 2 bytes @ 0x0
   234                           
   235                           
   236                           ; 4 bytes @ 0x0
   237  0020                     	ds	2
   238  0022                     Get_Voltage@Chanel_Number:
   239  0022                     ___wmul@multiplicand:	
   240                           ; 1 bytes @ 0x2
   241                           
   242                           
   243                           ; 2 bytes @ 0x2
   244  0022                     	ds	2
   245  0024                     ??___xxtofl:
   246  0024                     ___wmul@product:	
   247                           ; 1 bytes @ 0x4
   248                           
   249                           
   250                           ; 2 bytes @ 0x4
   251  0024                     	ds	4
   252  0028                     ___xxtofl@sign:
   253                           
   254                           ; 1 bytes @ 0x8
   255  0028                     	ds	1
   256  0029                     ___xxtofl@exp:
   257                           
   258                           ; 1 bytes @ 0x9
   259  0029                     	ds	1
   260  002A                     ___xxtofl@arg:
   261                           
   262                           ; 4 bytes @ 0xA
   263  002A                     	ds	4
   264  002E                     ?___flge:
   265  002E                     ___flge@ff1:	
   266                           ; 1 bit 
   267                           
   268                           
   269                           ; 4 bytes @ 0xE
   270  002E                     	ds	4
   271  0032                     ___flge@ff2:
   272                           
   273                           ; 4 bytes @ 0x12
   274  0032                     	ds	4
   275  0036                     ??___flge:
   276                           
   277                           ; 1 bytes @ 0x16
   278  0036                     	ds	4
   279  003A                     ??_System_Start_Control:
   280                           
   281                           ; 1 bytes @ 0x1A
   282  003A                     	ds	2
   283                           
   284                           	psect	maintext
   285  0107                     __pmaintext:	
   286 ;;
   287 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   288 ;;
   289 ;; *************** function _main *****************
   290 ;; Defined at:
   291 ;;		line 28 in file "main.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;		None
   294 ;; Auto vars:     Size  Location     Type
   295 ;;		None
   296 ;; Return value:  Size  Location     Type
   297 ;;                  1    wreg      void 
   298 ;; Registers used:
   299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   300 ;; Tracked objects:
   301 ;;		On entry : B00/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMMON   BANK0
   305 ;;      Params:         0       0
   306 ;;      Locals:         0       0
   307 ;;      Temps:          0       0
   308 ;;      Totals:         0       0
   309 ;;Total ram usage:        0 bytes
   310 ;; Hardware stack levels required when called:    3
   311 ;; This function calls:
   312 ;;		_Init_uC
   313 ;;		_System_Start_Control
   314 ;;		_Temperature_Control
   315 ;; This function is called by:
   316 ;;		Startup code after reset
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320                           
   321                           ;psect for function _main
   322  0107                     _main:
   323                           
   324                           ;main.c: 30:    Init_uC();
   325                           
   326                           ;incstack = 0
   327                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   328  0107  210B               	fcall	_Init_uC
   329  0108                     l1013:
   330                           
   331                           ;main.c: 33:     {;main.c: 34:         System_Start_Control();
   332  0108  21F3               	fcall	_System_Start_Control
   333                           
   334                           ;main.c: 35:         Temperature_Control();
   335  0109  2337               	fcall	_Temperature_Control
   336  010A  2908               	goto	l1013
   337  010B                     __end_of_main:
   338                           
   339                           	psect	text1
   340  0337                     __ptext1:	
   341 ;; *************** function _Temperature_Control *****************
   342 ;; Defined at:
   343 ;;		line 83 in file "Defines_And _Prototypes.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;		None
   346 ;; Auto vars:     Size  Location     Type
   347 ;;		None
   348 ;; Return value:  Size  Location     Type
   349 ;;                  1    wreg      void 
   350 ;; Registers used:
   351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   352 ;; Tracked objects:
   353 ;;		On entry : 0/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMMON   BANK0
   357 ;;      Params:         0       0
   358 ;;      Locals:         0       0
   359 ;;      Temps:          0       0
   360 ;;      Totals:         0       0
   361 ;;Total ram usage:        0 bytes
   362 ;; Hardware stack levels used:    1
   363 ;; Hardware stack levels required when called:    2
   364 ;; This function calls:
   365 ;;		_Get_Voltage
   366 ;;		_System_Start_Control
   367 ;;		___flge
   368 ;;		___xxtofl
   369 ;; This function is called by:
   370 ;;		_main
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           
   375                           ;psect for function _Temperature_Control
   376  0337                     _Temperature_Control:
   377                           
   378                           ;Defines_And _Prototypes.c: 86:     Get_Voltage(0);
   379                           
   380                           ;incstack = 0
   381                           ; Regs used in _Temperature_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   382  0337  3000               	movlw	0
   383  0338  211C               	fcall	_Get_Voltage
   384                           
   385                           ;Defines_And _Prototypes.c: 88:     ADC_Result = (uint16_t)(ADRESH << 8) + ADRESL;
   386  0339  1283               	bcf	3,5	;RP0=0, select bank0
   387  033A  081E               	movf	30,w	;volatile
   388  033B  00BD               	movwf	_ADC_Result+1	;volatile
   389  033C  1683               	bsf	3,5	;RP0=1, select bank1
   390  033D  081E               	movf	30,w	;volatile
   391  033E  1283               	bcf	3,5	;RP0=0, select bank0
   392  033F  00BC               	movwf	_ADC_Result	;volatile
   393                           
   394                           ;Defines_And _Prototypes.c: 90:      if (System_Start_Control() != 0)
   395  0340  21F3               	fcall	_System_Start_Control
   396  0341  3A00               	xorlw	0
   397  0342  1903               	skipnz
   398  0343  0008               	return
   399                           
   400                           ;Defines_And _Prototypes.c: 91:      {;Defines_And _Prototypes.c: 92:          if (((flo
      +                          at)ADC_Result >= 45.5f) && ((float)ADC_Result < 60.5f))
   401  0344  1283               	bcf	3,5	;RP0=0, select bank0
   402  0345  083C               	movf	_ADC_Result,w	;volatile
   403  0346  00A0               	movwf	___xxtofl@val
   404  0347  083D               	movf	_ADC_Result+1,w	;volatile
   405  0348  00A1               	movwf	___xxtofl@val+1
   406  0349  01A2               	clrf	___xxtofl@val+2
   407  034A  01A3               	clrf	___xxtofl@val+3
   408  034B  3000               	movlw	0
   409  034C  2293               	fcall	___xxtofl
   410  034D  1283               	bcf	3,5	;RP0=0, select bank0
   411  034E  0823               	movf	?___xxtofl+3,w
   412  034F  00B1               	movwf	___flge@ff1+3
   413  0350  0822               	movf	?___xxtofl+2,w
   414  0351  00B0               	movwf	___flge@ff1+2
   415  0352  0821               	movf	?___xxtofl+1,w
   416  0353  00AF               	movwf	___flge@ff1+1
   417  0354  0820               	movf	?___xxtofl,w
   418  0355  00AE               	movwf	___flge@ff1
   419  0356  3042               	movlw	66
   420  0357  00B5               	movwf	___flge@ff2+3
   421  0358  3036               	movlw	54
   422  0359  00B4               	movwf	___flge@ff2+2
   423  035A  3000               	movlw	0
   424  035B  00B3               	movwf	___flge@ff2+1
   425  035C  3000               	movlw	0
   426  035D  00B2               	movwf	___flge@ff2
   427  035E  215F               	fcall	___flge
   428  035F  1C03               	btfss	3,0
   429  0360  2B9F               	goto	l997
   430  0361  1283               	bcf	3,5	;RP0=0, select bank0
   431  0362  083C               	movf	_ADC_Result,w	;volatile
   432  0363  00A0               	movwf	___xxtofl@val
   433  0364  083D               	movf	_ADC_Result+1,w	;volatile
   434  0365  00A1               	movwf	___xxtofl@val+1
   435  0366  01A2               	clrf	___xxtofl@val+2
   436  0367  01A3               	clrf	___xxtofl@val+3
   437  0368  3000               	movlw	0
   438  0369  2293               	fcall	___xxtofl
   439  036A  1283               	bcf	3,5	;RP0=0, select bank0
   440  036B  0823               	movf	?___xxtofl+3,w
   441  036C  00B1               	movwf	___flge@ff1+3
   442  036D  0822               	movf	?___xxtofl+2,w
   443  036E  00B0               	movwf	___flge@ff1+2
   444  036F  0821               	movf	?___xxtofl+1,w
   445  0370  00AF               	movwf	___flge@ff1+1
   446  0371  0820               	movf	?___xxtofl,w
   447  0372  00AE               	movwf	___flge@ff1
   448  0373  3042               	movlw	66
   449  0374  00B5               	movwf	___flge@ff2+3
   450  0375  3072               	movlw	114
   451  0376  00B4               	movwf	___flge@ff2+2
   452  0377  3000               	movlw	0
   453  0378  00B3               	movwf	___flge@ff2+1
   454  0379  3000               	movlw	0
   455  037A  00B2               	movwf	___flge@ff2
   456  037B  215F               	fcall	___flge
   457  037C  1C03               	btfss	3,0
   458  037D  2B9C               	goto	l995
   459  037E  2B9F               	goto	l997
   460  037F                     l999:
   461  037F  1283               	bcf	3,5	;RP0=0, select bank0
   462  0380  083C               	movf	_ADC_Result,w	;volatile
   463  0381  00A0               	movwf	___xxtofl@val
   464  0382  083D               	movf	_ADC_Result+1,w	;volatile
   465  0383  00A1               	movwf	___xxtofl@val+1
   466  0384  01A2               	clrf	___xxtofl@val+2
   467  0385  01A3               	clrf	___xxtofl@val+3
   468  0386  3000               	movlw	0
   469  0387  2293               	fcall	___xxtofl
   470  0388  1283               	bcf	3,5	;RP0=0, select bank0
   471  0389  0823               	movf	?___xxtofl+3,w
   472  038A  00B1               	movwf	___flge@ff1+3
   473  038B  0822               	movf	?___xxtofl+2,w
   474  038C  00B0               	movwf	___flge@ff1+2
   475  038D  0821               	movf	?___xxtofl+1,w
   476  038E  00AF               	movwf	___flge@ff1+1
   477  038F  0820               	movf	?___xxtofl,w
   478  0390  00AE               	movwf	___flge@ff1
   479  0391  3042               	movlw	66
   480  0392  00B5               	movwf	___flge@ff2+3
   481  0393  3097               	movlw	151
   482  0394  00B4               	movwf	___flge@ff2+2
   483  0395  3000               	movlw	0
   484  0396  00B3               	movwf	___flge@ff2+1
   485  0397  3000               	movlw	0
   486  0398  00B2               	movwf	___flge@ff2
   487  0399  215F               	fcall	___flge
   488  039A  1803               	btfsc	3,0
   489  039B  2BBC               	goto	l1003
   490  039C                     l995:
   491                           
   492                           ;Defines_And _Prototypes.c: 93:          {GP2 = 1;}
   493  039C  1283               	bcf	3,5	;RP0=0, select bank0
   494  039D  1505               	bsf	5,2	;volatile
   495  039E  0008               	return
   496  039F                     l997:
   497  039F  1283               	bcf	3,5	;RP0=0, select bank0
   498  03A0  083C               	movf	_ADC_Result,w	;volatile
   499  03A1  00A0               	movwf	___xxtofl@val
   500  03A2  083D               	movf	_ADC_Result+1,w	;volatile
   501  03A3  00A1               	movwf	___xxtofl@val+1
   502  03A4  01A2               	clrf	___xxtofl@val+2
   503  03A5  01A3               	clrf	___xxtofl@val+3
   504  03A6  3000               	movlw	0
   505  03A7  2293               	fcall	___xxtofl
   506  03A8  1283               	bcf	3,5	;RP0=0, select bank0
   507  03A9  0823               	movf	?___xxtofl+3,w
   508  03AA  00B1               	movwf	___flge@ff1+3
   509  03AB  0822               	movf	?___xxtofl+2,w
   510  03AC  00B0               	movwf	___flge@ff1+2
   511  03AD  0821               	movf	?___xxtofl+1,w
   512  03AE  00AF               	movwf	___flge@ff1+1
   513  03AF  0820               	movf	?___xxtofl,w
   514  03B0  00AE               	movwf	___flge@ff1
   515  03B1  3042               	movlw	66
   516  03B2  00B5               	movwf	___flge@ff2+3
   517  03B3  3070               	movlw	112
   518  03B4  00B4               	movwf	___flge@ff2+2
   519  03B5  3000               	movlw	0
   520  03B6  00B3               	movwf	___flge@ff2+1
   521  03B7  3000               	movlw	0
   522  03B8  00B2               	movwf	___flge@ff2
   523  03B9  215F               	fcall	___flge
   524  03BA  1803               	btfsc	3,0
   525  03BB  2B7F               	goto	l999
   526  03BC                     l1003:
   527  03BC  1283               	bcf	3,5	;RP0=0, select bank0
   528  03BD  083C               	movf	_ADC_Result,w	;volatile
   529  03BE  00A0               	movwf	___xxtofl@val
   530  03BF  083D               	movf	_ADC_Result+1,w	;volatile
   531  03C0  00A1               	movwf	___xxtofl@val+1
   532  03C1  01A2               	clrf	___xxtofl@val+2
   533  03C2  01A3               	clrf	___xxtofl@val+3
   534  03C3  3000               	movlw	0
   535  03C4  2293               	fcall	___xxtofl
   536  03C5  1283               	bcf	3,5	;RP0=0, select bank0
   537  03C6  0823               	movf	?___xxtofl+3,w
   538  03C7  00B1               	movwf	___flge@ff1+3
   539  03C8  0822               	movf	?___xxtofl+2,w
   540  03C9  00B0               	movwf	___flge@ff1+2
   541  03CA  0821               	movf	?___xxtofl+1,w
   542  03CB  00AF               	movwf	___flge@ff1+1
   543  03CC  0820               	movf	?___xxtofl,w
   544  03CD  00AE               	movwf	___flge@ff1
   545  03CE  3042               	movlw	66
   546  03CF  00B5               	movwf	___flge@ff2+3
   547  03D0  3097               	movlw	151
   548  03D1  00B4               	movwf	___flge@ff2+2
   549  03D2  3000               	movlw	0
   550  03D3  00B3               	movwf	___flge@ff2+1
   551  03D4  3000               	movlw	0
   552  03D5  00B2               	movwf	___flge@ff2
   553  03D6  215F               	fcall	___flge
   554  03D7  1803               	btfsc	3,0
   555  03D8  2B9C               	goto	l995
   556  03D9  1283               	bcf	3,5	;RP0=0, select bank0
   557  03DA  083C               	movf	_ADC_Result,w	;volatile
   558  03DB  00A0               	movwf	___xxtofl@val
   559  03DC  083D               	movf	_ADC_Result+1,w	;volatile
   560  03DD  00A1               	movwf	___xxtofl@val+1
   561  03DE  01A2               	clrf	___xxtofl@val+2
   562  03DF  01A3               	clrf	___xxtofl@val+3
   563  03E0  3000               	movlw	0
   564  03E1  2293               	fcall	___xxtofl
   565  03E2  1283               	bcf	3,5	;RP0=0, select bank0
   566  03E3  0823               	movf	?___xxtofl+3,w
   567  03E4  00B1               	movwf	___flge@ff1+3
   568  03E5  0822               	movf	?___xxtofl+2,w
   569  03E6  00B0               	movwf	___flge@ff1+2
   570  03E7  0821               	movf	?___xxtofl+1,w
   571  03E8  00AF               	movwf	___flge@ff1+1
   572  03E9  0820               	movf	?___xxtofl,w
   573  03EA  00AE               	movwf	___flge@ff1
   574  03EB  3042               	movlw	66
   575  03EC  00B5               	movwf	___flge@ff2+3
   576  03ED  3036               	movlw	54
   577  03EE  00B4               	movwf	___flge@ff2+2
   578  03EF  3000               	movlw	0
   579  03F0  00B3               	movwf	___flge@ff2+1
   580  03F1  3000               	movlw	0
   581  03F2  00B2               	movwf	___flge@ff2
   582  03F3  215F               	fcall	___flge
   583  03F4  1803               	btfsc	3,0
   584  03F5  0008               	return
   585                           
   586                           ;Defines_And _Prototypes.c: 99:          {GP2 = 0;}
   587  03F6  1283               	bcf	3,5	;RP0=0, select bank0
   588  03F7  1105               	bcf	5,2	;volatile
   589  03F8  0008               	return
   590  03F9                     __end_of_Temperature_Control:
   591                           
   592                           	psect	text2
   593  01F3                     __ptext2:	
   594 ;; *************** function _System_Start_Control *****************
   595 ;; Defined at:
   596 ;;		line 60 in file "Defines_And _Prototypes.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      unsigned char 
   603 ;; Registers used:
   604 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMMON   BANK0
   610 ;;      Params:         0       0
   611 ;;      Locals:         0       0
   612 ;;      Temps:          0       2
   613 ;;      Totals:         0       2
   614 ;;Total ram usage:        2 bytes
   615 ;; Hardware stack levels used:    1
   616 ;; Hardware stack levels required when called:    1
   617 ;; This function calls:
   618 ;;		_Get_Voltage
   619 ;;		___flge
   620 ;;		___wmul
   621 ;;		___xxtofl
   622 ;; This function is called by:
   623 ;;		_Temperature_Control
   624 ;;		_main
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           
   629                           ;psect for function _System_Start_Control
   630  01F3                     _System_Start_Control:
   631                           
   632                           ;Defines_And _Prototypes.c: 62:     static uint8_t Pwr_Good = 0;;Defines_And _Prototypes
      +                          .c: 63:     Get_Voltage(1);
   633                           
   634                           ;incstack = 0
   635                           ; Regs used in _System_Start_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   636  01F3  3001               	movlw	1
   637  01F4  211C               	fcall	_Get_Voltage
   638                           
   639                           ;Defines_And _Prototypes.c: 65:     ADC_Result = (uint16_t)(ADRESH << 8) + ADRESL;
   640  01F5  1283               	bcf	3,5	;RP0=0, select bank0
   641  01F6  081E               	movf	30,w	;volatile
   642  01F7  00BD               	movwf	_ADC_Result+1	;volatile
   643  01F8  1683               	bsf	3,5	;RP0=1, select bank1
   644  01F9  081E               	movf	30,w	;volatile
   645  01FA  1283               	bcf	3,5	;RP0=0, select bank0
   646  01FB  00BC               	movwf	_ADC_Result	;volatile
   647                           
   648                           ;Defines_And _Prototypes.c: 66:     ADC_Result = (ADC_Result*5)/1024;
   649  01FC  083D               	movf	_ADC_Result+1,w	;volatile
   650  01FD  00A1               	movwf	___wmul@multiplier+1
   651  01FE  083C               	movf	_ADC_Result,w	;volatile
   652  01FF  00A0               	movwf	___wmul@multiplier
   653  0200  3005               	movlw	5
   654  0201  00A2               	movwf	___wmul@multiplicand
   655  0202  3000               	movlw	0
   656  0203  00A3               	movwf	___wmul@multiplicand+1
   657  0204  213D               	fcall	___wmul
   658  0205  1283               	bcf	3,5	;RP0=0, select bank0
   659  0206  0820               	movf	?___wmul,w
   660  0207  00BA               	movwf	??_System_Start_Control
   661  0208  0821               	movf	?___wmul+1,w
   662  0209  00BB               	movwf	??_System_Start_Control+1
   663  020A  300A               	movlw	10
   664  020B                     u655:
   665  020B  1003               	clrc
   666  020C  0CBB               	rrf	??_System_Start_Control+1,f
   667  020D  0CBA               	rrf	??_System_Start_Control,f
   668  020E  3EFF               	addlw	-1
   669  020F  1D03               	skipz
   670  0210  2A0B               	goto	u655
   671  0211  083A               	movf	??_System_Start_Control,w
   672  0212  00BC               	movwf	_ADC_Result	;volatile
   673  0213  083B               	movf	??_System_Start_Control+1,w
   674  0214  00BD               	movwf	_ADC_Result+1	;volatile
   675                           
   676                           ;Defines_And _Prototypes.c: 68:        if (((float)ADC_Result > 0.5) && ((float)ADC_Resu
      +                          lt < 5.0))
   677  0215  303F               	movlw	63
   678  0216  00B1               	movwf	___flge@ff1+3
   679  0217  3000               	movlw	0
   680  0218  00B0               	movwf	___flge@ff1+2
   681  0219  3000               	movlw	0
   682  021A  00AF               	movwf	___flge@ff1+1
   683  021B  3000               	movlw	0
   684  021C  00AE               	movwf	___flge@ff1
   685  021D  083C               	movf	_ADC_Result,w	;volatile
   686  021E  00A0               	movwf	___xxtofl@val
   687  021F  083D               	movf	_ADC_Result+1,w	;volatile
   688  0220  00A1               	movwf	___xxtofl@val+1
   689  0221  01A2               	clrf	___xxtofl@val+2
   690  0222  01A3               	clrf	___xxtofl@val+3
   691  0223  3000               	movlw	0
   692  0224  2293               	fcall	___xxtofl
   693  0225  1283               	bcf	3,5	;RP0=0, select bank0
   694  0226  0823               	movf	?___xxtofl+3,w
   695  0227  00B5               	movwf	___flge@ff2+3
   696  0228  0822               	movf	?___xxtofl+2,w
   697  0229  00B4               	movwf	___flge@ff2+2
   698  022A  0821               	movf	?___xxtofl+1,w
   699  022B  00B3               	movwf	___flge@ff2+1
   700  022C  0820               	movf	?___xxtofl,w
   701  022D  00B2               	movwf	___flge@ff2
   702  022E  215F               	fcall	___flge
   703  022F  1803               	btfsc	3,0
   704  0230  2A53               	goto	l971
   705  0231  1283               	bcf	3,5	;RP0=0, select bank0
   706  0232  083C               	movf	_ADC_Result,w	;volatile
   707  0233  00A0               	movwf	___xxtofl@val
   708  0234  083D               	movf	_ADC_Result+1,w	;volatile
   709  0235  00A1               	movwf	___xxtofl@val+1
   710  0236  01A2               	clrf	___xxtofl@val+2
   711  0237  01A3               	clrf	___xxtofl@val+3
   712  0238  3000               	movlw	0
   713  0239  2293               	fcall	___xxtofl
   714  023A  1283               	bcf	3,5	;RP0=0, select bank0
   715  023B  0823               	movf	?___xxtofl+3,w
   716  023C  00B1               	movwf	___flge@ff1+3
   717  023D  0822               	movf	?___xxtofl+2,w
   718  023E  00B0               	movwf	___flge@ff1+2
   719  023F  0821               	movf	?___xxtofl+1,w
   720  0240  00AF               	movwf	___flge@ff1+1
   721  0241  0820               	movf	?___xxtofl,w
   722  0242  00AE               	movwf	___flge@ff1
   723  0243  3040               	movlw	64
   724  0244  00B5               	movwf	___flge@ff2+3
   725  0245  30A0               	movlw	160
   726  0246  00B4               	movwf	___flge@ff2+2
   727  0247  3000               	movlw	0
   728  0248  00B3               	movwf	___flge@ff2+1
   729  0249  3000               	movlw	0
   730  024A  00B2               	movwf	___flge@ff2
   731  024B  215F               	fcall	___flge
   732  024C  1803               	btfsc	3,0
   733  024D  2A53               	goto	l971
   734                           
   735                           ;Defines_And _Prototypes.c: 69:        {;Defines_And _Prototypes.c: 70:          GP5 = 0
      +                          ;
   736  024E  1283               	bcf	3,5	;RP0=0, select bank0
   737  024F  1285               	bcf	5,5	;volatile
   738                           
   739                           ;Defines_And _Prototypes.c: 71:          Pwr_Good = 1;
   740  0250  01BE               	clrf	System_Start_Control@Pwr_Good
   741  0251  0ABE               	incf	System_Start_Control@Pwr_Good,f
   742                           
   743                           ;Defines_And _Prototypes.c: 72:        }
   744  0252  2A90               	goto	l977
   745  0253                     l971:
   746  0253  303F               	movlw	63
   747  0254  1283               	bcf	3,5	;RP0=0, select bank0
   748  0255  00B1               	movwf	___flge@ff1+3
   749  0256  3000               	movlw	0
   750  0257  00B0               	movwf	___flge@ff1+2
   751  0258  3000               	movlw	0
   752  0259  00AF               	movwf	___flge@ff1+1
   753  025A  3000               	movlw	0
   754  025B  00AE               	movwf	___flge@ff1
   755  025C  083C               	movf	_ADC_Result,w	;volatile
   756  025D  00A0               	movwf	___xxtofl@val
   757  025E  083D               	movf	_ADC_Result+1,w	;volatile
   758  025F  00A1               	movwf	___xxtofl@val+1
   759  0260  01A2               	clrf	___xxtofl@val+2
   760  0261  01A3               	clrf	___xxtofl@val+3
   761  0262  3000               	movlw	0
   762  0263  2293               	fcall	___xxtofl
   763  0264  1283               	bcf	3,5	;RP0=0, select bank0
   764  0265  0823               	movf	?___xxtofl+3,w
   765  0266  00B5               	movwf	___flge@ff2+3
   766  0267  0822               	movf	?___xxtofl+2,w
   767  0268  00B4               	movwf	___flge@ff2+2
   768  0269  0821               	movf	?___xxtofl+1,w
   769  026A  00B3               	movwf	___flge@ff2+1
   770  026B  0820               	movf	?___xxtofl,w
   771  026C  00B2               	movwf	___flge@ff2
   772  026D  215F               	fcall	___flge
   773  026E  1803               	btfsc	3,0
   774  026F  2A8D               	goto	l57
   775  0270  1283               	bcf	3,5	;RP0=0, select bank0
   776  0271  083C               	movf	_ADC_Result,w	;volatile
   777  0272  00A0               	movwf	___xxtofl@val
   778  0273  083D               	movf	_ADC_Result+1,w	;volatile
   779  0274  00A1               	movwf	___xxtofl@val+1
   780  0275  01A2               	clrf	___xxtofl@val+2
   781  0276  01A3               	clrf	___xxtofl@val+3
   782  0277  3000               	movlw	0
   783  0278  2293               	fcall	___xxtofl
   784  0279  1283               	bcf	3,5	;RP0=0, select bank0
   785  027A  0823               	movf	?___xxtofl+3,w
   786  027B  00B1               	movwf	___flge@ff1+3
   787  027C  0822               	movf	?___xxtofl+2,w
   788  027D  00B0               	movwf	___flge@ff1+2
   789  027E  0821               	movf	?___xxtofl+1,w
   790  027F  00AF               	movwf	___flge@ff1+1
   791  0280  0820               	movf	?___xxtofl,w
   792  0281  00AE               	movwf	___flge@ff1
   793  0282  3040               	movlw	64
   794  0283  00B5               	movwf	___flge@ff2+3
   795  0284  30A0               	movlw	160
   796  0285  00B4               	movwf	___flge@ff2+2
   797  0286  3000               	movlw	0
   798  0287  00B3               	movwf	___flge@ff2+1
   799  0288  3000               	movlw	0
   800  0289  00B2               	movwf	___flge@ff2
   801  028A  215F               	fcall	___flge
   802  028B  1C03               	btfss	3,0
   803  028C  2A90               	goto	l977
   804  028D                     l57:
   805                           
   806                           ;Defines_And _Prototypes.c: 74:        {;Defines_And _Prototypes.c: 75:          GP5 = 1
      +                          ;
   807  028D  1283               	bcf	3,5	;RP0=0, select bank0
   808  028E  1685               	bsf	5,5	;volatile
   809                           
   810                           ;Defines_And _Prototypes.c: 76:          Pwr_Good = 0;
   811  028F  01BE               	clrf	System_Start_Control@Pwr_Good
   812  0290                     l977:
   813                           
   814                           ;Defines_And _Prototypes.c: 79:     return Pwr_Good;
   815  0290  1283               	bcf	3,5	;RP0=0, select bank0
   816  0291  083E               	movf	System_Start_Control@Pwr_Good,w
   817  0292  0008               	return
   818  0293                     __end_of_System_Start_Control:
   819                           
   820                           	psect	text3
   821  0293                     __ptext3:	
   822 ;; *************** function ___xxtofl *****************
   823 ;; Defined at:
   824 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;  sign            1    wreg     unsigned char 
   827 ;;  val             4    0[BANK0 ] long 
   828 ;; Auto vars:     Size  Location     Type
   829 ;;  sign            1    8[BANK0 ] unsigned char 
   830 ;;  arg             4   10[BANK0 ] unsigned long 
   831 ;;  exp             1    9[BANK0 ] unsigned char 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  4    0[BANK0 ] unsigned char 
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0
   841 ;;      Params:         0       4
   842 ;;      Locals:         0       6
   843 ;;      Temps:          0       4
   844 ;;      Totals:         0      14
   845 ;;Total ram usage:       14 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; This function calls:
   848 ;;		Nothing
   849 ;; This function is called by:
   850 ;;		_System_Start_Control
   851 ;;		_Temperature_Control
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           
   856                           ;psect for function ___xxtofl
   857  0293                     ___xxtofl:
   858                           
   859                           ;incstack = 0
   860                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
   861                           ;___xxtofl@sign stored from wreg
   862  0293  1283               	bcf	3,5	;RP0=0, select bank0
   863  0294  00A8               	movwf	___xxtofl@sign
   864  0295  0828               	movf	___xxtofl@sign,w
   865  0296  1D03               	btfss	3,2
   866  0297  1FA3               	btfss	___xxtofl@val+3,7
   867  0298  2AA9               	goto	l921
   868  0299  0920               	comf	___xxtofl@val,w
   869  029A  00AA               	movwf	___xxtofl@arg
   870  029B  0921               	comf	___xxtofl@val+1,w
   871  029C  00AB               	movwf	___xxtofl@arg+1
   872  029D  0922               	comf	___xxtofl@val+2,w
   873  029E  00AC               	movwf	___xxtofl@arg+2
   874  029F  0923               	comf	___xxtofl@val+3,w
   875  02A0  00AD               	movwf	___xxtofl@arg+3
   876  02A1  0AAA               	incf	___xxtofl@arg,f
   877  02A2  1903               	skipnz
   878  02A3  0AAB               	incf	___xxtofl@arg+1,f
   879  02A4  1903               	skipnz
   880  02A5  0AAC               	incf	___xxtofl@arg+2,f
   881  02A6  1903               	skipnz
   882  02A7  0AAD               	incf	___xxtofl@arg+3,f
   883  02A8  2AB1               	goto	l602
   884  02A9                     l921:
   885  02A9  0823               	movf	___xxtofl@val+3,w
   886  02AA  00AD               	movwf	___xxtofl@arg+3
   887  02AB  0822               	movf	___xxtofl@val+2,w
   888  02AC  00AC               	movwf	___xxtofl@arg+2
   889  02AD  0821               	movf	___xxtofl@val+1,w
   890  02AE  00AB               	movwf	___xxtofl@arg+1
   891  02AF  0820               	movf	___xxtofl@val,w
   892  02B0  00AA               	movwf	___xxtofl@arg
   893  02B1                     l602:
   894  02B1  0823               	movf	___xxtofl@val+3,w
   895  02B2  0422               	iorwf	___xxtofl@val+2,w
   896  02B3  0421               	iorwf	___xxtofl@val+1,w
   897  02B4  0420               	iorwf	___xxtofl@val,w
   898  02B5  1D03               	skipz
   899  02B6  2AC0               	goto	l927
   900  02B7  3000               	movlw	0
   901  02B8  00A3               	movwf	?___xxtofl+3
   902  02B9  3000               	movlw	0
   903  02BA  00A2               	movwf	?___xxtofl+2
   904  02BB  3000               	movlw	0
   905  02BC  00A1               	movwf	?___xxtofl+1
   906  02BD  3000               	movlw	0
   907  02BE  00A0               	movwf	?___xxtofl
   908  02BF  0008               	return
   909  02C0                     l927:
   910  02C0  3096               	movlw	150
   911  02C1  00A4               	movwf	??___xxtofl
   912  02C2  0824               	movf	??___xxtofl,w
   913  02C3  00A9               	movwf	___xxtofl@exp
   914  02C4                     l931:
   915  02C4  30FE               	movlw	254
   916  02C5  052D               	andwf	___xxtofl@arg+3,w
   917  02C6  1903               	btfsc	3,2
   918  02C7  2AF1               	goto	l608
   919  02C8  3001               	movlw	1
   920  02C9  00A4               	movwf	??___xxtofl
   921  02CA  0824               	movf	??___xxtofl,w
   922  02CB  07A9               	addwf	___xxtofl@exp,f
   923  02CC  3001               	movlw	1
   924  02CD                     u545:
   925  02CD  1003               	clrc
   926  02CE  0CAD               	rrf	___xxtofl@arg+3,f
   927  02CF  0CAC               	rrf	___xxtofl@arg+2,f
   928  02D0  0CAB               	rrf	___xxtofl@arg+1,f
   929  02D1  0CAA               	rrf	___xxtofl@arg,f
   930  02D2  3EFF               	addlw	-1
   931  02D3  1D03               	skipz
   932  02D4  2ACD               	goto	u545
   933  02D5  2AC4               	goto	l931
   934  02D6                     l933:
   935  02D6  3001               	movlw	1
   936  02D7  00A4               	movwf	??___xxtofl
   937  02D8  0824               	movf	??___xxtofl,w
   938  02D9  07A9               	addwf	___xxtofl@exp,f
   939  02DA  3001               	movlw	1
   940  02DB  07AA               	addwf	___xxtofl@arg,f
   941  02DC  3000               	movlw	0
   942  02DD  1803               	skipnc
   943  02DE  3001               	movlw	1
   944  02DF  07AB               	addwf	___xxtofl@arg+1,f
   945  02E0  3000               	movlw	0
   946  02E1  1803               	skipnc
   947  02E2  3001               	movlw	1
   948  02E3  07AC               	addwf	___xxtofl@arg+2,f
   949  02E4  3000               	movlw	0
   950  02E5  1803               	skipnc
   951  02E6  3001               	movlw	1
   952  02E7  07AD               	addwf	___xxtofl@arg+3,f
   953  02E8  3001               	movlw	1
   954  02E9                     u565:
   955  02E9  1003               	clrc
   956  02EA  0CAD               	rrf	___xxtofl@arg+3,f
   957  02EB  0CAC               	rrf	___xxtofl@arg+2,f
   958  02EC  0CAB               	rrf	___xxtofl@arg+1,f
   959  02ED  0CAA               	rrf	___xxtofl@arg,f
   960  02EE  3EFF               	addlw	-1
   961  02EF  1D03               	skipz
   962  02F0  2AE9               	goto	u565
   963  02F1                     l608:
   964  02F1  30FF               	movlw	255
   965  02F2  052D               	andwf	___xxtofl@arg+3,w
   966  02F3  1903               	btfsc	3,2
   967  02F4  2B05               	goto	l941
   968  02F5  2AD6               	goto	l933
   969  02F6                     l943:
   970  02F6  3002               	movlw	2
   971  02F7  0229               	subwf	___xxtofl@exp,w
   972  02F8  1C03               	btfss	3,0
   973  02F9  2B07               	goto	l615
   974  02FA  3001               	movlw	1
   975  02FB  02A9               	subwf	___xxtofl@exp,f
   976  02FC  3001               	movlw	1
   977  02FD  00A4               	movwf	??___xxtofl
   978  02FE                     u585:
   979  02FE  1003               	clrc
   980  02FF  0DAA               	rlf	___xxtofl@arg,f
   981  0300  0DAB               	rlf	___xxtofl@arg+1,f
   982  0301  0DAC               	rlf	___xxtofl@arg+2,f
   983  0302  0DAD               	rlf	___xxtofl@arg+3,f
   984  0303  0BA4               	decfsz	??___xxtofl,f
   985  0304  2AFE               	goto	u585
   986  0305                     l941:
   987  0305  1FAC               	btfss	___xxtofl@arg+2,7
   988  0306  2AF6               	goto	l943
   989  0307                     l615:
   990  0307  1829               	btfsc	___xxtofl@exp,0
   991  0308  2B11               	goto	l616
   992  0309  30FF               	movlw	255
   993  030A  05AA               	andwf	___xxtofl@arg,f
   994  030B  30FF               	movlw	255
   995  030C  05AB               	andwf	___xxtofl@arg+1,f
   996  030D  307F               	movlw	127
   997  030E  05AC               	andwf	___xxtofl@arg+2,f
   998  030F  30FF               	movlw	255
   999  0310  05AD               	andwf	___xxtofl@arg+3,f
  1000  0311                     l616:
  1001  0311  1003               	clrc
  1002  0312  0CA9               	rrf	___xxtofl@exp,f
  1003  0313  0829               	movf	___xxtofl@exp,w
  1004  0314  00A4               	movwf	??___xxtofl
  1005  0315  01A5               	clrf	??___xxtofl+1
  1006  0316  01A6               	clrf	??___xxtofl+2
  1007  0317  01A7               	clrf	??___xxtofl+3
  1008  0318  3018               	movlw	24
  1009  0319                     u625:
  1010  0319  1003               	clrc
  1011  031A  0DA4               	rlf	??___xxtofl,f
  1012  031B  0DA5               	rlf	??___xxtofl+1,f
  1013  031C  0DA6               	rlf	??___xxtofl+2,f
  1014  031D  0DA7               	rlf	??___xxtofl+3,f
  1015  031E  3EFF               	addlw	-1
  1016  031F  1D03               	skipz
  1017  0320  2B19               	goto	u625
  1018  0321  0824               	movf	??___xxtofl,w
  1019  0322  04AA               	iorwf	___xxtofl@arg,f
  1020  0323  0825               	movf	??___xxtofl+1,w
  1021  0324  04AB               	iorwf	___xxtofl@arg+1,f
  1022  0325  0826               	movf	??___xxtofl+2,w
  1023  0326  04AC               	iorwf	___xxtofl@arg+2,f
  1024  0327  0827               	movf	??___xxtofl+3,w
  1025  0328  04AD               	iorwf	___xxtofl@arg+3,f
  1026  0329  0828               	movf	___xxtofl@sign,w
  1027  032A  1D03               	btfss	3,2
  1028  032B  1FA3               	btfss	___xxtofl@val+3,7
  1029  032C  2B2E               	goto	l955
  1030  032D  17AD               	bsf	___xxtofl@arg+3,7
  1031  032E                     l955:
  1032  032E  082D               	movf	___xxtofl@arg+3,w
  1033  032F  00A3               	movwf	?___xxtofl+3
  1034  0330  082C               	movf	___xxtofl@arg+2,w
  1035  0331  00A2               	movwf	?___xxtofl+2
  1036  0332  082B               	movf	___xxtofl@arg+1,w
  1037  0333  00A1               	movwf	?___xxtofl+1
  1038  0334  082A               	movf	___xxtofl@arg,w
  1039  0335  00A0               	movwf	?___xxtofl
  1040  0336  0008               	return
  1041  0337                     __end_of___xxtofl:
  1042                           
  1043                           	psect	text4
  1044  013D                     __ptext4:	
  1045 ;; *************** function ___wmul *****************
  1046 ;; Defined at:
  1047 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1050 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;  product         2    4[BANK0 ] unsigned int 
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  2    0[BANK0 ] unsigned int 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, status,0
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMMON   BANK0
  1062 ;;      Params:         0       4
  1063 ;;      Locals:         0       2
  1064 ;;      Temps:          0       0
  1065 ;;      Totals:         0       6
  1066 ;;Total ram usage:        6 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_System_Start_Control
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           
  1076                           ;psect for function ___wmul
  1077  013D                     ___wmul:
  1078                           
  1079                           ;incstack = 0
  1080                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1081  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1082  013E  01A4               	clrf	___wmul@product
  1083  013F  01A5               	clrf	___wmul@product+1
  1084  0140                     l883:
  1085  0140  1C20               	btfss	___wmul@multiplier,0
  1086  0141  2948               	goto	l169
  1087  0142  0822               	movf	___wmul@multiplicand,w
  1088  0143  07A4               	addwf	___wmul@product,f
  1089  0144  1803               	skipnc
  1090  0145  0AA5               	incf	___wmul@product+1,f
  1091  0146  0823               	movf	___wmul@multiplicand+1,w
  1092  0147  07A5               	addwf	___wmul@product+1,f
  1093  0148                     l169:
  1094  0148  3001               	movlw	1
  1095  0149                     u415:
  1096  0149  1003               	clrc
  1097  014A  0DA2               	rlf	___wmul@multiplicand,f
  1098  014B  0DA3               	rlf	___wmul@multiplicand+1,f
  1099  014C  3EFF               	addlw	-1
  1100  014D  1D03               	skipz
  1101  014E  2949               	goto	u415
  1102  014F  3001               	movlw	1
  1103  0150                     u425:
  1104  0150  1003               	clrc
  1105  0151  0CA1               	rrf	___wmul@multiplier+1,f
  1106  0152  0CA0               	rrf	___wmul@multiplier,f
  1107  0153  3EFF               	addlw	-1
  1108  0154  1D03               	skipz
  1109  0155  2950               	goto	u425
  1110  0156  0820               	movf	___wmul@multiplier,w
  1111  0157  0421               	iorwf	___wmul@multiplier+1,w
  1112  0158  1D03               	btfss	3,2
  1113  0159  2940               	goto	l883
  1114  015A  0825               	movf	___wmul@product+1,w
  1115  015B  00A1               	movwf	?___wmul+1
  1116  015C  0824               	movf	___wmul@product,w
  1117  015D  00A0               	movwf	?___wmul
  1118  015E  0008               	return
  1119  015F                     __end_of___wmul:
  1120                           
  1121                           	psect	text5
  1122  015F                     __ptext5:	
  1123 ;; *************** function ___flge *****************
  1124 ;; Defined at:
  1125 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  ff1             4   14[BANK0 ] unsigned int 
  1128 ;;  ff2             4   18[BANK0 ] unsigned int 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;		None               void
  1133 ;; Registers used:
  1134 ;;		wreg, status,2, status,0
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0
  1140 ;;      Params:         0       8
  1141 ;;      Locals:         0       0
  1142 ;;      Temps:          0       4
  1143 ;;      Totals:         0      12
  1144 ;;Total ram usage:       12 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_System_Start_Control
  1150 ;;		_Temperature_Control
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           
  1155                           ;psect for function ___flge
  1156  015F                     ___flge:
  1157                           
  1158                           ;incstack = 0
  1159                           ; Regs used in ___flge: [wreg+status,2+status,0]
  1160  015F  3000               	movlw	0
  1161  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1162  0161  052E               	andwf	___flge@ff1,w
  1163  0162  00B6               	movwf	??___flge
  1164  0163  3000               	movlw	0
  1165  0164  052F               	andwf	___flge@ff1+1,w
  1166  0165  00B7               	movwf	??___flge+1
  1167  0166  3080               	movlw	128
  1168  0167  0530               	andwf	___flge@ff1+2,w
  1169  0168  00B8               	movwf	??___flge+2
  1170  0169  307F               	movlw	127
  1171  016A  0531               	andwf	___flge@ff1+3,w
  1172  016B  00B9               	movwf	??___flge+3
  1173  016C  0839               	movf	??___flge+3,w
  1174  016D  0438               	iorwf	??___flge+2,w
  1175  016E  0437               	iorwf	??___flge+1,w
  1176  016F  0436               	iorwf	??___flge,w
  1177  0170  1D03               	skipz
  1178  0171  297A               	goto	l343
  1179  0172  3000               	movlw	0
  1180  0173  00B1               	movwf	___flge@ff1+3
  1181  0174  3000               	movlw	0
  1182  0175  00B0               	movwf	___flge@ff1+2
  1183  0176  3000               	movlw	0
  1184  0177  00AF               	movwf	___flge@ff1+1
  1185  0178  3000               	movlw	0
  1186  0179  00AE               	movwf	___flge@ff1
  1187  017A                     l343:
  1188  017A  3000               	movlw	0
  1189  017B  0532               	andwf	___flge@ff2,w
  1190  017C  00B6               	movwf	??___flge
  1191  017D  3000               	movlw	0
  1192  017E  0533               	andwf	___flge@ff2+1,w
  1193  017F  00B7               	movwf	??___flge+1
  1194  0180  3080               	movlw	128
  1195  0181  0534               	andwf	___flge@ff2+2,w
  1196  0182  00B8               	movwf	??___flge+2
  1197  0183  307F               	movlw	127
  1198  0184  0535               	andwf	___flge@ff2+3,w
  1199  0185  00B9               	movwf	??___flge+3
  1200  0186  0839               	movf	??___flge+3,w
  1201  0187  0438               	iorwf	??___flge+2,w
  1202  0188  0437               	iorwf	??___flge+1,w
  1203  0189  0436               	iorwf	??___flge,w
  1204  018A  1D03               	skipz
  1205  018B  2994               	goto	l901
  1206  018C  3000               	movlw	0
  1207  018D  00B5               	movwf	___flge@ff2+3
  1208  018E  3000               	movlw	0
  1209  018F  00B4               	movwf	___flge@ff2+2
  1210  0190  3000               	movlw	0
  1211  0191  00B3               	movwf	___flge@ff2+1
  1212  0192  3000               	movlw	0
  1213  0193  00B2               	movwf	___flge@ff2
  1214  0194                     l901:
  1215  0194  1FB1               	btfss	___flge@ff1+3,7
  1216  0195  29BA               	goto	l905
  1217  0196  3000               	movlw	0
  1218  0197  00B6               	movwf	??___flge
  1219  0198  3000               	movlw	0
  1220  0199  00B7               	movwf	??___flge+1
  1221  019A  3000               	movlw	0
  1222  019B  00B8               	movwf	??___flge+2
  1223  019C  3080               	movlw	128
  1224  019D  00B9               	movwf	??___flge+3
  1225  019E  082E               	movf	___flge@ff1,w
  1226  019F  02B6               	subwf	??___flge,f
  1227  01A0  082F               	movf	___flge@ff1+1,w
  1228  01A1  1C03               	skipc
  1229  01A2  0F2F               	incfsz	___flge@ff1+1,w
  1230  01A3  29A5               	goto	u471
  1231  01A4  29A6               	goto	u472
  1232  01A5                     u471:
  1233  01A5  02B7               	subwf	??___flge+1,f
  1234  01A6                     u472:
  1235  01A6  0830               	movf	___flge@ff1+2,w
  1236  01A7  1C03               	skipc
  1237  01A8  0F30               	incfsz	___flge@ff1+2,w
  1238  01A9  29AB               	goto	u473
  1239  01AA  29AC               	goto	u474
  1240  01AB                     u473:
  1241  01AB  02B8               	subwf	??___flge+2,f
  1242  01AC                     u474:
  1243  01AC  0831               	movf	___flge@ff1+3,w
  1244  01AD  1C03               	skipc
  1245  01AE  0F31               	incfsz	___flge@ff1+3,w
  1246  01AF  29B1               	goto	u475
  1247  01B0  29B2               	goto	u476
  1248  01B1                     u475:
  1249  01B1  02B9               	subwf	??___flge+3,f
  1250  01B2                     u476:
  1251  01B2  0839               	movf	??___flge+3,w
  1252  01B3  00B1               	movwf	___flge@ff1+3
  1253  01B4  0838               	movf	??___flge+2,w
  1254  01B5  00B0               	movwf	___flge@ff1+2
  1255  01B6  0837               	movf	??___flge+1,w
  1256  01B7  00AF               	movwf	___flge@ff1+1
  1257  01B8  0836               	movf	??___flge,w
  1258  01B9  00AE               	movwf	___flge@ff1
  1259  01BA                     l905:
  1260  01BA  1FB5               	btfss	___flge@ff2+3,7
  1261  01BB  29E0               	goto	l346
  1262  01BC  3000               	movlw	0
  1263  01BD  00B6               	movwf	??___flge
  1264  01BE  3000               	movlw	0
  1265  01BF  00B7               	movwf	??___flge+1
  1266  01C0  3000               	movlw	0
  1267  01C1  00B8               	movwf	??___flge+2
  1268  01C2  3080               	movlw	128
  1269  01C3  00B9               	movwf	??___flge+3
  1270  01C4  0832               	movf	___flge@ff2,w
  1271  01C5  02B6               	subwf	??___flge,f
  1272  01C6  0833               	movf	___flge@ff2+1,w
  1273  01C7  1C03               	skipc
  1274  01C8  0F33               	incfsz	___flge@ff2+1,w
  1275  01C9  29CB               	goto	u491
  1276  01CA  29CC               	goto	u492
  1277  01CB                     u491:
  1278  01CB  02B7               	subwf	??___flge+1,f
  1279  01CC                     u492:
  1280  01CC  0834               	movf	___flge@ff2+2,w
  1281  01CD  1C03               	skipc
  1282  01CE  0F34               	incfsz	___flge@ff2+2,w
  1283  01CF  29D1               	goto	u493
  1284  01D0  29D2               	goto	u494
  1285  01D1                     u493:
  1286  01D1  02B8               	subwf	??___flge+2,f
  1287  01D2                     u494:
  1288  01D2  0835               	movf	___flge@ff2+3,w
  1289  01D3  1C03               	skipc
  1290  01D4  0F35               	incfsz	___flge@ff2+3,w
  1291  01D5  29D7               	goto	u495
  1292  01D6  29D8               	goto	u496
  1293  01D7                     u495:
  1294  01D7  02B9               	subwf	??___flge+3,f
  1295  01D8                     u496:
  1296  01D8  0839               	movf	??___flge+3,w
  1297  01D9  00B5               	movwf	___flge@ff2+3
  1298  01DA  0838               	movf	??___flge+2,w
  1299  01DB  00B4               	movwf	___flge@ff2+2
  1300  01DC  0837               	movf	??___flge+1,w
  1301  01DD  00B3               	movwf	___flge@ff2+1
  1302  01DE  0836               	movf	??___flge,w
  1303  01DF  00B2               	movwf	___flge@ff2
  1304  01E0                     l346:
  1305  01E0  3080               	movlw	128
  1306  01E1  06B1               	xorwf	___flge@ff1+3,f
  1307  01E2  3080               	movlw	128
  1308  01E3  06B5               	xorwf	___flge@ff2+3,f
  1309  01E4  0835               	movf	___flge@ff2+3,w
  1310  01E5  0231               	subwf	___flge@ff1+3,w
  1311  01E6  1D03               	skipz
  1312  01E7  0008               	return
  1313  01E8  0834               	movf	___flge@ff2+2,w
  1314  01E9  0230               	subwf	___flge@ff1+2,w
  1315  01EA  1D03               	skipz
  1316  01EB  0008               	return
  1317  01EC  0833               	movf	___flge@ff2+1,w
  1318  01ED  022F               	subwf	___flge@ff1+1,w
  1319  01EE  1D03               	skipz
  1320  01EF  0008               	return
  1321  01F0  0832               	movf	___flge@ff2,w
  1322  01F1  022E               	subwf	___flge@ff1,w
  1323  01F2  0008               	return
  1324  01F3                     __end_of___flge:
  1325                           
  1326                           	psect	text6
  1327  011C                     __ptext6:	
  1328 ;; *************** function _Get_Voltage *****************
  1329 ;; Defined at:
  1330 ;;		line 27 in file "Defines_And _Prototypes.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  Chanel_Numbe    1    wreg     unsigned char 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  Chanel_Numbe    1    2[BANK0 ] unsigned char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMMON   BANK0
  1344 ;;      Params:         0       0
  1345 ;;      Locals:         0       1
  1346 ;;      Temps:          0       2
  1347 ;;      Totals:         0       3
  1348 ;;Total ram usage:        3 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_System_Start_Control
  1354 ;;		_Temperature_Control
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           
  1359                           ;psect for function _Get_Voltage
  1360  011C                     _Get_Voltage:
  1361                           
  1362                           ;incstack = 0
  1363                           ; Regs used in _Get_Voltage: [wreg-fsr0h+status,2+status,0]
  1364                           ;Get_Voltage@Chanel_Number stored from wreg
  1365  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1366  011D  00A2               	movwf	Get_Voltage@Chanel_Number
  1367                           
  1368                           ;Defines_And _Prototypes.c: 27: void Get_Voltage (uint8_t Chanel_Number);Defines_And _Pr
      +                          ototypes.c: 28: {;Defines_And _Prototypes.c: 29:     switch(Chanel_Number)
  1369  011E  2925               	goto	l873
  1370  011F                     l41:	
  1371                           ;Defines_And _Prototypes.c: 30:     {;Defines_And _Prototypes.c: 31:             case 0:
  1372                           
  1373                           
  1374                           ;Defines_And _Prototypes.c: 32:               CHS1 = 0; CHS0 = 0;
  1375  011F  119F               	bcf	31,3	;volatile
  1376  0120  111F               	bcf	31,2	;volatile
  1377                           
  1378                           ;Defines_And _Prototypes.c: 33:               break;
  1379  0121  2935               	goto	l42
  1380  0122                     l43:	
  1381                           ;Defines_And _Prototypes.c: 34:             case 1:
  1382                           
  1383                           
  1384                           ;Defines_And _Prototypes.c: 35:               CHS1 = 0; CHS0 = 1;
  1385  0122  119F               	bcf	31,3	;volatile
  1386  0123  151F               	bsf	31,2	;volatile
  1387                           
  1388                           ;Defines_And _Prototypes.c: 36:               break;
  1389  0124  2935               	goto	l42
  1390  0125                     l873:
  1391  0125  0822               	movf	Get_Voltage@Chanel_Number,w
  1392  0126  00A0               	movwf	??_Get_Voltage
  1393  0127  01A1               	clrf	??_Get_Voltage+1
  1394                           
  1395                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1396                           ; Switch size 1, requested type "simple"
  1397                           ; Number of cases is 1, Range of values is 0 to 0
  1398                           ; switch strategies available:
  1399                           ; Name         Instructions Cycles
  1400                           ; simple_byte            4     3 (average)
  1401                           ; direct_byte            7     6 (fixed)
  1402                           ; jumptable            260     6 (fixed)
  1403                           ;	Chosen strategy is simple_byte
  1404  0128  0821               	movf	??_Get_Voltage+1,w
  1405  0129  3A00               	xorlw	0	; case 0
  1406  012A  1903               	skipnz
  1407  012B  292D               	goto	l1047
  1408  012C  2935               	goto	l42
  1409  012D                     l1047:
  1410                           
  1411                           ; Switch size 1, requested type "simple"
  1412                           ; Number of cases is 2, Range of values is 0 to 1
  1413                           ; switch strategies available:
  1414                           ; Name         Instructions Cycles
  1415                           ; simple_byte            7     4 (average)
  1416                           ; direct_byte            8     6 (fixed)
  1417                           ; jumptable            260     6 (fixed)
  1418                           ;	Chosen strategy is simple_byte
  1419  012D  0820               	movf	??_Get_Voltage,w
  1420  012E  3A00               	xorlw	0	; case 0
  1421  012F  1903               	skipnz
  1422  0130  291F               	goto	l41
  1423  0131  3A01               	xorlw	1	; case 1
  1424  0132  1903               	skipnz
  1425  0133  2922               	goto	l43
  1426  0134  2935               	goto	l42
  1427  0135                     l42:
  1428                           
  1429                           ;Defines_And _Prototypes.c: 40:     GO = 1;
  1430  0135  149F               	bsf	31,1	;volatile
  1431  0136                     l45:	
  1432                           ;Defines_And _Prototypes.c: 41:     while(GO);
  1433                           
  1434  0136  189F               	btfsc	31,1	;volatile
  1435  0137  2936               	goto	l45
  1436                           
  1437                           ;Defines_And _Prototypes.c: 42:     _delay((unsigned long)((8)*(4000000/4000000.0)));
  1438  0138  2939               	nop2	;2 cycle nop
  1439  0139  293A               	nop2	;2 cycle nop
  1440  013A  293B               	nop2	;2 cycle nop
  1441  013B  293C               	nop2	;2 cycle nop
  1442  013C  0008               	return
  1443  013D                     __end_of_Get_Voltage:
  1444                           
  1445                           	psect	text7
  1446  010B                     __ptext7:	
  1447 ;; *************** function _Init_uC *****************
  1448 ;; Defined at:
  1449 ;;		line 7 in file "Defines_And _Prototypes.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;		None
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      void 
  1456 ;; Registers used:
  1457 ;;		wreg
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMMON   BANK0
  1463 ;;      Params:         0       0
  1464 ;;      Locals:         0       0
  1465 ;;      Temps:          0       0
  1466 ;;      Totals:         0       0
  1467 ;;Total ram usage:        0 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; This function calls:
  1470 ;;		Nothing
  1471 ;; This function is called by:
  1472 ;;		_main
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           
  1477                           ;psect for function _Init_uC
  1478  010B                     _Init_uC:
  1479                           
  1480                           ;Defines_And _Prototypes.c: 10:     TRISIO5 = 0;
  1481                           
  1482                           ;incstack = 0
  1483                           ; Regs used in _Init_uC: [wreg]
  1484  010B  1683               	bsf	3,5	;RP0=1, select bank1
  1485  010C  1285               	bcf	5,5	;volatile
  1486                           
  1487                           ;Defines_And _Prototypes.c: 11:     GP5 = 1;
  1488  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1489  010E  1685               	bsf	5,5	;volatile
  1490                           
  1491                           ;Defines_And _Prototypes.c: 14:     TRISIO2 = 0;
  1492  010F  1683               	bsf	3,5	;RP0=1, select bank1
  1493  0110  1105               	bcf	5,2	;volatile
  1494                           
  1495                           ;Defines_And _Prototypes.c: 15:     GP2 = 0;
  1496  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1497  0112  1105               	bcf	5,2	;volatile
  1498                           
  1499                           ;Defines_And _Prototypes.c: 18:     ADON = 1;
  1500  0113  141F               	bsf	31,0	;volatile
  1501                           
  1502                           ;Defines_And _Prototypes.c: 19:     ADFM = 1;
  1503  0114  179F               	bsf	31,7	;volatile
  1504                           
  1505                           ;Defines_And _Prototypes.c: 20:     VCFG = 0;
  1506  0115  131F               	bcf	31,6	;volatile
  1507                           
  1508                           ;Defines_And _Prototypes.c: 21:     TRISIO0 = 1;
  1509  0116  1683               	bsf	3,5	;RP0=1, select bank1
  1510  0117  1405               	bsf	5,0	;volatile
  1511                           
  1512                           ;Defines_And _Prototypes.c: 22:     TRISIO1 = 1;
  1513  0118  1485               	bsf	5,1	;volatile
  1514                           
  1515                           ;Defines_And _Prototypes.c: 23:     ANSEL = 0b01010011;
  1516  0119  3053               	movlw	83
  1517  011A  009F               	movwf	31	;volatile
  1518  011B  0008               	return
  1519  011C                     __end_of_Init_uC:
  1520  005E                     btemp	set	94	;btemp
  1521  005E                     wtemp0	set	94
  1522                           
  1523                           	psect	config
  1524                           
  1525                           ;Config register CONFIG @ 0x2007
  1526                           ;	Oscillator Selection bits
  1527                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  1528                           ;	Watchdog Timer Enable bit
  1529                           ;	WDTE = ON, WDT enabled
  1530                           ;	Power-Up Timer Enable bit
  1531                           ;	PWRTE = ON, PWRT enabled
  1532                           ;	GP3/MCLR pin function select
  1533                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
  1534                           ;	Brown-out Detect Enable bit
  1535                           ;	BOREN = ON, BOD enabled
  1536                           ;	Code Protection bit
  1537                           ;	CP = OFF, Program Memory code protection is disabled
  1538                           ;	Data Code Protection bit
  1539                           ;	CPD = OFF, Data memory code protection is disabled
  1540  2007                     	org	8199
  1541  2007  31CC               	dw	12748

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     28      31

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_System_Start_Control
    _Temperature_Control->_System_Start_Control
    _System_Start_Control->___flge
    ___flge->___xxtofl

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8906
                            _Init_uC
               _System_Start_Control
                _Temperature_Control
 ---------------------------------------------------------------------------------
 (1) _Temperature_Control                                  0     0      0    5856
                        _Get_Voltage
               _System_Start_Control
                             ___flge
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _System_Start_Control                                 2     2      0    3050
                                             26 BANK0      2     2      0
                        _Get_Voltage
                             ___flge
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1082
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1702
                                             14 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _Get_Voltage                                          3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Init_uC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_uC
   _System_Start_Control
     _Get_Voltage
     ___flge
       ___xxtofl (ARG)
     ___wmul
     ___xxtofl
   _Temperature_Control
     _Get_Voltage
     _System_Start_Control
       _Get_Voltage
       ___flge
         ___xxtofl (ARG)
       ___wmul
       ___xxtofl
     ___flge
       ___xxtofl (ARG)
     ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E     1C      1F       4       50.0%
ABS                  0      0      1F       5        0.0%
DATA                 0      0      1F       6        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Dec 06 23:38:16 2021

                           l41 011F                             l42 0135                             l43 0122  
                           l45 0136                             l57 028D                             _GO 00F9  
          _Temperature_Control 0337            ___wmul@multiplicand 0022                            l343 017A  
                          l169 0148                            l346 01E0                            l602 02B1  
                          l615 0307                            l616 0311                            l608 02F1  
                          l901 0194                            l905 01BA                            l921 02A9  
                          l931 02C4                            l941 0305                            l933 02D6  
                          l943 02F6                            l927 02C0                            l873 0125  
                          l883 0140                            l955 032E                            l971 0253  
                          _GP2 002A                            l977 0290                            _GP5 002D  
                          l995 039C                            l997 039F                            l999 037F  
                          u415 0149                            u425 0150                            u471 01A5  
                          u472 01A6                            u473 01AB                            u625 0319  
                          u545 02CD                            u474 01AC                            u491 01CB  
                          u475 01B1                            u492 01CC                            u476 01B2  
                          u493 01D1                            u565 02E9                            u494 01D2  
                          u495 01D7                            u655 020B                            u496 01D8  
                          u585 02FE                           l1003 03BC                           l1013 0108  
                         l1047 012D                           _ADFM 00FF                           _ADON 00F8  
                         _CHS0 00FA                           _CHS1 00FB           ?_Temperature_Control 0020  
                         _VCFG 00FE                           _main 0107            __end_of_Get_Voltage 013D  
                         btemp 005E                           start 0000                __end_of_Init_uC 011C  
                        ?_main 0020                          _ANSEL 009F          ??_Temperature_Control 0000  
                        status 0003                          wtemp0 005E                __initialization 03F9  
                 __end_of_main 010B                         ??_main 0000                    _Get_Voltage 011C  
                       _ADRESH 001E                         _ADRESL 009E               __end_of___xxtofl 0337  
                    ??_Init_uC 0000                         ___flge 015F                         ___wmul 013D  
 __end_of_System_Start_Control 0293                     ___flge@ff1 002E                     ___flge@ff2 0032  
                 ___xxtofl@arg 002A                   ___xxtofl@exp 0029                   ___xxtofl@val 0020  
      __end_of__initialization 03FD                 __pcstackCOMMON 0000                     __pbssBANK0 003C  
 System_Start_Control@Pwr_Good 003E                     __pmaintext 0107                        ?___flge 002E  
                      ?___wmul 0020                      ?___xxtofl 0020                        _TRISIO0 0428  
                      _TRISIO1 0429                        _TRISIO2 042A                        _TRISIO5 042D  
                      _Init_uC 010B           _System_Start_Control 01F3                __size_of___flge 0094  
              __size_of___wmul 0022                        __ptext1 0337                        __ptext2 01F3  
                      __ptext3 0293                        __ptext4 013D                        __ptext5 015F  
                      __ptext6 011C                        __ptext7 010B                     ??___xxtofl 0024  
  __end_of_Temperature_Control 03F9                   ?_Get_Voltage 0020           end_of_initialization 03FD  
        ?_System_Start_Control 0020                  ___xxtofl@sign 0028                 __end_of___flge 01F3  
               __end_of___wmul 015F            start_initialization 03F9         ??_System_Start_Control 003A  
                     ??___flge 0036                       ??___wmul 0000                      ___latbits 0000  
                __pcstackBANK0 0020              __size_of___xxtofl 00A4           __size_of_Get_Voltage 0021  
                     ?_Init_uC 0020                 ___wmul@product 0024              ___wmul@multiplier 0020  
 __size_of_Temperature_Control 00C2                     _ADC_Result 003C               __size_of_Init_uC 0011  
     Get_Voltage@Chanel_Number 0022                       ___xxtofl 0293                  __size_of_main 0004  
__size_of_System_Start_Control 00A0                  ??_Get_Voltage 0020  
