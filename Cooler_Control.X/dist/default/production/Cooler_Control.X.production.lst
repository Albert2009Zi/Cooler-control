

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Mar 08 20:52:36 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x5E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 29/04/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC12F675 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0019                     	;# 
    63  001E                     	;# 
    64  001F                     	;# 
    65  0081                     	;# 
    66  0085                     	;# 
    67  008C                     	;# 
    68  008E                     	;# 
    69  0090                     	;# 
    70  0095                     	;# 
    71  0096                     	;# 
    72  0096                     	;# 
    73  0099                     	;# 
    74  009A                     	;# 
    75  009A                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  009F                     	;# 
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0019                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  008C                     	;# 
   100  008E                     	;# 
   101  0090                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0096                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0019                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  0081                     	;# 
   130  0085                     	;# 
   131  008C                     	;# 
   132  008E                     	;# 
   133  0090                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0096                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009A                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  009F                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0019                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  008C                     	;# 
   164  008E                     	;# 
   165  0090                     	;# 
   166  0095                     	;# 
   167  0096                     	;# 
   168  0096                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009A                     	;# 
   172  009B                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  009F                     	;# 
   177  0000                     nosup@@$_$_CONFIG	set	0	;# 
   178  0000                     	;# 
   179  0001                     	;# 
   180  0002                     	;# 
   181  0003                     	;# 
   182  0004                     	;# 
   183  0005                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000E                     	;# 
   188  000E                     	;# 
   189  000F                     	;# 
   190  0010                     	;# 
   191  0019                     	;# 
   192  001E                     	;# 
   193  001F                     	;# 
   194  0081                     	;# 
   195  0085                     	;# 
   196  008C                     	;# 
   197  008E                     	;# 
   198  0090                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0096                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  000B                     _INTCONbits	set	11
   211  001E                     _ADRESH	set	30
   212  0005                     _GPIO	set	5
   213  0019                     _CMCON	set	25
   214  005D                     _T0IE	set	93
   215  0066                     _ADIF	set	102
   216  00F9                     _GO	set	249
   217  005F                     _GIE	set	95
   218  00FA                     _CHS0	set	250
   219  00FB                     _CHS1	set	251
   220  00FE                     _VCFG	set	254
   221  00FF                     _ADFM	set	255
   222  00F8                     _ADON	set	248
   223  002C                     _GP4	set	44
   224  002D                     _GP5	set	45
   225  0081                     _OPTION_REG	set	129
   226  009E                     _ADRESL	set	158
   227  009F                     _ANSEL	set	159
   228  0085                     _TRISIO	set	133
   229  0466                     _ADIE	set	1126
   230  0429                     _TRISIO1	set	1065
   231  0428                     _TRISIO0	set	1064
   232  042C                     _TRISIO4	set	1068
   233  042D                     _TRISIO5	set	1069
   234                           
   235                           	psect	cinit
   236  000E                     start_initialization:	
   237                           ; #config settings
   238                           
   239  000E                     __initialization:
   240                           
   241                           ; Clear objects allocated to BANK0
   242  000E  1283               	bcf	3,5	;RP0=0, select bank0
   243  000F  01A5               	clrf	__pbssBANK0& (0+127)
   244  0010  01A6               	clrf	(__pbssBANK0+1)& (0+127)
   245  0011  01A7               	clrf	(__pbssBANK0+2)& (0+127)
   246  0012                     end_of_initialization:	
   247                           ;End of C runtime variable initialization code
   248                           
   249  0012                     __end_of__initialization:
   250  0012  0183               	clrf	3
   251  0013  286C               	ljmp	_main	;jump to C main() function
   252                           
   253                           	psect	bssBANK0
   254  0025                     __pbssBANK0:
   255  0025                     _ADC_Value:
   256  0025                     	ds	2
   257  0027                     _PWM_Value:
   258  0027                     	ds	1
   259                           
   260                           	psect	cstackCOMMON
   261  0000                     __pcstackCOMMON:
   262  0000                     ??_Init_uC:
   263  0000                     ??_main:	
   264                           ; 1 bytes @ 0x0
   265                           
   266                           
   267                           	psect	cstackBANK0
   268  0020                     __pcstackBANK0:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0020                     ?_Init_uC:
   272  0020                     ?_ISR:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0020                     ??_ISR:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0020                     ?_InitTimer0:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0020                     ?_main:	
   282                           ; 1 bytes @ 0x0
   283                           
   284                           
   285                           ; 1 bytes @ 0x0
   286  0020                     	ds	4
   287  0024                     ??_InitTimer0:
   288                           
   289                           ; 1 bytes @ 0x4
   290  0024                     	ds	1
   291                           
   292                           	psect	maintext
   293  006C                     __pmaintext:	
   294 ;;
   295 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   296 ;;
   297 ;; *************** function _main *****************
   298 ;; Defined at:
   299 ;;		line 10 in file "main.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, status,2, status,0, pclath, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : B00/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMMON   BANK0
   313 ;;      Params:         0       0
   314 ;;      Locals:         0       0
   315 ;;      Temps:          0       0
   316 ;;      Totals:         0       0
   317 ;;Total ram usage:        0 bytes
   318 ;; Hardware stack levels required when called:    2
   319 ;; This function calls:
   320 ;;		_InitTimer0
   321 ;;		_Init_uC
   322 ;; This function is called by:
   323 ;;		Startup code after reset
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           
   328                           ;psect for function _main
   329  006C                     _main:
   330  006C                     l774:	
   331                           ;incstack = 0
   332                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   333                           
   334                           
   335                           ;main.c: 12:  InitTimer0();
   336  006C  2064               	fcall	_InitTimer0
   337                           
   338                           ;main.c: 13:     Init_uC();
   339  006D  2046               	fcall	_Init_uC
   340  006E                     l776:
   341                           
   342                           ;main.c: 14:     (INTCONbits.GIE = 1);
   343  006E  178B               	bsf	11,7	;volatile
   344  006F                     l83:	
   345                           ;main.c: 15:  while(1)
   346                           
   347  006F                     l84:	
   348                           ;main.c: 16:  {;main.c: 17:  }
   349                           
   350  006F  286F               	goto	l83
   351  0070  280D               	ljmp	start
   352  0071                     __end_of_main:
   353                           
   354                           	psect	text1
   355  0046                     __ptext1:	
   356 ;; *************** function _Init_uC *****************
   357 ;; Defined at:
   358 ;;		line 4 in file "ADC.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;		None
   361 ;; Auto vars:     Size  Location     Type
   362 ;;		None
   363 ;; Return value:  Size  Location     Type
   364 ;;                  1    wreg      void 
   365 ;; Registers used:
   366 ;;		wreg, status,2
   367 ;; Tracked objects:
   368 ;;		On entry : 0/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMMON   BANK0
   372 ;;      Params:         0       0
   373 ;;      Locals:         0       0
   374 ;;      Temps:          0       0
   375 ;;      Totals:         0       0
   376 ;;Total ram usage:        0 bytes
   377 ;; Hardware stack levels used:    1
   378 ;; Hardware stack levels required when called:    1
   379 ;; This function calls:
   380 ;;		Nothing
   381 ;; This function is called by:
   382 ;;		_main
   383 ;; This function uses a non-reentrant model
   384 ;;
   385                           
   386                           
   387                           ;psect for function _Init_uC
   388  0046                     _Init_uC:
   389  0046                     l728:	
   390                           ;incstack = 0
   391                           ; Regs used in _Init_uC: [wreg+status,2]
   392                           
   393                           
   394                           ;ADC.c: 6:  CMCON = 0x07;
   395  0046  3007               	movlw	7
   396  0047  1283               	bcf	3,5	;RP0=0, select bank0
   397  0048  0099               	movwf	25	;volatile
   398  0049                     l730:
   399                           
   400                           ;ADC.c: 9:     TRISIO = 0;
   401  0049  1683               	bsf	3,5	;RP0=1, select bank1
   402  004A  0185               	clrf	5	;volatile
   403  004B                     l732:
   404                           
   405                           ;ADC.c: 10:     GPIO = 0;
   406  004B  1283               	bcf	3,5	;RP0=0, select bank0
   407  004C  0185               	clrf	5	;volatile
   408  004D                     l734:
   409                           
   410                           ;ADC.c: 13:     TRISIO5 = 0;
   411  004D  1683               	bsf	3,5	;RP0=1, select bank1
   412  004E  1285               	bcf	5,5	;volatile
   413  004F                     l736:
   414                           
   415                           ;ADC.c: 14:     GP5 = 1;
   416  004F  1283               	bcf	3,5	;RP0=0, select bank0
   417  0050  1685               	bsf	5,5	;volatile
   418  0051                     l738:
   419                           
   420                           ;ADC.c: 17:     TRISIO4 = 0;
   421  0051  1683               	bsf	3,5	;RP0=1, select bank1
   422  0052  1205               	bcf	5,4	;volatile
   423  0053                     l740:
   424                           
   425                           ;ADC.c: 18:     GP4 = 0;
   426  0053  1283               	bcf	3,5	;RP0=0, select bank0
   427  0054  1205               	bcf	5,4	;volatile
   428  0055                     l742:
   429                           
   430                           ;ADC.c: 22:     ADON = 1;
   431  0055  141F               	bsf	31,0	;volatile
   432  0056                     l744:
   433                           
   434                           ;ADC.c: 23:     ADFM = 1;
   435  0056  179F               	bsf	31,7	;volatile
   436  0057                     l746:
   437                           
   438                           ;ADC.c: 24:     VCFG = 0;
   439  0057  131F               	bcf	31,6	;volatile
   440  0058                     l748:
   441                           
   442                           ;ADC.c: 25:     TRISIO0 = 1;
   443  0058  1683               	bsf	3,5	;RP0=1, select bank1
   444  0059  1405               	bsf	5,0	;volatile
   445  005A                     l750:
   446                           
   447                           ;ADC.c: 26:     TRISIO1 = 1;
   448  005A  1485               	bsf	5,1	;volatile
   449                           
   450                           ;ADC.c: 28:     ANSEL = 0b00110011;
   451  005B  3033               	movlw	51
   452  005C  009F               	movwf	31	;volatile
   453  005D                     l752:
   454                           
   455                           ;ADC.c: 30:     CHS1 = 0;
   456  005D  1283               	bcf	3,5	;RP0=0, select bank0
   457  005E  119F               	bcf	31,3	;volatile
   458  005F                     l754:
   459                           
   460                           ;ADC.c: 31:     CHS0 = 1;
   461  005F  151F               	bsf	31,2	;volatile
   462  0060                     l756:
   463                           
   464                           ;ADC.c: 32:     ADIE = 1;
   465  0060  1683               	bsf	3,5	;RP0=1, select bank1
   466  0061  170C               	bsf	12,6	;volatile
   467  0062                     l758:
   468                           
   469                           ;ADC.c: 33:     GIE = 1;
   470  0062  178B               	bsf	11,7	;volatile
   471  0063                     l37:
   472  0063  0008               	return
   473  0064                     __end_of_Init_uC:
   474                           
   475                           	psect	text2
   476  0064                     __ptext2:	
   477 ;; *************** function _InitTimer0 *****************
   478 ;; Defined at:
   479 ;;		line 4 in file "timer0.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2, status,0
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0
   493 ;;      Params:         0       0
   494 ;;      Locals:         0       0
   495 ;;      Temps:          0       1
   496 ;;      Totals:         0       1
   497 ;;Total ram usage:        1 bytes
   498 ;; Hardware stack levels used:    1
   499 ;; Hardware stack levels required when called:    1
   500 ;; This function calls:
   501 ;;		Nothing
   502 ;; This function is called by:
   503 ;;		_main
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           
   508                           ;psect for function _InitTimer0
   509  0064                     _InitTimer0:
   510  0064                     l760:	
   511                           ;incstack = 0
   512                           ; Regs used in _InitTimer0: [wreg+status,2+status,0]
   513                           
   514                           
   515                           ;timer0.c: 7:  OPTION_REG &= 0xC0;
   516  0064  30C0               	movlw	192
   517  0065  1283               	bcf	3,5	;RP0=0, select bank0
   518  0066  00A4               	movwf	??_InitTimer0
   519  0067  0824               	movf	??_InitTimer0,w
   520  0068  1683               	bsf	3,5	;RP0=1, select bank1
   521  0069  0581               	andwf	1,f	;volatile
   522  006A                     l762:
   523                           
   524                           ;timer0.c: 9:  T0IE = 1;
   525  006A  168B               	bsf	11,5	;volatile
   526  006B                     l72:
   527  006B  0008               	return
   528  006C                     __end_of_InitTimer0:
   529                           
   530                           	psect	text3
   531  0014                     __ptext3:	
   532 ;; *************** function _ISR *****************
   533 ;; Defined at:
   534 ;;		line 9 in file "interrupt.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, btemp+1
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0
   548 ;;      Params:         0       0
   549 ;;      Locals:         0       0
   550 ;;      Temps:          0       4
   551 ;;      Totals:         0       4
   552 ;;Total ram usage:        4 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; This function calls:
   555 ;;		Nothing
   556 ;; This function is called by:
   557 ;;		Interrupt level 1
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           
   562                           ;psect for function _ISR
   563  0014                     _ISR:
   564  0014                     i1l764:
   565                           
   566                           ;interrupt.c: 11:     _delay((unsigned long)((10)*(4000000/4000000.0)));
   567  0014  3003               	movlw	3
   568  0015  00A0               	movwf	??_ISR
   569  0016                     u5_27:
   570  0016  0BA0               	decfsz	??_ISR,f
   571  0017  2816               	goto	u5_27
   572  0018                     i1l766:
   573                           
   574                           ;interrupt.c: 12:     GO = 1;
   575  0018  1283               	bcf	3,5	;RP0=0, select bank0
   576  0019  149F               	bsf	31,1	;volatile
   577  001A                     i1l60:	
   578                           ;interrupt.c: 13:     while(!ADIF);
   579                           
   580  001A  1F0C               	btfss	12,6	;volatile
   581  001B  281D               	goto	u3_21
   582  001C  281E               	goto	u3_20
   583  001D                     u3_21:
   584  001D  281A               	goto	i1l60
   585  001E                     u3_20:
   586  001E                     i1l768:
   587                           
   588                           ;interrupt.c: 14:     _delay((unsigned long)((10)*(4000000/4000000.0)));
   589  001E  3003               	movlw	3
   590  001F  00A0               	movwf	??_ISR
   591  0020                     u6_27:
   592  0020  0BA0               	decfsz	??_ISR,f
   593  0021  2820               	goto	u6_27
   594                           
   595                           ;interrupt.c: 16:     ADC_Value = (int) ((ADRESH<<8)+ADRESL);
   596  0022  1283               	bcf	3,5	;RP0=0, select bank0
   597  0023  081E               	movf	30,w	;volatile
   598  0024  00A6               	movwf	_ADC_Value+1
   599  0025  1683               	bsf	3,5	;RP0=1, select bank1
   600  0026  081E               	movf	30,w	;volatile
   601  0027  1283               	bcf	3,5	;RP0=0, select bank0
   602  0028  00A5               	movwf	_ADC_Value
   603  0029                     i1l770:
   604                           
   605                           ;interrupt.c: 18:     if (ADC_Value > 470)
   606  0029  0826               	movf	_ADC_Value+1,w
   607  002A  3A80               	xorlw	128
   608  002B  00DF               	movwf	btemp+1
   609  002C  3081               	movlw	129
   610  002D  025F               	subwf	btemp+1,w
   611  002E  1D03               	skipz
   612  002F  2832               	goto	u4_25
   613  0030  30D7               	movlw	215
   614  0031  0225               	subwf	_ADC_Value,w
   615  0032                     u4_25:
   616  0032  1C03               	skipc
   617  0033  2835               	goto	u4_21
   618  0034  2836               	goto	u4_20
   619  0035                     u4_21:
   620  0035  283A               	goto	i1l63
   621  0036                     u4_20:
   622  0036                     i1l772:
   623                           
   624                           ;interrupt.c: 19:           {GP5 = 0;
   625  0036  1283               	bcf	3,5	;RP0=0, select bank0
   626  0037  1285               	bcf	5,5	;volatile
   627                           
   628                           ;interrupt.c: 20:            GP4 = 1;}
   629  0038  1605               	bsf	5,4	;volatile
   630  0039  283D               	goto	i1l65
   631  003A                     i1l63:	
   632                           ;interrupt.c: 21:     else {GP5 = 1;
   633                           
   634  003A  1283               	bcf	3,5	;RP0=0, select bank0
   635  003B  1685               	bsf	5,5	;volatile
   636                           
   637                           ;interrupt.c: 22:            GP4 = 0;}
   638  003C  1205               	bcf	5,4	;volatile
   639  003D                     i1l65:
   640  003D  0823               	movf	??_ISR+3,w
   641  003E  00DF               	movwf	btemp+1
   642  003F  0822               	movf	??_ISR+2,w
   643  0040  008A               	movwf	10
   644  0041  0E21               	swapf	??_ISR+1,w
   645  0042  0083               	movwf	3
   646  0043  0EDE               	swapf	btemp,f
   647  0044  0E5E               	swapf	btemp,w
   648  0045  0009               	retfie
   649  0046                     __end_of_ISR:
   650  005E                     btemp	set	94	;btemp
   651  005E                     wtemp0	set	94
   652                           
   653                           	psect	intentry
   654  0004                     __pintentry:	
   655                           ;incstack = 0
   656                           ; Regs used in _ISR: [wreg+btemp+1]
   657                           
   658  0004                     interrupt_function:
   659  005E                     saved_w	set	btemp
   660  0004  00DE               	movwf	btemp
   661  0005  0E03               	swapf	3,w
   662  0006  1283               	bcf	3,5	;RP0=0, select bank0
   663  0007  00A1               	movwf	??_ISR+1
   664  0008  080A               	movf	10,w
   665  0009  00A2               	movwf	??_ISR+2
   666  000A  085F               	movf	btemp+1,w
   667  000B  00A3               	movwf	??_ISR+3
   668  000C  2814               	ljmp	_ISR

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      5       8

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_InitTimer0

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _InitTimer0
                            _Init_uC
 ---------------------------------------------------------------------------------
 (1) _Init_uC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitTimer0
   _Init_uC

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      5       8       4       12.9%
ABS                  0      0       8       5        0.0%
DATA                 0      0       8       6        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Mar 08 20:52:36 2022

                     l37 0063                       l72 006B                       l83 006F  
                     l84 006F                       _GO 00F9                      l730 0049  
                    l740 0053                      l732 004B                      l750 005A  
                    l742 0055                      l734 004D                      l760 0064  
                    l752 005D                      l744 0056                      l736 004F  
                    l728 0046                      l762 006A                      l754 005F  
                    l746 0057                      l738 0051                      l756 0060  
                    l748 0058                      l758 0062                      l774 006C  
                    l776 006E                      _GP4 002C                      _GP5 002D  
                    _GIE 005F                      _ISR 0014                     ?_ISR 0020  
                   _ADIE 0466                     _ADIF 0066                     _ADFM 00FF  
                   _ADON 00F8                     _CHS0 00FA                     _CHS1 00FB  
                   _T0IE 005D                     _GPIO 0005                     i1l60 001A  
                   i1l63 003A                     i1l65 003D                     _VCFG 00FE  
                   u3_20 001E                     u3_21 001D                     u4_20 0036  
                   u4_21 0035                     u4_25 0032                     u5_27 0016  
                   u6_27 0020                     _main 006C                     btemp 005E  
                   start 000D          __end_of_Init_uC 0064                    ??_ISR 0020  
       nosup@@$_$_CONFIG 0000                    ?_main 0020                    _CMCON 0019  
                  _ANSEL 009F                    i1l770 0029                    i1l772 0036  
                  i1l764 0014                    i1l766 0018                    i1l768 001E  
                  pclath 000A                    status 0003                    wtemp0 005E  
        __initialization 000E               _InitTimer0 0064             __end_of_main 0071  
                 ??_main 0000                   _ADRESH 001E                   _ADRESL 009E  
                 _TRISIO 0085                ??_Init_uC 0000                   saved_w 005E  
__end_of__initialization 0012              ?_InitTimer0 0020           __pcstackCOMMON 0000  
             __pbssBANK0 0025               __pmaintext 006C               __pintentry 0004  
                _TRISIO0 0428                  _TRISIO1 0429                  _TRISIO4 042C  
                _TRISIO5 042D      __size_of_InitTimer0 0008                  _Init_uC 0046  
              _ADC_Value 0025                  __ptext1 0046                  __ptext2 0064  
                __ptext3 0014             __size_of_ISR 0032     end_of_initialization 0012  
              _PWM_Value 0027             ??_InitTimer0 0024      start_initialization 000E  
            __end_of_ISR 0046       __end_of_InitTimer0 006C                ___latbits 0000  
          __pcstackBANK0 0020                 ?_Init_uC 0020        interrupt_function 0004  
       __size_of_Init_uC 001E            __size_of_main 0005               _INTCONbits 000B  
               intlevel1 0000               _OPTION_REG 0081  
