

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Dec 30 10:23:17 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	dabs	1,0x5E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 29/04/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC12F675 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0019                     	;# 
    66  001E                     	;# 
    67  001F                     	;# 
    68  0081                     	;# 
    69  0085                     	;# 
    70  008C                     	;# 
    71  008E                     	;# 
    72  0090                     	;# 
    73  0095                     	;# 
    74  0096                     	;# 
    75  0096                     	;# 
    76  0099                     	;# 
    77  009A                     	;# 
    78  009A                     	;# 
    79  009B                     	;# 
    80  009C                     	;# 
    81  009D                     	;# 
    82  009E                     	;# 
    83  009F                     	;# 
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0019                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  008C                     	;# 
   103  008E                     	;# 
   104  0090                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0096                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0019                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  0081                     	;# 
   133  0085                     	;# 
   134  008C                     	;# 
   135  008E                     	;# 
   136  0090                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0096                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0019                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  008C                     	;# 
   167  008E                     	;# 
   168  0090                     	;# 
   169  0095                     	;# 
   170  0096                     	;# 
   171  0096                     	;# 
   172  0099                     	;# 
   173  009A                     	;# 
   174  009A                     	;# 
   175  009B                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  009F                     	;# 
   180  0000                     nosup@@$_$_CONFIG	set	0	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  000A                     	;# 
   188  000B                     	;# 
   189  000C                     	;# 
   190  000E                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0019                     	;# 
   195  001E                     	;# 
   196  001F                     	;# 
   197  0081                     	;# 
   198  0085                     	;# 
   199  008C                     	;# 
   200  008E                     	;# 
   201  0090                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0096                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  000B                     _INTCONbits	set	11
   214  0001                     _TMR0	set	1
   215  001E                     _ADRESH	set	30
   216  001F                     _ADCON0	set	31
   217  0005                     _GPIO	set	5
   218  0019                     _CMCON	set	25
   219  005D                     _T0IE	set	93
   220  005A                     _T0IF	set	90
   221  0066                     _ADIF	set	102
   222  00F9                     _GO	set	249
   223  00FF                     _ADFM	set	255
   224  005F                     _GIE	set	95
   225  0029                     _GP1	set	41
   226  00FE                     _VCFG	set	254
   227  00F8                     _ADON	set	248
   228  002C                     _GP4	set	44
   229  002D                     _GP5	set	45
   230  0081                     _OPTION_REG	set	129
   231  009E                     _ADRESL	set	158
   232  009F                     _ANSEL	set	159
   233  0085                     _TRISIO	set	133
   234  0099                     _VRCON	set	153
   235  0429                     _TRISIO1	set	1065
   236  0428                     _TRISIO0	set	1064
   237  042C                     _TRISIO4	set	1068
   238  042D                     _TRISIO5	set	1069
   239                           
   240                           	psect	cinit
   241  000C                     start_initialization:	
   242                           ; #config settings
   243                           
   244  000C                     __initialization:
   245                           
   246                           ; Clear objects allocated to BANK0
   247  000C  1283               	bcf	3,5	;RP0=0, select bank0
   248  000D  01A0               	clrf	__pbssBANK0& (0+127)
   249  000E  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   250  000F  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   251  0010  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   252  0011  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   253  0012  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   254  0013                     end_of_initialization:	
   255                           ;End of C runtime variable initialization code
   256                           
   257  0013                     __end_of__initialization:
   258  0013  0183               	clrf	3
   259  0014  29A0               	ljmp	_main	;jump to C main() function
   260                           
   261                           	psect	bssBANK0
   262  0020                     __pbssBANK0:
   263  0020                     _pulsePerTakt:
   264  0020                     	ds	2
   265  0022                     _adcValue:
   266  0022                     	ds	2
   267  0024                     _pwmValue:
   268  0024                     	ds	2
   269                           
   270                           	psect	cstackCOMMON
   271  0000                     __pcstackCOMMON:
   272  0000                     ??_Init_uC:
   273  0000                     ??_ButtonEvent:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0000                     ??_main:	
   277                           ; 1 bytes @ 0x0
   278                           
   279                           
   280                           	psect	cstackBANK0
   281  0026                     __pcstackBANK0:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0026                     ?_Init_uC:
   285  0026                     ?_ButtonEvent:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0026                     ?_ISR:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0026                     ??_ISR:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0026                     ?_InitTimer0:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0026                     ?_main:	
   298                           ; 1 bytes @ 0x0
   299                           
   300                           
   301                           ; 1 bytes @ 0x0
   302  0026                     	ds	2
   303  0028                     ??_InitTimer0:
   304  0028                     ?_InVoltageControl:	
   305                           ; 1 bytes @ 0x2
   306                           
   307  0028                     ?_ThermoControl:	
   308                           ; 2 bytes @ 0x2
   309                           
   310                           
   311                           ; 2 bytes @ 0x2
   312  0028                     	ds	2
   313  002A                     ??_InVoltageControl:
   314  002A                     ??_ThermoControl:	
   315                           ; 1 bytes @ 0x4
   316                           
   317                           
   318                           ; 1 bytes @ 0x4
   319  002A                     	ds	2
   320                           
   321                           	psect	maintext
   322  01A0                     __pmaintext:	
   323 ;;
   324 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   325 ;;
   326 ;; *************** function _main *****************
   327 ;; Defined at:
   328 ;;		line 33 in file "main.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;		None
   331 ;; Auto vars:     Size  Location     Type
   332 ;;		None
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   337 ;; Tracked objects:
   338 ;;		On entry : B00/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMMON   BANK0
   342 ;;      Params:         0       0
   343 ;;      Locals:         0       0
   344 ;;      Temps:          0       0
   345 ;;      Totals:         0       0
   346 ;;Total ram usage:        0 bytes
   347 ;; Hardware stack levels required when called: 3
   348 ;; This function calls:
   349 ;;		_ButtonEvent
   350 ;;		_InitTimer0
   351 ;;		_Init_uC
   352 ;; This function is called by:
   353 ;;		Startup code after reset
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357  01A0                     _main:	
   358                           ;psect for function _main
   359                           
   360  01A0                     l962:	
   361                           ;incstack = 0
   362                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   363                           
   364                           
   365                           ;main.c: 35:  InitTimer0();
   366  01A0  2198               	fcall	_InitTimer0
   367                           
   368                           ;main.c: 36:     Init_uC();
   369  01A1  217C               	fcall	_Init_uC
   370  01A2                     l964:
   371                           
   372                           ;main.c: 37:     (INTCONbits.GIE = 1);
   373  01A2  178B               	bsf	11,7	;volatile
   374  01A3                     l966:
   375                           
   376                           ;main.c: 39:  {;main.c: 40:        ButtonEvent();
   377  01A3  20D9               	fcall	_ButtonEvent
   378  01A4  29A3               	goto	l966
   379  01A5  280B               	ljmp	start
   380  01A6                     __end_of_main:
   381                           
   382                           	psect	text1
   383  017C                     __ptext1:	
   384 ;; *************** function _Init_uC *****************
   385 ;; Defined at:
   386 ;;		line 10 in file "ADC.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;		None
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      void 
   393 ;; Registers used:
   394 ;;		wreg, status,2
   395 ;; Tracked objects:
   396 ;;		On entry : 0/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMMON   BANK0
   400 ;;      Params:         0       0
   401 ;;      Locals:         0       0
   402 ;;      Temps:          0       0
   403 ;;      Totals:         0       0
   404 ;;Total ram usage:        0 bytes
   405 ;; Hardware stack levels used: 1
   406 ;; Hardware stack levels required when called: 1
   407 ;; This function calls:
   408 ;;		Nothing
   409 ;; This function is called by:
   410 ;;		_main
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414  017C                     _Init_uC:	
   415                           ;psect for function _Init_uC
   416                           
   417  017C                     l896:	
   418                           ;incstack = 0
   419                           ; Regs used in _Init_uC: [wreg+status,2]
   420                           
   421                           
   422                           ;ADC.c: 11:  CMCON = 0x07;
   423  017C  3007               	movlw	7
   424  017D  1283               	bcf	3,5	;RP0=0, select bank0
   425  017E  0099               	movwf	25	;volatile
   426  017F                     l898:
   427                           
   428                           ;ADC.c: 12:     VRCON = 0x00;
   429  017F  1683               	bsf	3,5	;RP0=1, select bank1
   430  0180  0199               	clrf	25	;volatile
   431  0181                     l900:
   432                           
   433                           ;ADC.c: 15:     TRISIO = 0;
   434  0181  0185               	clrf	5	;volatile
   435  0182                     l902:
   436                           
   437                           ;ADC.c: 16:     GPIO = 0;
   438  0182  1283               	bcf	3,5	;RP0=0, select bank0
   439  0183  0185               	clrf	5	;volatile
   440  0184                     l904:
   441                           
   442                           ;ADC.c: 19:     TRISIO5 = 0;
   443  0184  1683               	bsf	3,5	;RP0=1, select bank1
   444  0185  1285               	bcf	5,5	;volatile
   445  0186                     l906:
   446                           
   447                           ;ADC.c: 20:     GP5 = 1;
   448  0186  1283               	bcf	3,5	;RP0=0, select bank0
   449  0187  1685               	bsf	5,5	;volatile
   450  0188                     l908:
   451                           
   452                           ;ADC.c: 23:     TRISIO4 = 0;
   453  0188  1683               	bsf	3,5	;RP0=1, select bank1
   454  0189  1205               	bcf	5,4	;volatile
   455  018A                     l910:
   456                           
   457                           ;ADC.c: 24:     GP4 = 0;
   458  018A  1283               	bcf	3,5	;RP0=0, select bank0
   459  018B  1205               	bcf	5,4	;volatile
   460  018C                     l912:
   461                           
   462                           ;ADC.c: 28:     ADON = 1;
   463  018C  141F               	bsf	31,0	;volatile
   464  018D                     l914:
   465                           
   466                           ;ADC.c: 30:     VCFG = 1;
   467  018D  171F               	bsf	31,6	;volatile
   468  018E                     l916:
   469                           
   470                           ;ADC.c: 31:     TRISIO0 = 1;
   471  018E  1683               	bsf	3,5	;RP0=1, select bank1
   472  018F  1405               	bsf	5,0	;volatile
   473  0190                     l918:
   474                           
   475                           ;ADC.c: 32:     TRISIO1 = 1;
   476  0190  1485               	bsf	5,1	;volatile
   477  0191                     l920:
   478                           
   479                           ;ADC.c: 33:     GP1 = 0;
   480  0191  1283               	bcf	3,5	;RP0=0, select bank0
   481  0192  1085               	bcf	5,1	;volatile
   482  0193                     l922:
   483                           
   484                           ;ADC.c: 35:     ANSEL = 0b00110001;
   485  0193  3031               	movlw	49
   486  0194  1683               	bsf	3,5	;RP0=1, select bank1
   487  0195  009F               	movwf	31	;volatile
   488  0196                     l924:
   489                           
   490                           ;ADC.c: 38:     GIE = 1;
   491  0196  178B               	bsf	11,7	;volatile
   492  0197                     l55:
   493  0197  0008               	return
   494  0198                     __end_of_Init_uC:
   495                           
   496                           	psect	text2
   497  0198                     __ptext2:	
   498 ;; *************** function _InitTimer0 *****************
   499 ;; Defined at:
   500 ;;		line 4 in file "timer0.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;		None
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg, status,2, status,0
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMMON   BANK0
   514 ;;      Params:         0       0
   515 ;;      Locals:         0       0
   516 ;;      Temps:          0       1
   517 ;;      Totals:         0       1
   518 ;;Total ram usage:        1 bytes
   519 ;; Hardware stack levels used: 1
   520 ;; Hardware stack levels required when called: 1
   521 ;; This function calls:
   522 ;;		Nothing
   523 ;; This function is called by:
   524 ;;		_main
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528  0198                     _InitTimer0:	
   529                           ;psect for function _InitTimer0
   530                           
   531  0198                     l946:	
   532                           ;incstack = 0
   533                           ; Regs used in _InitTimer0: [wreg+status,2+status,0]
   534                           
   535                           
   536                           ;timer0.c: 7:  OPTION_REG &= 0xC0;
   537  0198  30C0               	movlw	192
   538  0199  1283               	bcf	3,5	;RP0=0, select bank0
   539  019A  00A8               	movwf	??_InitTimer0
   540  019B  0828               	movf	??_InitTimer0,w
   541  019C  1683               	bsf	3,5	;RP0=1, select bank1
   542  019D  0581               	andwf	1,f	;volatile
   543  019E                     l948:
   544                           
   545                           ;timer0.c: 8:  T0IE = 1;
   546  019E  168B               	bsf	11,5	;volatile
   547  019F                     l110:
   548  019F  0008               	return
   549  01A0                     __end_of_InitTimer0:
   550                           
   551                           	psect	text3
   552  00D9                     __ptext3:	
   553 ;; *************** function _ButtonEvent *****************
   554 ;; Defined at:
   555 ;;		line 42 in file "ADC.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;		None
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMMON   BANK0
   569 ;;      Params:         0       0
   570 ;;      Locals:         0       0
   571 ;;      Temps:          0       0
   572 ;;      Totals:         0       0
   573 ;;Total ram usage:        0 bytes
   574 ;; Hardware stack levels used: 1
   575 ;; Hardware stack levels required when called: 2
   576 ;; This function calls:
   577 ;;		_InVoltageControl
   578 ;;		_ThermoControl
   579 ;; This function is called by:
   580 ;;		_main
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584  00D9                     _ButtonEvent:	
   585                           ;psect for function _ButtonEvent
   586                           
   587  00D9                     l926:	
   588                           ;incstack = 0
   589                           ; Regs used in _ButtonEvent: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   590                           
   591                           
   592                           ;ADC.c: 43:         if ((InVoltageControl() >= 475) && (InVoltageControl() <= 540)){
   593  00D9  2151               	fcall	_InVoltageControl
   594  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   595  00DB  0829               	movf	?_InVoltageControl+1,w
   596  00DC  3A80               	xorlw	128
   597  00DD  00DF               	movwf	btemp+1
   598  00DE  3081               	movlw	129
   599  00DF  025F               	subwf	btemp+1,w
   600  00E0  1D03               	skipz
   601  00E1  28E4               	goto	u205
   602  00E2  30DB               	movlw	219
   603  00E3  0228               	subwf	?_InVoltageControl,w
   604  00E4                     u205:
   605  00E4  1C03               	skipc
   606  00E5  28E7               	goto	u201
   607  00E6  28E8               	goto	u200
   608  00E7                     u201:
   609  00E7  2900               	goto	l934
   610  00E8                     u200:
   611  00E8                     l928:
   612  00E8  2151               	fcall	_InVoltageControl
   613  00E9  1283               	bcf	3,5	;RP0=0, select bank0
   614  00EA  0829               	movf	?_InVoltageControl+1,w
   615  00EB  3A80               	xorlw	128
   616  00EC  00DF               	movwf	btemp+1
   617  00ED  3082               	movlw	130
   618  00EE  025F               	subwf	btemp+1,w
   619  00EF  1D03               	skipz
   620  00F0  28F3               	goto	u215
   621  00F1  301D               	movlw	29
   622  00F2  0228               	subwf	?_InVoltageControl,w
   623  00F3                     u215:
   624  00F3  1803               	skipnc
   625  00F4  28F6               	goto	u211
   626  00F5  28F7               	goto	u210
   627  00F6                     u211:
   628  00F6  2900               	goto	l934
   629  00F7                     u210:
   630  00F7                     l930:
   631                           
   632                           ;ADC.c: 45:                        GP5 = 0;
   633  00F7  1283               	bcf	3,5	;RP0=0, select bank0
   634  00F8  1285               	bcf	5,5	;volatile
   635  00F9                     l932:
   636                           
   637                           ;ADC.c: 46:                        pwmValue = ThermoControl();
   638  00F9  2015               	fcall	_ThermoControl
   639  00FA  1283               	bcf	3,5	;RP0=0, select bank0
   640  00FB  0829               	movf	?_ThermoControl+1,w
   641  00FC  00A5               	movwf	_pwmValue+1
   642  00FD  0828               	movf	?_ThermoControl,w
   643  00FE  00A4               	movwf	_pwmValue
   644                           
   645                           ;ADC.c: 48:                       }
   646  00FF  2924               	goto	l63
   647  0100                     l934:
   648  0100  2151               	fcall	_InVoltageControl
   649  0101  1283               	bcf	3,5	;RP0=0, select bank0
   650  0102  0829               	movf	?_InVoltageControl+1,w
   651  0103  3A80               	xorlw	128
   652  0104  00DF               	movwf	btemp+1
   653  0105  3081               	movlw	129
   654  0106  025F               	subwf	btemp+1,w
   655  0107  1D03               	skipz
   656  0108  290B               	goto	u225
   657  0109  30DB               	movlw	219
   658  010A  0228               	subwf	?_InVoltageControl,w
   659  010B                     u225:
   660  010B  1803               	skipnc
   661  010C  290E               	goto	u221
   662  010D  290F               	goto	u220
   663  010E                     u221:
   664  010E  2914               	goto	l940
   665  010F                     u220:
   666  010F                     l936:
   667                           
   668                           ;ADC.c: 51:                       GP5 = 1;
   669  010F  1283               	bcf	3,5	;RP0=0, select bank0
   670  0110  1685               	bsf	5,5	;volatile
   671  0111                     l938:
   672                           
   673                           ;ADC.c: 52:                       pwmValue = 0;
   674  0111  01A4               	clrf	_pwmValue
   675  0112  01A5               	clrf	_pwmValue+1
   676                           
   677                           ;ADC.c: 53:         }
   678  0113  2924               	goto	l63
   679  0114                     l940:
   680  0114  2151               	fcall	_InVoltageControl
   681  0115  1283               	bcf	3,5	;RP0=0, select bank0
   682  0116  0829               	movf	?_InVoltageControl+1,w
   683  0117  3A80               	xorlw	128
   684  0118  00DF               	movwf	btemp+1
   685  0119  3082               	movlw	130
   686  011A  025F               	subwf	btemp+1,w
   687  011B  1D03               	skipz
   688  011C  291F               	goto	u235
   689  011D  301D               	movlw	29
   690  011E  0228               	subwf	?_InVoltageControl,w
   691  011F                     u235:
   692  011F  1C03               	skipc
   693  0120  2922               	goto	u231
   694  0121  2923               	goto	u230
   695  0122                     u231:
   696  0122  2924               	goto	l63
   697  0123                     u230:
   698  0123  290F               	goto	l936
   699  0124                     l63:
   700  0124  0008               	return
   701  0125                     __end_of_ButtonEvent:
   702                           
   703                           	psect	text4
   704  0015                     __ptext4:	
   705 ;; *************** function _ThermoControl *****************
   706 ;; Defined at:
   707 ;;		line 62 in file "ADC.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;		None
   710 ;; Auto vars:     Size  Location     Type
   711 ;;		None
   712 ;; Return value:  Size  Location     Type
   713 ;;                  2    2[BANK0 ] unsigned int 
   714 ;; Registers used:
   715 ;;		wreg, status,2, btemp+1
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMMON   BANK0
   721 ;;      Params:         0       2
   722 ;;      Locals:         0       0
   723 ;;      Temps:          0       2
   724 ;;      Totals:         0       4
   725 ;;Total ram usage:        4 bytes
   726 ;; Hardware stack levels used: 1
   727 ;; Hardware stack levels required when called: 1
   728 ;; This function calls:
   729 ;;		Nothing
   730 ;; This function is called by:
   731 ;;		_ButtonEvent
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735  0015                     _ThermoControl:	
   736                           ;psect for function _ThermoControl
   737                           
   738  0015                     l854:	
   739                           ;incstack = 0
   740                           ; Regs used in _ThermoControl: [wreg+status,2+btemp+1]
   741                           
   742                           
   743                           ;ADC.c: 64:        ADCON0 = 0x00;
   744  0015  1283               	bcf	3,5	;RP0=0, select bank0
   745  0016  019F               	clrf	31	;volatile
   746  0017                     l856:
   747                           
   748                           ;ADC.c: 65:        ADFM = 1;
   749  0017  179F               	bsf	31,7	;volatile
   750  0018                     l858:
   751                           
   752                           ;ADC.c: 66:        ADON = 1;
   753  0018  141F               	bsf	31,0	;volatile
   754  0019                     l860:
   755                           
   756                           ;ADC.c: 68:        _delay((unsigned long)((10)*(4000000/4000.0)));
   757  0019  300D               	movlw	13
   758  001A  00AB               	movwf	??_ThermoControl+1
   759  001B  30FB               	movlw	251
   760  001C  00AA               	movwf	??_ThermoControl
   761  001D                     u277:
   762  001D  0BAA               	decfsz	??_ThermoControl,f
   763  001E  281D               	goto	u277
   764  001F  0BAB               	decfsz	??_ThermoControl+1,f
   765  0020  281D               	goto	u277
   766  0021  2822               	nop2
   767  0022                     l862:
   768                           
   769                           ;ADC.c: 69:        GO = 1;
   770  0022  1283               	bcf	3,5	;RP0=0, select bank0
   771  0023  149F               	bsf	31,1	;volatile
   772  0024                     l66:	
   773                           ;ADC.c: 70:        while(!ADIF);
   774                           
   775  0024  1F0C               	btfss	12,6	;volatile
   776  0025  2827               	goto	u101
   777  0026  2828               	goto	u100
   778  0027                     u101:
   779  0027  2824               	goto	l66
   780  0028                     u100:
   781  0028                     l864:
   782                           
   783                           ;ADC.c: 71:        _delay((unsigned long)((10)*(4000000/4000.0)));
   784  0028  300D               	movlw	13
   785  0029  00AB               	movwf	??_ThermoControl+1
   786  002A  30FB               	movlw	251
   787  002B  00AA               	movwf	??_ThermoControl
   788  002C                     u287:
   789  002C  0BAA               	decfsz	??_ThermoControl,f
   790  002D  282C               	goto	u287
   791  002E  0BAB               	decfsz	??_ThermoControl+1,f
   792  002F  282C               	goto	u287
   793  0030  2831               	nop2
   794                           
   795                           ;ADC.c: 73:        adcValue = (int) ((ADRESH<<8)+ADRESL);
   796  0031  1283               	bcf	3,5	;RP0=0, select bank0
   797  0032  081E               	movf	30,w	;volatile
   798  0033  00A3               	movwf	_adcValue+1
   799  0034  1683               	bsf	3,5	;RP0=1, select bank1
   800  0035  081E               	movf	30,w	;volatile
   801  0036  1283               	bcf	3,5	;RP0=0, select bank0
   802  0037  00A2               	movwf	_adcValue
   803  0038                     l866:
   804                           
   805                           ;ADC.c: 75:              if (adcValue < 180)
   806  0038  0823               	movf	_adcValue+1,w
   807  0039  3A80               	xorlw	128
   808  003A  00DF               	movwf	btemp+1
   809  003B  3080               	movlw	128
   810  003C  025F               	subwf	btemp+1,w
   811  003D  1D03               	skipz
   812  003E  2841               	goto	u115
   813  003F  30B4               	movlw	180
   814  0040  0222               	subwf	_adcValue,w
   815  0041                     u115:
   816  0041  1803               	skipnc
   817  0042  2844               	goto	u111
   818  0043  2845               	goto	u110
   819  0044                     u111:
   820  0044  284B               	goto	l870
   821  0045                     u110:
   822  0045                     l868:
   823                           
   824                           ;ADC.c: 76:                        {;ADC.c: 77:                         pwmValue = 10;
   825  0045  300A               	movlw	10
   826  0046  1283               	bcf	3,5	;RP0=0, select bank0
   827  0047  00A4               	movwf	_pwmValue
   828  0048  3000               	movlw	0
   829  0049  00A5               	movwf	_pwmValue+1
   830                           
   831                           ;ADC.c: 78:                        }
   832  004A  28D3               	goto	l70
   833  004B                     l870:
   834  004B  1283               	bcf	3,5	;RP0=0, select bank0
   835  004C  0823               	movf	_adcValue+1,w
   836  004D  3A80               	xorlw	128
   837  004E  00DF               	movwf	btemp+1
   838  004F  3080               	movlw	128
   839  0050  025F               	subwf	btemp+1,w
   840  0051  1D03               	skipz
   841  0052  2855               	goto	u125
   842  0053  30B4               	movlw	180
   843  0054  0222               	subwf	_adcValue,w
   844  0055                     u125:
   845  0055  1C03               	skipc
   846  0056  2858               	goto	u121
   847  0057  2859               	goto	u120
   848  0058                     u121:
   849  0058  286D               	goto	l876
   850  0059                     u120:
   851  0059                     l872:
   852  0059  1283               	bcf	3,5	;RP0=0, select bank0
   853  005A  0823               	movf	_adcValue+1,w
   854  005B  3A80               	xorlw	128
   855  005C  00DF               	movwf	btemp+1
   856  005D  3081               	movlw	129
   857  005E  025F               	subwf	btemp+1,w
   858  005F  1D03               	skipz
   859  0060  2863               	goto	u135
   860  0061  30CC               	movlw	204
   861  0062  0222               	subwf	_adcValue,w
   862  0063                     u135:
   863  0063  1803               	skipnc
   864  0064  2866               	goto	u131
   865  0065  2867               	goto	u130
   866  0066                     u131:
   867  0066  286D               	goto	l876
   868  0067                     u130:
   869  0067                     l874:
   870                           
   871                           ;ADC.c: 80:                        {;ADC.c: 81:                         pwmValue = 25;
   872  0067  3019               	movlw	25
   873  0068  1283               	bcf	3,5	;RP0=0, select bank0
   874  0069  00A4               	movwf	_pwmValue
   875  006A  3000               	movlw	0
   876  006B  00A5               	movwf	_pwmValue+1
   877                           
   878                           ;ADC.c: 82:                        }
   879  006C  28D3               	goto	l70
   880  006D                     l876:
   881  006D  1283               	bcf	3,5	;RP0=0, select bank0
   882  006E  0823               	movf	_adcValue+1,w
   883  006F  3A80               	xorlw	128
   884  0070  00DF               	movwf	btemp+1
   885  0071  3081               	movlw	129
   886  0072  025F               	subwf	btemp+1,w
   887  0073  1D03               	skipz
   888  0074  2877               	goto	u145
   889  0075  30CC               	movlw	204
   890  0076  0222               	subwf	_adcValue,w
   891  0077                     u145:
   892  0077  1C03               	skipc
   893  0078  287A               	goto	u141
   894  0079  287B               	goto	u140
   895  007A                     u141:
   896  007A  288F               	goto	l882
   897  007B                     u140:
   898  007B                     l878:
   899  007B  1283               	bcf	3,5	;RP0=0, select bank0
   900  007C  0823               	movf	_adcValue+1,w
   901  007D  3A80               	xorlw	128
   902  007E  00DF               	movwf	btemp+1
   903  007F  3082               	movlw	130
   904  0080  025F               	subwf	btemp+1,w
   905  0081  1D03               	skipz
   906  0082  2885               	goto	u155
   907  0083  3066               	movlw	102
   908  0084  0222               	subwf	_adcValue,w
   909  0085                     u155:
   910  0085  1803               	skipnc
   911  0086  2888               	goto	u151
   912  0087  2889               	goto	u150
   913  0088                     u151:
   914  0088  288F               	goto	l882
   915  0089                     u150:
   916  0089                     l880:
   917                           
   918                           ;ADC.c: 84:                        {;ADC.c: 85:                         pwmValue = 50;
   919  0089  3032               	movlw	50
   920  008A  1283               	bcf	3,5	;RP0=0, select bank0
   921  008B  00A4               	movwf	_pwmValue
   922  008C  3000               	movlw	0
   923  008D  00A5               	movwf	_pwmValue+1
   924                           
   925                           ;ADC.c: 86:                        }
   926  008E  28D3               	goto	l70
   927  008F                     l882:
   928  008F  1283               	bcf	3,5	;RP0=0, select bank0
   929  0090  0823               	movf	_adcValue+1,w
   930  0091  3A80               	xorlw	128
   931  0092  00DF               	movwf	btemp+1
   932  0093  3082               	movlw	130
   933  0094  025F               	subwf	btemp+1,w
   934  0095  1D03               	skipz
   935  0096  2899               	goto	u165
   936  0097  3066               	movlw	102
   937  0098  0222               	subwf	_adcValue,w
   938  0099                     u165:
   939  0099  1C03               	skipc
   940  009A  289C               	goto	u161
   941  009B  289D               	goto	u160
   942  009C                     u161:
   943  009C  28B1               	goto	l888
   944  009D                     u160:
   945  009D                     l884:
   946  009D  1283               	bcf	3,5	;RP0=0, select bank0
   947  009E  0823               	movf	_adcValue+1,w
   948  009F  3A80               	xorlw	128
   949  00A0  00DF               	movwf	btemp+1
   950  00A1  3082               	movlw	130
   951  00A2  025F               	subwf	btemp+1,w
   952  00A3  1D03               	skipz
   953  00A4  28A7               	goto	u175
   954  00A5  30E1               	movlw	225
   955  00A6  0222               	subwf	_adcValue,w
   956  00A7                     u175:
   957  00A7  1803               	skipnc
   958  00A8  28AA               	goto	u171
   959  00A9  28AB               	goto	u170
   960  00AA                     u171:
   961  00AA  28B1               	goto	l888
   962  00AB                     u170:
   963  00AB                     l886:
   964                           
   965                           ;ADC.c: 88:                        {;ADC.c: 89:                         pwmValue = 75;
   966  00AB  304B               	movlw	75
   967  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   968  00AD  00A4               	movwf	_pwmValue
   969  00AE  3000               	movlw	0
   970  00AF  00A5               	movwf	_pwmValue+1
   971                           
   972                           ;ADC.c: 90:                        }
   973  00B0  28D3               	goto	l70
   974  00B1                     l888:
   975  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   976  00B2  0823               	movf	_adcValue+1,w
   977  00B3  3A80               	xorlw	128
   978  00B4  00DF               	movwf	btemp+1
   979  00B5  3082               	movlw	130
   980  00B6  025F               	subwf	btemp+1,w
   981  00B7  1D03               	skipz
   982  00B8  28BB               	goto	u185
   983  00B9  30E1               	movlw	225
   984  00BA  0222               	subwf	_adcValue,w
   985  00BB                     u185:
   986  00BB  1C03               	skipc
   987  00BC  28BE               	goto	u181
   988  00BD  28BF               	goto	u180
   989  00BE                     u181:
   990  00BE  28D3               	goto	l74
   991  00BF                     u180:
   992  00BF                     l890:
   993  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   994  00C0  0823               	movf	_adcValue+1,w
   995  00C1  3A80               	xorlw	128
   996  00C2  00DF               	movwf	btemp+1
   997  00C3  3083               	movlw	131
   998  00C4  025F               	subwf	btemp+1,w
   999  00C5  1D03               	skipz
  1000  00C6  28C9               	goto	u195
  1001  00C7  30FF               	movlw	255
  1002  00C8  0222               	subwf	_adcValue,w
  1003  00C9                     u195:
  1004  00C9  1803               	skipnc
  1005  00CA  28CC               	goto	u191
  1006  00CB  28CD               	goto	u190
  1007  00CC                     u191:
  1008  00CC  28D3               	goto	l74
  1009  00CD                     u190:
  1010  00CD                     l892:
  1011                           
  1012                           ;ADC.c: 92:                        {;ADC.c: 93:                         pwmValue = 95;
  1013  00CD  305F               	movlw	95
  1014  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1015  00CF  00A4               	movwf	_pwmValue
  1016  00D0  3000               	movlw	0
  1017  00D1  00A5               	movwf	_pwmValue+1
  1018  00D2  28D3               	goto	l70
  1019  00D3                     l74:
  1020  00D3                     l70:
  1021                           
  1022                           ;ADC.c: 96:        return pwmValue;
  1023  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1024  00D4  0825               	movf	_pwmValue+1,w
  1025  00D5  00A9               	movwf	?_ThermoControl+1
  1026  00D6  0824               	movf	_pwmValue,w
  1027  00D7  00A8               	movwf	?_ThermoControl
  1028  00D8                     l78:
  1029  00D8  0008               	return
  1030  00D9                     __end_of_ThermoControl:
  1031                           
  1032                           	psect	text5
  1033  0151                     __ptext5:	
  1034 ;; *************** function _InVoltageControl *****************
  1035 ;; Defined at:
  1036 ;;		line 99 in file "ADC.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  2    2[BANK0 ] int 
  1043 ;; Registers used:
  1044 ;;		wreg, status,2, status,0
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0
  1050 ;;      Params:         0       2
  1051 ;;      Locals:         0       0
  1052 ;;      Temps:          0       2
  1053 ;;      Totals:         0       4
  1054 ;;Total ram usage:        4 bytes
  1055 ;; Hardware stack levels used: 1
  1056 ;; Hardware stack levels required when called: 1
  1057 ;; This function calls:
  1058 ;;		Nothing
  1059 ;; This function is called by:
  1060 ;;		_ButtonEvent
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064  0151                     _InVoltageControl:	
  1065                           ;psect for function _InVoltageControl
  1066                           
  1067  0151                     l840:	
  1068                           ;incstack = 0
  1069                           ; Regs used in _InVoltageControl: [wreg+status,2+status,0]
  1070                           
  1071                           
  1072                           ;ADC.c: 101:     ADCON0 = 0x00;
  1073  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0152  019F               	clrf	31	;volatile
  1075  0153                     l842:
  1076                           
  1077                           ;ADC.c: 103:     ADFM = 1;
  1078  0153  179F               	bsf	31,7	;volatile
  1079  0154                     l844:
  1080                           
  1081                           ;ADC.c: 104:     ADCON0 |= 0b00100001;
  1082  0154  3021               	movlw	33
  1083  0155  00AA               	movwf	??_InVoltageControl
  1084  0156  082A               	movf	??_InVoltageControl,w
  1085  0157  049F               	iorwf	31,f	;volatile
  1086  0158                     l846:
  1087                           
  1088                           ;ADC.c: 106:      _delay((unsigned long)((10)*(4000000/4000.0)));
  1089  0158  300D               	movlw	13
  1090  0159  00AB               	movwf	??_InVoltageControl+1
  1091  015A  30FB               	movlw	251
  1092  015B  00AA               	movwf	??_InVoltageControl
  1093  015C                     u297:
  1094  015C  0BAA               	decfsz	??_InVoltageControl,f
  1095  015D  295C               	goto	u297
  1096  015E  0BAB               	decfsz	??_InVoltageControl+1,f
  1097  015F  295C               	goto	u297
  1098  0160  2961               	nop2
  1099  0161                     l848:
  1100                           
  1101                           ;ADC.c: 108:        GO = 1;
  1102  0161  1283               	bcf	3,5	;RP0=0, select bank0
  1103  0162  149F               	bsf	31,1	;volatile
  1104  0163                     l81:	
  1105                           ;ADC.c: 109:        while(!ADIF);
  1106                           
  1107  0163  1F0C               	btfss	12,6	;volatile
  1108  0164  2966               	goto	u91
  1109  0165  2967               	goto	u90
  1110  0166                     u91:
  1111  0166  2963               	goto	l81
  1112  0167                     u90:
  1113  0167                     l850:
  1114                           
  1115                           ;ADC.c: 110:      _delay((unsigned long)((10)*(4000000/4000.0)));
  1116  0167  300D               	movlw	13
  1117  0168  00AB               	movwf	??_InVoltageControl+1
  1118  0169  30FB               	movlw	251
  1119  016A  00AA               	movwf	??_InVoltageControl
  1120  016B                     u307:
  1121  016B  0BAA               	decfsz	??_InVoltageControl,f
  1122  016C  296B               	goto	u307
  1123  016D  0BAB               	decfsz	??_InVoltageControl+1,f
  1124  016E  296B               	goto	u307
  1125  016F  2970               	nop2
  1126                           
  1127                           ;ADC.c: 112:      adcValue = (int) ((ADRESH<<8)+ADRESL);
  1128  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1129  0171  081E               	movf	30,w	;volatile
  1130  0172  00A3               	movwf	_adcValue+1
  1131  0173  1683               	bsf	3,5	;RP0=1, select bank1
  1132  0174  081E               	movf	30,w	;volatile
  1133  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1134  0176  00A2               	movwf	_adcValue
  1135                           
  1136                           ;ADC.c: 114:      return adcValue;
  1137  0177  0823               	movf	_adcValue+1,w
  1138  0178  00A9               	movwf	?_InVoltageControl+1
  1139  0179  0822               	movf	_adcValue,w
  1140  017A  00A8               	movwf	?_InVoltageControl
  1141  017B                     l84:
  1142  017B  0008               	return
  1143  017C                     __end_of_InVoltageControl:
  1144                           
  1145                           	psect	text6
  1146  0125                     __ptext6:	
  1147 ;; *************** function _ISR *****************
  1148 ;; Defined at:
  1149 ;;		line 7 in file "interrupt.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;		None
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;		None
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg, status,2
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMMON   BANK0
  1163 ;;      Params:         0       0
  1164 ;;      Locals:         0       0
  1165 ;;      Temps:          0       2
  1166 ;;      Totals:         0       2
  1167 ;;Total ram usage:        2 bytes
  1168 ;; Hardware stack levels used: 1
  1169 ;; This function calls:
  1170 ;;		Nothing
  1171 ;; This function is called by:
  1172 ;;		Interrupt level 1
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176  0125                     _ISR:	
  1177                           ;psect for function _ISR
  1178                           
  1179  0125                     i1l950:
  1180                           
  1181                           ;interrupt.c: 9:       TMR0 = 200;
  1182  0125  30C8               	movlw	200
  1183  0126  0081               	movwf	1	;volatile
  1184                           
  1185                           ;interrupt.c: 10:       pulsePerTakt++;
  1186  0127  3001               	movlw	1
  1187  0128  07A0               	addwf	_pulsePerTakt,f
  1188  0129  1803               	skipnc
  1189  012A  0AA1               	incf	_pulsePerTakt+1,f
  1190  012B  3000               	movlw	0
  1191  012C  07A1               	addwf	_pulsePerTakt+1,f
  1192  012D                     i1l952:
  1193                           
  1194                           ;interrupt.c: 11:    if(T0IF)
  1195  012D  1D0B               	btfss	11,2	;volatile
  1196  012E  2930               	goto	u24_21
  1197  012F  2931               	goto	u24_20
  1198  0130                     u24_21:
  1199  0130  293F               	goto	i1l958
  1200  0131                     u24_20:
  1201  0131                     i1l954:
  1202                           
  1203                           ;interrupt.c: 12:     {;interrupt.c: 13:         if (pulsePerTakt < pwmValue)
  1204  0131  0825               	movf	_pwmValue+1,w
  1205  0132  0221               	subwf	_pulsePerTakt+1,w
  1206  0133  1D03               	skipz
  1207  0134  2937               	goto	u25_25
  1208  0135  0824               	movf	_pwmValue,w
  1209  0136  0220               	subwf	_pulsePerTakt,w
  1210  0137                     u25_25:
  1211  0137  1803               	skipnc
  1212  0138  293A               	goto	u25_21
  1213  0139  293B               	goto	u25_20
  1214  013A                     u25_21:
  1215  013A  293D               	goto	i1l100
  1216  013B                     u25_20:
  1217  013B                     i1l956:
  1218                           
  1219                           ;interrupt.c: 14:          {GP4 = 1;}
  1220  013B  1605               	bsf	5,4	;volatile
  1221  013C  293E               	goto	i1l101
  1222  013D                     i1l100:	
  1223                           ;interrupt.c: 15:         else
  1224                           
  1225                           
  1226                           ;interrupt.c: 16:    {GP4 = 0;}
  1227  013D  1205               	bcf	5,4	;volatile
  1228  013E                     i1l101:
  1229                           
  1230                           ;interrupt.c: 17:   T0IF = 0;
  1231  013E  110B               	bcf	11,2	;volatile
  1232  013F                     i1l958:
  1233                           
  1234                           ;interrupt.c: 19:       if (pulsePerTakt > 100)
  1235  013F  3000               	movlw	0
  1236  0140  0221               	subwf	_pulsePerTakt+1,w
  1237  0141  3065               	movlw	101
  1238  0142  1903               	skipnz
  1239  0143  0220               	subwf	_pulsePerTakt,w
  1240  0144  1C03               	skipc
  1241  0145  2947               	goto	u26_21
  1242  0146  2948               	goto	u26_20
  1243  0147                     u26_21:
  1244  0147  294A               	goto	i1l103
  1245  0148                     u26_20:
  1246  0148                     i1l960:
  1247                           
  1248                           ;interrupt.c: 20:        {;interrupt.c: 21:          pulsePerTakt = 0;
  1249  0148  01A0               	clrf	_pulsePerTakt
  1250  0149  01A1               	clrf	_pulsePerTakt+1
  1251  014A                     i1l103:
  1252  014A  0827               	movf	??_ISR+1,w
  1253  014B  008A               	movwf	10
  1254  014C  0E26               	swapf	??_ISR,w
  1255  014D  0083               	movwf	3
  1256  014E  0EDE               	swapf	btemp,f
  1257  014F  0E5E               	swapf	btemp,w
  1258  0150  0009               	retfie
  1259  0151                     __end_of_ISR:
  1260  005E                     btemp	set	94	;btemp
  1261  005E                     wtemp0	set	94
  1262                           
  1263                           	psect	intentry
  1264  0004                     __pintentry:	
  1265                           ;incstack = 0
  1266                           ; Regs used in _ISR: [wreg+status,2]
  1267                           
  1268  0004                     interrupt_function:
  1269  005E                     saved_w	set	btemp
  1270  0004  00DE               	movwf	btemp
  1271  0005  0E03               	swapf	3,w
  1272  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1273  0007  00A6               	movwf	??_ISR
  1274  0008  080A               	movf	10,w
  1275  0009  00A7               	movwf	??_ISR+1
  1276  000A  2925               	ljmp	_ISR

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      6      12

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _ButtonEvent->_InVoltageControl
    _ButtonEvent->_ThermoControl

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _ButtonEvent
                         _InitTimer0
                            _Init_uC
 ---------------------------------------------------------------------------------
 (1) _Init_uC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ButtonEvent                                          0     0      0       0
                   _InVoltageControl
                      _ThermoControl
 ---------------------------------------------------------------------------------
 (2) _ThermoControl                                        4     2      2       0
                                              2 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _InVoltageControl                                     4     2      2       0
                                              2 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ButtonEvent
     _InVoltageControl
     _ThermoControl
   _InitTimer0
   _Init_uC

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      6       C       4       19.4%
ABS                  0      0       C       5        0.0%
DATA                 0      0       C       6        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Dec 30 10:23:17 2022

                      l70 00D3                        l63 0124                        l55 0197  
                      l81 0163                        l74 00D3                        l66 0024  
                      l84 017B                        l78 00D8                        _GO 00F9  
                      u90 0167                        u91 0166              _pulsePerTakt 0020  
                     l110 019F                       l900 0181                       l910 018A  
                     l902 0182                       l840 0151                       l920 0191  
                     l912 018C                       l904 0184                       l850 0167  
                     l842 0153                       l930 00F7                       l922 0193  
                     l914 018D                       l906 0186                       l844 0154  
                     l860 0019                       l940 0114                       l932 00F9  
                     l924 0196                       l916 018E                       l908 0188  
                     l846 0158                       l870 004B                       l862 0022  
                     l854 0015                       l934 0100                       l926 00D9  
                     l918 0190                       l848 0161                       l880 0089  
                     l872 0059                       l864 0028                       l856 0017  
                     l936 010F                       l928 00E8                       l890 00BF  
                     l882 008F                       l874 0067                       l866 0038  
                     l858 0018                       l938 0111                       l946 0198  
                     l962 01A0                       l892 00CD                       l884 009D  
                     l876 006D                       l868 0045                       l948 019E  
                     l964 01A2                       _GP1 0029                       l886 00AB  
                     l878 007B                       l966 01A3                       l888 00B1  
                     l896 017C                       _GP4 002C                       _GP5 002D  
                     l898 017F                       _GIE 005F                       u100 0028  
                     u101 0027                       u110 0045                       u111 0044  
                     u120 0059                       u200 00E8                       u121 0058  
                     u201 00E7                       u130 0067                       u210 00F7  
                     u131 0066                       u115 0041                       u211 00F6  
                     u140 007B                       u220 010F                       u141 007A  
                     u125 0055                       u221 010E                       u205 00E4  
                     u150 0089                       u230 0123                       u151 0088  
                     u135 0063                       u231 0122                       u215 00F3  
                     u160 009D                       u161 009C                       u145 0077  
                     u225 010B                       u170 00AB                       u307 016B  
                     u171 00AA                       u155 0085                       u235 011F  
                     u180 00BF                       u181 00BE                       u165 0099  
                     u190 00CD                       u191 00CC                       u175 00A7  
                     u185 00BB                       u195 00C9                       _ISR 0125  
                     u277 001D                       u287 002C                       u297 015C  
                    ?_ISR 0026                      _ADIF 0066                      _ADFM 00FF  
                    _ADON 00F8                      _T0IE 005D                      _T0IF 005A  
                    _GPIO 0005                      _VCFG 00FE                      _TMR0 0001  
                    _main 01A0                      btemp 005E                      start 000B  
         __end_of_Init_uC 0198                     ??_ISR 0026             ??_ButtonEvent 0000  
        nosup@@$_$_CONFIG 0000                     ?_main 0026                     _CMCON 0019  
                   _ANSEL 009F                     i1l100 013D                     i1l101 013E  
                   i1l103 014A                     i1l950 0125                     i1l960 0148  
                   i1l952 012D                     i1l954 0131                     i1l956 013B  
                   i1l958 013F                     u24_20 0131                     u24_21 0130  
                   u25_20 013B                     u25_21 013A                     u25_25 0137  
                   u26_20 0148                     u26_21 0147                     _VRCON 0099  
                   pclath 000A                     status 0003                     wtemp0 005E  
         __initialization 000C                _InitTimer0 0198              __end_of_main 01A6  
                  ??_main 0000     __end_of_ThermoControl 00D9       __end_of_ButtonEvent 0125  
                  _ADCON0 001F                    _ADRESH 001E                    _ADRESL 009E  
                  _TRISIO 0085                 ??_Init_uC 0000         ?_InVoltageControl 0028  
      ??_InVoltageControl 002A                    saved_w 005E   __end_of__initialization 0013  
             ?_InitTimer0 0026            __pcstackCOMMON 0000               _ButtonEvent 00D9  
              __pbssBANK0 0020                __pmaintext 01A0                __pintentry 0004  
                 _TRISIO0 0428                   _TRISIO1 0429                   _TRISIO4 042C  
                 _TRISIO5 042D                   _Init_uC 017C                   __ptext1 017C  
                 __ptext2 0198                   __ptext3 00D9                   __ptext4 0015  
                 __ptext5 0151                   __ptext6 0125      end_of_initialization 0013  
            ??_InitTimer0 0028              ?_ButtonEvent 0026       start_initialization 000C  
             __end_of_ISR 0151        __end_of_InitTimer0 01A0                 ___latbits 0000  
           __pcstackBANK0 0026             _ThermoControl 0015                  ?_Init_uC 0026  
          ?_ThermoControl 0028          _InVoltageControl 0151         interrupt_function 0004  
                _adcValue 0022           ??_ThermoControl 002A                  _pwmValue 0024  
              _INTCONbits 000B                  intlevel1 0000  __end_of_InVoltageControl 017C  
              _OPTION_REG 0081  
