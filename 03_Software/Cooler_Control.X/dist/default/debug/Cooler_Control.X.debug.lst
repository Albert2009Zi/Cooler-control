

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Sep 03 09:19:48 2025

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x0,0
    24  0000                     
    25                           ; Generated 17/08/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC12F675 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0019                     	;# 
    73  001E                     	;# 
    74  001F                     	;# 
    75  0081                     	;# 
    76  0085                     	;# 
    77  008C                     	;# 
    78  008E                     	;# 
    79  0090                     	;# 
    80  0095                     	;# 
    81  0096                     	;# 
    82  0096                     	;# 
    83  0099                     	;# 
    84  009A                     	;# 
    85  009A                     	;# 
    86  009B                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009E                     	;# 
    90  009F                     	;# 
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0019                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  008C                     	;# 
   110  008E                     	;# 
   111  0090                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0096                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000E                     	;# 
   133  000E                     	;# 
   134  000F                     	;# 
   135  0010                     	;# 
   136  0019                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  0081                     	;# 
   140  0085                     	;# 
   141  008C                     	;# 
   142  008E                     	;# 
   143  0090                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0096                     	;# 
   147  0099                     	;# 
   148  009A                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  0000                     	;# 
   156  0001                     	;# 
   157  0002                     	;# 
   158  0003                     	;# 
   159  0004                     	;# 
   160  0005                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0019                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  008C                     	;# 
   174  008E                     	;# 
   175  0090                     	;# 
   176  0095                     	;# 
   177  0096                     	;# 
   178  0096                     	;# 
   179  0099                     	;# 
   180  009A                     	;# 
   181  009A                     	;# 
   182  009B                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  000E                     	;# 
   197  000E                     	;# 
   198  000F                     	;# 
   199  0010                     	;# 
   200  0019                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  008C                     	;# 
   206  008E                     	;# 
   207  0090                     	;# 
   208  0095                     	;# 
   209  0096                     	;# 
   210  0096                     	;# 
   211  0099                     	;# 
   212  009A                     	;# 
   213  009A                     	;# 
   214  009B                     	;# 
   215  009C                     	;# 
   216  009D                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  001E                     _ADRESH	set	30
   220  001F                     _ADCON0	set	31
   221  0005                     _GPIO	set	5
   222  0019                     _CMCON	set	25
   223  0001                     _TMR0	set	1
   224  00F9                     _GO	set	249
   225  0066                     _ADIF	set	102
   226  00FA                     _CHS0	set	250
   227  00FB                     _CHS1	set	251
   228  00FF                     _ADFM	set	255
   229  00F8                     _ADON	set	248
   230  005F                     _GIE	set	95
   231  005E                     _PEIE	set	94
   232  00FE                     _VCFG	set	254
   233  002C                     _GP4	set	44
   234  002D                     _GP5	set	45
   235  005D                     _TMR0IE	set	93
   236  005A                     _TMR0IF	set	90
   237  002A                     _GP2	set	42
   238  009E                     _ADRESL	set	158
   239  009F                     _ANSEL	set	159
   240  0085                     _TRISIO	set	133
   241  0099                     _VRCON	set	153
   242  0081                     _OPTION_REG	set	129
   243  0429                     _TRISIO1	set	1065
   244  0428                     _TRISIO0	set	1064
   245  042C                     _TRISIO4	set	1068
   246  042D                     _TRISIO5	set	1069
   247  042A                     _TRISIO2	set	1066
   248                           
   249                           	psect	cinit
   250  0000'                    start_initialization:	
   251                           ; #config settings
   252                           
   253  0000'                    __initialization:
   254                           
   255                           ; Clear objects allocated to BANK0
   256  0000' 1383               	bcf	3,7	;select IRP bank0
   257  0001' 3000'              	movlw	low __pbssBANK0
   258  0002' 0084               	movwf	4
   259  0003' 3000'              	movlw	low (__pbssBANK0+26)
   260  0004' 2000'              	fcall	clear_ram0
   261  0005'                    end_of_initialization:	
   262                           ;End of C runtime variable initialization code
   263                           
   264  0005'                    __end_of__initialization:
   265  0005' 0183               	clrf	3
   266  0006' 2800'              	ljmp	_main	;jump to C main() function
   267                           
   268                           	psect	bssBANK0
   269  0000'                    __pbssBANK0:
   270  0000'                    _beepsQueue:
   271  0000'                    	ds	15
   272  000F'                    BeepsStateMachine@stateMachineDuration:
   273  000F'                    	ds	2
   274  0011'                    _cnt0:
   275  0011'                    	ds	2
   276  0013'                    ADCProcessing@adcState:
   277  0013'                    	ds	1
   278  0014'                    playAlert@soundState:
   279  0014'                    	ds	1
   280  0015'                    BeepsStateMachine@stateMachineAllowTimeout:
   281  0015'                    	ds	1
   282  0016'                    BeepsStateMachine@state:
   283  0016'                    	ds	1
   284  0017'                    _queueTail:
   285  0017'                    	ds	1
   286  0018'                    _queueHead:
   287  0018'                    	ds	1
   288  0019'                    _prmFlags:
   289  0019'                    	ds	1
   290                           
   291                           	psect	clrtext
   292  0000'                    clear_ram0:	
   293                           ;	Called with FSR containing the base address, and
   294                           ;	W with the last address+1
   295                           
   296  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   297  0001'                    clrloop0:
   298  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   299  0002' 0A84               	incf	4,f	;increment pointer
   300  0003' 0604               	xorwf	4,w	;XOR with final address
   301  0004' 1903               	btfsc	3,2	;have we reached the end yet?
   302  0005' 3400               	retlw	0	;all done for this memory range, return
   303  0006' 0604               	xorwf	4,w	;XOR again to restore value
   304  0007' 2801'              	goto	clrloop0	;do the next byte
   305                           
   306                           	psect	cstackBANK0
   307  0000'                    __pcstackBANK0:
   308  0000'                    ?_InitTimer0:
   309  0000'                    ?_Init_uC:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0000'                    ?_ADCProcessing:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0000'                    ?_playAlert:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0000'                    ?_BeepsStateMachine:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0000'                    ?_MuxVoltage:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0000'                    ?_MuxTemp:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0000'                    ?_ISR:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0000'                    ??_ISR:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0000'                    ?_main:	
   334                           ; 1 bytes @ 0x0
   335                           
   336                           
   337                           ; 2 bytes @ 0x0
   338  0000'                    	ds	2
   339  0002'                    ??_InitTimer0:
   340  0002'                    ??_MuxVoltage:	
   341                           ; 1 bytes @ 0x2
   342                           
   343  0002'                    ??_MuxTemp:	
   344                           ; 1 bytes @ 0x2
   345                           
   346  0002'                    ?___bmul:	
   347                           ; 1 bytes @ 0x2
   348                           
   349  0002'                    ?___awmod:	
   350                           ; 1 bytes @ 0x2
   351                           
   352  0002'                    ___bmul@multiplicand:	
   353                           ; 2 bytes @ 0x2
   354                           
   355  0002'                    ___awmod@divisor:	
   356                           ; 1 bytes @ 0x2
   357                           
   358                           
   359                           ; 2 bytes @ 0x2
   360  0002'                    	ds	1
   361  0003'                    ??_Init_uC:
   362  0003'                    ??_ADCProcessing:	
   363                           ; 1 bytes @ 0x3
   364                           
   365  0003'                    ??___bmul:	
   366                           ; 1 bytes @ 0x3
   367                           
   368  0003'                    ___bmul@product:	
   369                           ; 1 bytes @ 0x3
   370                           
   371  0003'                    ADCProcessing@adcValue:	
   372                           ; 1 bytes @ 0x3
   373                           
   374                           
   375                           ; 2 bytes @ 0x3
   376  0003'                    	ds	1
   377  0004'                    ___bmul@multiplier:
   378  0004'                    ___awmod@dividend:	
   379                           ; 1 bytes @ 0x4
   380                           
   381                           
   382                           ; 2 bytes @ 0x4
   383  0004'                    	ds	2
   384  0006'                    ??___awmod:
   385  0006'                    ___awmod@counter:	
   386                           ; 1 bytes @ 0x6
   387                           
   388                           
   389                           ; 1 bytes @ 0x6
   390  0006'                    	ds	1
   391  0007'                    ___awmod@sign:
   392                           
   393                           ; 1 bytes @ 0x7
   394  0007'                    	ds	1
   395  0008'                    ??_BeepsStateMachine:
   396  0008'                    ?_EnqueueBeeps:	
   397                           ; 1 bytes @ 0x8
   398                           
   399  0008'                    EnqueueBeeps@duration:	
   400                           ; 1 bytes @ 0x8
   401                           
   402                           
   403                           ; 2 bytes @ 0x8
   404  0008'                    	ds	2
   405  000A'                    EnqueueBeeps@allowTimeout:
   406                           
   407                           ; 1 bytes @ 0xA
   408  000A'                    	ds	1
   409  000B'                    ??_playAlert:
   410  000B'                    ??_EnqueueBeeps:	
   411                           ; 1 bytes @ 0xB
   412                           
   413  000B'                    playAlert@totalBeeps:	
   414                           ; 1 bytes @ 0xB
   415                           
   416                           
   417                           ; 1 bytes @ 0xB
   418  000B'                    	ds	1
   419  000C'                    playAlert@i:
   420                           
   421                           ; 1 bytes @ 0xC
   422  000C'                    	ds	1
   423  000D'                    playAlert@i_85:
   424                           
   425                           ; 1 bytes @ 0xD
   426  000D'                    	ds	1
   427  000E'                    playAlert@howMuchTimesPlayLong:
   428                           
   429                           ; 1 bytes @ 0xE
   430  000E'                    	ds	1
   431  000F'                    playAlert@howMuchTimesPlayShort:
   432                           
   433                           ; 1 bytes @ 0xF
   434  000F'                    	ds	1
   435  0010'                    ??_main:
   436                           
   437                           	psect	maintext
   438  0000'                    __pmaintext:	
   439                           ; 1 bytes @ 0x10
   440 ;;
   441 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   442 ;;
   443 ;; *************** function _main *****************
   444 ;; Defined at:
   445 ;;		line 66 in file "main.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;		None
   450 ;; Return value:  Size  Location     Type
   451 ;;                  2   14[None  ] int 
   452 ;; Registers used:
   453 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+6, btemp+7, pclath, cstack
   454 ;; Tracked objects:
   455 ;;		On entry : B00/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:      BANK0
   459 ;;      Params:         0
   460 ;;      Locals:         0
   461 ;;      Temps:          0
   462 ;;      Totals:         0
   463 ;;Total ram usage:        0 bytes
   464 ;; Hardware stack levels required when called: 4
   465 ;; This function calls:
   466 ;;		_ADCProcessing
   467 ;;		_BeepsStateMachine
   468 ;;		_InitTimer0
   469 ;;		_Init_uC
   470 ;;		_playAlert
   471 ;; This function is called by:
   472 ;;		Startup code after reset
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476  0000'                    _main:	
   477                           ;psect for function _main
   478                           
   479  0000'                    l1522:	
   480                           ;incstack = 0
   481                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+1+btemp+6+btemp+7+pclath+cstack]
   482                           
   483  0000' 2000'              	fcall	_InitTimer0
   484  0001' 2000'              	fcall	_Init_uC
   485  0002'                    l1524:
   486  0002' 2000'              	fcall	_ADCProcessing
   487  0003'                    l1526:
   488  0003' 2000'              	fcall	_playAlert
   489  0004'                    l1528:
   490  0004' 2000'              	fcall	_BeepsStateMachine
   491  0005' 2802'              	goto	l1524
   492  0006' 2800'              	ljmp	start
   493  0007'                    __end_of_main:
   494                           
   495                           	psect	text1
   496  0000'                    __ptext1:	
   497 ;; *************** function _playAlert *****************
   498 ;; Defined at:
   499 ;;		line 94 in file "sounds.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;		None
   502 ;; Auto vars:     Size  Location     Type
   503 ;;  i               1   13[BANK0 ] unsigned char 
   504 ;;  i               1   12[BANK0 ] unsigned char 
   505 ;;  howMuchTimes    1   15[BANK0 ] unsigned char 
   506 ;;  howMuchTimes    1   14[BANK0 ] unsigned char 
   507 ;;  totalBeeps      1   11[BANK0 ] unsigned char 
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+6, btemp+7, pclath, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:      BANK0
   517 ;;      Params:         0
   518 ;;      Locals:         5
   519 ;;      Temps:          0
   520 ;;      Totals:         5
   521 ;;Total ram usage:        5 bytes
   522 ;; Hardware stack levels used: 1
   523 ;; Hardware stack levels required when called: 3
   524 ;; This function calls:
   525 ;;		_EnqueueBeeps
   526 ;; This function is called by:
   527 ;;		_main
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531  0000'                    _playAlert:	
   532                           ;psect for function _playAlert
   533                           
   534  0000'                    l1404:	
   535                           ;incstack = 0
   536                           ; Regs used in _playAlert: [wreg-fsr0h+status,2-btemp+1+btemp+6+btemp+7+pclath+cstack]
   537                           
   538                           
   539                           ;sounds.c: 96:    uint8_t howMuchTimesPlayShort = 0;
   540  0000' 1283               	bcf	3,5	;RP0=0, select bank0
   541  0001' 018F'              	clrf	playAlert@howMuchTimesPlayShort
   542                           
   543                           ;sounds.c: 97:    uint8_t howMuchTimesPlayLong = 0;
   544  0002' 018E'              	clrf	playAlert@howMuchTimesPlayLong
   545                           
   546                           ;sounds.c: 99:    static uint8_t soundState = 0;;sounds.c: 101:    switch (soundState){
   547  0003' 283E'              	goto	l1440
   548  0004'                    l63:	
   549                           ;sounds.c: 102:      case 0:
   550                           
   551                           
   552                           ;sounds.c: 103:       if (prmFlags.errorUnderVoltage){
   553  0004' 1C99'              	btfss	_prmFlags,1	;volatile
   554  0005' 2807'              	goto	u631
   555  0006' 2808'              	goto	u630
   556  0007'                    u631:
   557  0007' 280C'              	goto	l1410
   558  0008'                    u630:
   559  0008'                    l1406:
   560                           
   561                           ;sounds.c: 104:         howMuchTimesPlayShort = 2;
   562  0008' 3002               	movlw	2
   563  0009' 008F'              	movwf	playAlert@howMuchTimesPlayShort
   564  000A'                    l1408:
   565                           
   566                           ;sounds.c: 105:         howMuchTimesPlayLong = 1;
   567  000A' 018E'              	clrf	playAlert@howMuchTimesPlayLong
   568  000B' 0A8E'              	incf	playAlert@howMuchTimesPlayLong,f
   569  000C'                    l1410:
   570                           
   571                           ;sounds.c: 107:       if (!prmFlags.alarmState) soundState = 1;
   572  000C' 1A19'              	btfsc	_prmFlags,4	;volatile
   573  000D' 280F'              	goto	u641
   574  000E' 2810'              	goto	u640
   575  000F'                    u641:
   576  000F' 2854'              	goto	l1442
   577  0010'                    u640:
   578  0010'                    l1412:
   579  0010' 0194'              	clrf	playAlert@soundState
   580  0011' 0A94'              	incf	playAlert@soundState,f
   581  0012' 2854'              	goto	l1442
   582  0013'                    l67:	
   583                           ;sounds.c: 110:      case 1:
   584                           
   585                           
   586                           ;sounds.c: 111:      if (prmFlags.errorOverVoltage) {
   587  0013' 1D19'              	btfss	_prmFlags,2	;volatile
   588  0014' 2816'              	goto	u651
   589  0015' 2817'              	goto	u650
   590  0016'                    u651:
   591  0016' 281B'              	goto	l1416
   592  0017'                    u650:
   593  0017'                    l1414:
   594                           
   595                           ;sounds.c: 112:          howMuchTimesPlayShort = 2;
   596  0017' 3002               	movlw	2
   597  0018' 008F'              	movwf	playAlert@howMuchTimesPlayShort
   598                           
   599                           ;sounds.c: 113:          howMuchTimesPlayLong = 2;
   600  0019' 3002               	movlw	2
   601  001A' 008E'              	movwf	playAlert@howMuchTimesPlayLong
   602  001B'                    l1416:
   603                           
   604                           ;sounds.c: 115:       if (!prmFlags.alarmState) soundState = 2;
   605  001B' 1A19'              	btfsc	_prmFlags,4	;volatile
   606  001C' 281E'              	goto	u661
   607  001D' 281F'              	goto	u660
   608  001E'                    u661:
   609  001E' 2854'              	goto	l1442
   610  001F'                    u660:
   611  001F'                    l1418:
   612  001F' 3002               	movlw	2
   613  0020' 0094'              	movwf	playAlert@soundState
   614  0021' 2854'              	goto	l1442
   615  0022'                    l70:	
   616                           ;sounds.c: 118:      case 2:
   617                           
   618                           
   619                           ;sounds.c: 119:      if (prmFlags.errorHighTemperature){
   620  0022' 1D99'              	btfss	_prmFlags,3	;volatile
   621  0023' 2825'              	goto	u671
   622  0024' 2826'              	goto	u670
   623  0025'                    u671:
   624  0025' 2829'              	goto	l1424
   625  0026'                    u670:
   626  0026'                    l1420:
   627                           
   628                           ;sounds.c: 120:        howMuchTimesPlayShort = 3;
   629  0026' 3003               	movlw	3
   630  0027' 008F'              	movwf	playAlert@howMuchTimesPlayShort
   631  0028'                    l1422:
   632                           
   633                           ;sounds.c: 121:        howMuchTimesPlayLong = 0;
   634  0028' 018E'              	clrf	playAlert@howMuchTimesPlayLong
   635  0029'                    l1424:
   636                           
   637                           ;sounds.c: 123:       if (!prmFlags.alarmState) soundState = 3;
   638  0029' 1A19'              	btfsc	_prmFlags,4	;volatile
   639  002A' 282C'              	goto	u681
   640  002B' 282D'              	goto	u680
   641  002C'                    u681:
   642  002C' 2854'              	goto	l1442
   643  002D'                    u680:
   644  002D'                    l1426:
   645  002D' 3003               	movlw	3
   646  002E' 0094'              	movwf	playAlert@soundState
   647  002F' 2854'              	goto	l1442
   648  0030'                    l73:	
   649                           ;sounds.c: 126:      case 3:
   650                           
   651                           
   652                           ;sounds.c: 127:       if (prmFlags.playLong){
   653  0030' 1E99'              	btfss	_prmFlags,5	;volatile
   654  0031' 2833'              	goto	u691
   655  0032' 2834'              	goto	u690
   656  0033'                    u691:
   657  0033' 2837'              	goto	l1432
   658  0034'                    u690:
   659  0034'                    l1428:
   660                           
   661                           ;sounds.c: 128:        howMuchTimesPlayShort = 0;
   662  0034' 018F'              	clrf	playAlert@howMuchTimesPlayShort
   663  0035'                    l1430:
   664                           
   665                           ;sounds.c: 129:        howMuchTimesPlayLong = 1;
   666  0035' 018E'              	clrf	playAlert@howMuchTimesPlayLong
   667  0036' 0A8E'              	incf	playAlert@howMuchTimesPlayLong,f
   668  0037'                    l1432:
   669                           
   670                           ;sounds.c: 131:       if (!prmFlags.alarmState) {
   671  0037' 1A19'              	btfsc	_prmFlags,4	;volatile
   672  0038' 283A'              	goto	u701
   673  0039' 283B'              	goto	u700
   674  003A'                    u701:
   675  003A' 2854'              	goto	l1442
   676  003B'                    u700:
   677  003B'                    l1434:
   678                           
   679                           ;sounds.c: 132:        soundState = 0;
   680  003B' 0194'              	clrf	playAlert@soundState
   681  003C'                    l1436:
   682                           
   683                           ;sounds.c: 133:        prmFlags.playLong = 0;
   684  003C' 1299'              	bcf	_prmFlags,5	;volatile
   685  003D' 2854'              	goto	l1442
   686  003E'                    l1440:
   687  003E' 0814'              	movf	playAlert@soundState,w
   688  003F' 0086               	movwf	btemp+6
   689  0040' 0187               	clrf	btemp+7
   690                           
   691                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   692                           ; Switch size 1, requested type "simple"
   693                           ; Number of cases is 1, Range of values is 0 to 0
   694                           ; switch strategies available:
   695                           ; Name         Instructions Cycles
   696                           ; simple_byte            4     3 (average)
   697                           ; direct_byte            7     6 (fixed)
   698                           ; jumptable            260     6 (fixed)
   699                           ;	Chosen strategy is simple_byte
   700  0041' 0801'              	movf	wtemp3+1,w
   701  0042' 3A00               	xorlw	0	; case 0
   702  0043' 1903               	skipnz
   703  0044' 2846'              	goto	l1590
   704  0045' 2854'              	goto	l1442
   705  0046'                    l1590:
   706                           
   707                           ; Switch size 1, requested type "simple"
   708                           ; Number of cases is 4, Range of values is 0 to 3
   709                           ; switch strategies available:
   710                           ; Name         Instructions Cycles
   711                           ; direct_byte           10     6 (fixed)
   712                           ; simple_byte           13     7 (average)
   713                           ; jumptable            260     6 (fixed)
   714                           ;	Chosen strategy is simple_byte
   715  0046' 0800'              	movf	wtemp3,w
   716  0047' 3A00               	xorlw	0	; case 0
   717  0048' 1903               	skipnz
   718  0049' 2804'              	goto	l63
   719  004A' 3A01               	xorlw	1	; case 1
   720  004B' 1903               	skipnz
   721  004C' 2813'              	goto	l67
   722  004D' 3A03               	xorlw	3	; case 2
   723  004E' 1903               	skipnz
   724  004F' 2822'              	goto	l70
   725  0050' 3A01               	xorlw	1	; case 3
   726  0051' 1903               	skipnz
   727  0052' 2830'              	goto	l73
   728  0053' 2854'              	goto	l1442
   729  0054'                    l1442:
   730                           
   731                           ;sounds.c: 141:     totalBeeps = howMuchTimesPlayShort + howMuchTimesPlayLong;
   732  0054' 080E'              	movf	playAlert@howMuchTimesPlayLong,w
   733  0055' 070F'              	addwf	playAlert@howMuchTimesPlayShort,w
   734  0056' 008B'              	movwf	playAlert@totalBeeps
   735  0057'                    l1444:
   736                           
   737                           ;sounds.c: 144:     for (uint8_t i = 0; i < howMuchTimesPlayShort; i++) {
   738  0057' 018C'              	clrf	playAlert@i
   739  0058' 287A'              	goto	l1454
   740  0059'                    l1446:
   741                           
   742                           ;sounds.c: 145:         if (i == (totalBeeps - 1)) {
   743  0059' 080B'              	movf	playAlert@totalBeeps,w
   744  005A' 3EFF               	addlw	255
   745  005B' 0080'              	movwf	wtemp3
   746  005C' 30FF               	movlw	255
   747  005D' 1803               	skipnc
   748  005E' 3000               	movlw	0
   749  005F' 0081'              	movwf	wtemp3+1
   750  0060' 080C'              	movf	playAlert@i,w
   751  0061' 0600'              	xorwf	wtemp3,w
   752  0062' 0401'              	iorwf	wtemp3+1,w
   753  0063' 1D03               	skipz
   754  0064' 2866'              	goto	u711
   755  0065' 2867'              	goto	u710
   756  0066'                    u711:
   757  0066' 286F'              	goto	l1450
   758  0067'                    u710:
   759  0067'                    l1448:
   760                           
   761                           ;sounds.c: 146:             EnqueueBeeps(120, 1);
   762  0067' 3078               	movlw	120
   763  0068' 0088'              	movwf	EnqueueBeeps@duration
   764  0069' 3000               	movlw	0
   765  006A' 0089'              	movwf	EnqueueBeeps@duration+1
   766  006B' 018A'              	clrf	EnqueueBeeps@allowTimeout
   767  006C' 0A8A'              	incf	EnqueueBeeps@allowTimeout,f
   768  006D' 2000'              	fcall	_EnqueueBeeps
   769                           
   770                           ;sounds.c: 147:         } else {
   771  006E' 2875'              	goto	l1452
   772  006F'                    l1450:
   773                           
   774                           ;sounds.c: 148:             EnqueueBeeps(120, 0);
   775  006F' 3078               	movlw	120
   776  0070' 0088'              	movwf	EnqueueBeeps@duration
   777  0071' 3000               	movlw	0
   778  0072' 0089'              	movwf	EnqueueBeeps@duration+1
   779  0073' 018A'              	clrf	EnqueueBeeps@allowTimeout
   780  0074' 2000'              	fcall	_EnqueueBeeps
   781  0075'                    l1452:
   782                           
   783                           ;sounds.c: 150:     }
   784  0075' 3001               	movlw	1
   785  0076' 0087               	movwf	btemp+7
   786  0077' 0807               	movf	btemp+7,w
   787  0078' 1283               	bcf	3,5	;RP0=0, select bank0
   788  0079' 078C'              	addwf	playAlert@i,f
   789  007A'                    l1454:
   790  007A' 080F'              	movf	playAlert@howMuchTimesPlayShort,w
   791  007B' 020C'              	subwf	playAlert@i,w
   792  007C' 1C03               	skipc
   793  007D' 287F'              	goto	u721
   794  007E' 2880'              	goto	u720
   795  007F'                    u721:
   796  007F' 2859'              	goto	l1446
   797  0080'                    u720:
   798  0080'                    l1456:
   799                           
   800                           ;sounds.c: 153:     for (uint8_t i = 0; i < howMuchTimesPlayLong; i++) {
   801  0080' 018D'              	clrf	playAlert@i_85
   802  0081' 28AB'              	goto	l1466
   803  0082'                    l1458:
   804                           
   805                           ;sounds.c: 154:         if ((howMuchTimesPlayShort + i) == totalBeeps - 1) {
   806  0082' 080B'              	movf	playAlert@totalBeeps,w
   807  0083' 3EFF               	addlw	255
   808  0084' 0080'              	movwf	wtemp3
   809  0085' 30FF               	movlw	255
   810  0086' 1803               	skipnc
   811  0087' 3000               	movlw	0
   812  0088' 0081'              	movwf	wtemp3+1
   813  0089' 080F'              	movf	playAlert@howMuchTimesPlayShort,w
   814  008A' 070D'              	addwf	playAlert@i_85,w
   815  008B' 0080'              	movwf	wtemp0
   816  008C' 0181'              	clrf	wtemp0+1
   817  008D' 0D81'              	rlf	wtemp0+1,f
   818  008E' 0801'              	movf	wtemp3+1,w
   819  008F' 0601'              	xorwf	wtemp0+1,w
   820  0090' 1D03               	skipz
   821  0091' 2894'              	goto	u735
   822  0092' 0800'              	movf	wtemp3,w
   823  0093' 0600'              	xorwf	wtemp0,w
   824  0094'                    u735:
   825  0094' 1D03               	skipz
   826  0095' 2897'              	goto	u731
   827  0096' 2898'              	goto	u730
   828  0097'                    u731:
   829  0097' 28A0'              	goto	l1462
   830  0098'                    u730:
   831  0098'                    l1460:
   832                           
   833                           ;sounds.c: 155:             EnqueueBeeps(300, 1);
   834  0098' 302C               	movlw	44
   835  0099' 0088'              	movwf	EnqueueBeeps@duration
   836  009A' 3001               	movlw	1
   837  009B' 0089'              	movwf	EnqueueBeeps@duration+1
   838  009C' 018A'              	clrf	EnqueueBeeps@allowTimeout
   839  009D' 0A8A'              	incf	EnqueueBeeps@allowTimeout,f
   840  009E' 2000'              	fcall	_EnqueueBeeps
   841                           
   842                           ;sounds.c: 156:         } else {
   843  009F' 28A6'              	goto	l1464
   844  00A0'                    l1462:
   845                           
   846                           ;sounds.c: 157:             EnqueueBeeps(300, 0);
   847  00A0' 302C               	movlw	44
   848  00A1' 0088'              	movwf	EnqueueBeeps@duration
   849  00A2' 3001               	movlw	1
   850  00A3' 0089'              	movwf	EnqueueBeeps@duration+1
   851  00A4' 018A'              	clrf	EnqueueBeeps@allowTimeout
   852  00A5' 2000'              	fcall	_EnqueueBeeps
   853  00A6'                    l1464:
   854                           
   855                           ;sounds.c: 159:     }
   856  00A6' 3001               	movlw	1
   857  00A7' 0087               	movwf	btemp+7
   858  00A8' 0807               	movf	btemp+7,w
   859  00A9' 1283               	bcf	3,5	;RP0=0, select bank0
   860  00AA' 078D'              	addwf	playAlert@i_85,f
   861  00AB'                    l1466:
   862  00AB' 080E'              	movf	playAlert@howMuchTimesPlayLong,w
   863  00AC' 020D'              	subwf	playAlert@i_85,w
   864  00AD' 1C03               	skipc
   865  00AE' 28B0'              	goto	u741
   866  00AF' 28B1'              	goto	u740
   867  00B0'                    u741:
   868  00B0' 2882'              	goto	l1458
   869  00B1'                    u740:
   870  00B1'                    l87:
   871  00B1' 0008               	return
   872  00B2'                    __end_of_playAlert:
   873                           
   874                           	psect	text2
   875  0000'                    __ptext2:	
   876 ;; *************** function _EnqueueBeeps *****************
   877 ;; Defined at:
   878 ;;		line 25 in file "sounds.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;  duration        2    8[BANK0 ] unsigned int 
   881 ;;  allowTimeout    1   10[BANK0 ] unsigned char 
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+7, pclath, cstack
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:      BANK0
   893 ;;      Params:         3
   894 ;;      Locals:         0
   895 ;;      Temps:          0
   896 ;;      Totals:         3
   897 ;;Total ram usage:        3 bytes
   898 ;; Hardware stack levels used: 1
   899 ;; Hardware stack levels required when called: 2
   900 ;; This function calls:
   901 ;;		___awmod
   902 ;;		___bmul
   903 ;; This function is called by:
   904 ;;		_playAlert
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908  0000'                    _EnqueueBeeps:	
   909                           ;psect for function _EnqueueBeeps
   910                           
   911  0000'                    l1264:	
   912                           ;incstack = 0
   913                           ; Regs used in _EnqueueBeeps: [wreg-fsr0h+status,2+status,0+btemp+7+pclath+cstack]
   914                           
   915                           
   916                           ;sounds.c: 27:     if ((queueTail + 1) % 5 != queueHead) {
   917  0000' 3005               	movlw	5
   918  0001' 1283               	bcf	3,5	;RP0=0, select bank0
   919  0002' 0082'              	movwf	___awmod@divisor
   920  0003' 3000               	movlw	0
   921  0004' 0083'              	movwf	___awmod@divisor+1
   922  0005' 0817'              	movf	_queueTail,w
   923  0006' 3E01               	addlw	1
   924  0007' 0084'              	movwf	___awmod@dividend
   925  0008' 3000               	movlw	0
   926  0009' 1803               	skipnc
   927  000A' 3001               	movlw	1
   928  000B' 0085'              	movwf	___awmod@dividend+1
   929  000C' 2000'              	fcall	___awmod
   930  000D' 1283               	bcf	3,5	;RP0=0, select bank0
   931  000E' 0818'              	movf	_queueHead,w
   932  000F' 0602'              	xorwf	?___awmod,w
   933  0010' 0403'              	iorwf	?___awmod+1,w
   934  0011' 1903               	skipnz
   935  0012' 2814'              	goto	u461
   936  0013' 2815'              	goto	u460
   937  0014'                    u461:
   938  0014' 283B'              	goto	l34
   939  0015'                    u460:
   940  0015'                    l1266:
   941                           
   942                           ;sounds.c: 29:         beepsQueue[queueTail].duration = duration;
   943  0015' 3003               	movlw	3
   944  0016' 0082'              	movwf	___bmul@multiplicand
   945  0017' 0817'              	movf	_queueTail,w
   946  0018' 2000'              	fcall	___bmul
   947  0019' 3E00'              	addlw	(low (_beepsQueue| 0))& (0+255)
   948  001A' 0084               	movwf	4
   949  001B' 1283               	bcf	3,5	;RP0=0, select bank0
   950  001C' 0808'              	movf	EnqueueBeeps@duration,w
   951  001D' 1383               	bcf	3,7	;select IRP bank0
   952  001E' 0080               	movwf	0
   953  001F' 0A84               	incf	4,f
   954  0020' 0809'              	movf	EnqueueBeeps@duration+1,w
   955  0021' 0080               	movwf	0
   956                           
   957                           ;sounds.c: 30:         beepsQueue[queueTail].allowTimeout = allowTimeout;
   958  0022' 3003               	movlw	3
   959  0023' 0082'              	movwf	___bmul@multiplicand
   960  0024' 0817'              	movf	_queueTail,w
   961  0025' 2000'              	fcall	___bmul
   962  0026' 3E00'              	addlw	(low ((_beepsQueue| 0+2)))& (0+255)
   963  0027' 0084               	movwf	4
   964  0028' 1283               	bcf	3,5	;RP0=0, select bank0
   965  0029' 080A'              	movf	EnqueueBeeps@allowTimeout,w
   966  002A' 1383               	bcf	3,7	;select IRP bank0
   967  002B' 0080               	movwf	0
   968  002C'                    l1268:
   969                           
   970                           ;sounds.c: 31:         queueTail = (queueTail + 1) % 5;
   971  002C' 3005               	movlw	5
   972  002D' 0082'              	movwf	___awmod@divisor
   973  002E' 3000               	movlw	0
   974  002F' 0083'              	movwf	___awmod@divisor+1
   975  0030' 0817'              	movf	_queueTail,w
   976  0031' 3E01               	addlw	1
   977  0032' 0084'              	movwf	___awmod@dividend
   978  0033' 3000               	movlw	0
   979  0034' 1803               	skipnc
   980  0035' 3001               	movlw	1
   981  0036' 0085'              	movwf	___awmod@dividend+1
   982  0037' 2000'              	fcall	___awmod
   983  0038' 1283               	bcf	3,5	;RP0=0, select bank0
   984  0039' 0802'              	movf	?___awmod,w
   985  003A' 0097'              	movwf	_queueTail
   986  003B'                    l34:
   987  003B' 0008               	return
   988  003C'                    __end_of_EnqueueBeeps:
   989                           
   990                           	psect	text3
   991  0000'                    __ptext3:	
   992 ;; *************** function _Init_uC *****************
   993 ;; Defined at:
   994 ;;		line 16 in file "initPeriphery.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, status,2, status,0, pclath, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:      BANK0
  1008 ;;      Params:         0
  1009 ;;      Locals:         0
  1010 ;;      Temps:          0
  1011 ;;      Totals:         0
  1012 ;;Total ram usage:        0 bytes
  1013 ;; Hardware stack levels used: 1
  1014 ;; Hardware stack levels required when called: 2
  1015 ;; This function calls:
  1016 ;;		_MuxVoltage
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022  0000'                    _Init_uC:	
  1023                           ;psect for function _Init_uC
  1024                           
  1025  0000'                    l1302:	
  1026                           ;incstack = 0
  1027                           ; Regs used in _Init_uC: [wreg+status,2+status,0+pclath+cstack]
  1028                           
  1029                           
  1030                           ;initPeriphery.c: 17:     CMCON = 0x07;
  1031  0000' 3007               	movlw	7
  1032  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  1033  0002' 0099               	movwf	25	;volatile
  1034  0003'                    l1304:
  1035                           
  1036                           ;initPeriphery.c: 18:     VRCON = 0x00;
  1037  0003' 1683               	bsf	3,5	;RP0=1, select bank1
  1038  0004' 0199               	clrf	25	;volatile
  1039  0005'                    l1306:
  1040                           
  1041                           ;initPeriphery.c: 21:     TRISIO = 0;
  1042  0005' 0185               	clrf	5	;volatile
  1043  0006'                    l1308:
  1044                           
  1045                           ;initPeriphery.c: 22:     GPIO = 0;
  1046  0006' 1283               	bcf	3,5	;RP0=0, select bank0
  1047  0007' 0185               	clrf	5	;volatile
  1048  0008'                    l1310:
  1049                           
  1050                           ;initPeriphery.c: 25:     TRISIO2 = 0;
  1051  0008' 1683               	bsf	3,5	;RP0=1, select bank1
  1052  0009' 1105               	bcf	5,2	;volatile
  1053  000A'                    l1312:
  1054                           
  1055                           ;initPeriphery.c: 26:     GP2 = 0;
  1056  000A' 1283               	bcf	3,5	;RP0=0, select bank0
  1057  000B' 1105               	bcf	5,2	;volatile
  1058  000C'                    l1314:
  1059                           
  1060                           ;initPeriphery.c: 29:     TRISIO5 = 0;
  1061  000C' 1683               	bsf	3,5	;RP0=1, select bank1
  1062  000D' 1285               	bcf	5,5	;volatile
  1063  000E'                    l1316:
  1064                           
  1065                           ;initPeriphery.c: 30:     GP5 = 1;
  1066  000E' 1283               	bcf	3,5	;RP0=0, select bank0
  1067  000F' 1685               	bsf	5,5	;volatile
  1068  0010'                    l1318:
  1069                           
  1070                           ;initPeriphery.c: 33:     TRISIO4 = 0;
  1071  0010' 1683               	bsf	3,5	;RP0=1, select bank1
  1072  0011' 1205               	bcf	5,4	;volatile
  1073  0012'                    l1320:
  1074                           
  1075                           ;initPeriphery.c: 34:     GP4 = 1;
  1076  0012' 1283               	bcf	3,5	;RP0=0, select bank0
  1077  0013' 1605               	bsf	5,4	;volatile
  1078  0014'                    l1322:
  1079                           
  1080                           ;initPeriphery.c: 37:     VCFG = 0;
  1081  0014' 131F               	bcf	31,6	;volatile
  1082  0015'                    l1324:
  1083                           
  1084                           ;initPeriphery.c: 38:     TRISIO0 = 1;
  1085  0015' 1683               	bsf	3,5	;RP0=1, select bank1
  1086  0016' 1405               	bsf	5,0	;volatile
  1087  0017'                    l1326:
  1088                           
  1089                           ;initPeriphery.c: 39:     TRISIO1 = 1;
  1090  0017' 1485               	bsf	5,1	;volatile
  1091  0018'                    l1328:
  1092                           
  1093                           ;initPeriphery.c: 41:     ANSEL = 0b00110011;
  1094  0018' 3033               	movlw	51
  1095  0019' 009F               	movwf	31	;volatile
  1096  001A'                    l1330:
  1097                           
  1098                           ;initPeriphery.c: 43:     PEIE = 1;
  1099  001A' 170B               	bsf	11,6	;volatile
  1100  001B'                    l1332:
  1101                           
  1102                           ;initPeriphery.c: 44:     GIE = 1;
  1103  001B' 178B               	bsf	11,7	;volatile
  1104  001C'                    l1334:
  1105                           
  1106                           ;initPeriphery.c: 47:     prmFlags.playLong = 1;
  1107  001C' 1283               	bcf	3,5	;RP0=0, select bank0
  1108  001D' 1699'              	bsf	_prmFlags,5	;volatile
  1109  001E'                    l1336:
  1110                           
  1111                           ;initPeriphery.c: 49:     MuxVoltage();
  1112  001E' 2000'              	fcall	_MuxVoltage
  1113  001F'                    l137:
  1114  001F' 0008               	return
  1115  0020'                    __end_of_Init_uC:
  1116                           
  1117                           	psect	text4
  1118  0000'                    __ptext4:	
  1119 ;; *************** function _InitTimer0 *****************
  1120 ;; Defined at:
  1121 ;;		line 9 in file "initPeriphery.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:      BANK0
  1135 ;;      Params:         0
  1136 ;;      Locals:         0
  1137 ;;      Temps:          0
  1138 ;;      Totals:         0
  1139 ;;Total ram usage:        0 bytes
  1140 ;; Hardware stack levels used: 1
  1141 ;; Hardware stack levels required when called: 1
  1142 ;; This function calls:
  1143 ;;		Nothing
  1144 ;; This function is called by:
  1145 ;;		_main
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149  0000'                    _InitTimer0:	
  1150                           ;psect for function _InitTimer0
  1151                           
  1152  0000'                    l894:	
  1153                           ;incstack = 0
  1154                           ; Regs used in _InitTimer0: [wreg+status,2]
  1155                           
  1156                           
  1157                           ;initPeriphery.c: 10:     OPTION_REG = 0b11000001;
  1158  0000' 30C1               	movlw	193
  1159  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  1160  0002' 0081               	movwf	1	;volatile
  1161  0003'                    l896:
  1162                           
  1163                           ;initPeriphery.c: 11:     TMR0 = 0;
  1164  0003' 1283               	bcf	3,5	;RP0=0, select bank0
  1165  0004' 0181               	clrf	1	;volatile
  1166  0005'                    l898:
  1167                           
  1168                           ;initPeriphery.c: 12:     TMR0IF = 0;
  1169  0005' 110B               	bcf	11,2	;volatile
  1170  0006'                    l900:
  1171                           
  1172                           ;initPeriphery.c: 13:     TMR0IE = 1;
  1173  0006' 168B               	bsf	11,5	;volatile
  1174  0007'                    l134:
  1175  0007' 0008               	return
  1176  0008'                    __end_of_InitTimer0:
  1177                           
  1178                           	psect	text5
  1179  0000'                    __ptext5:	
  1180 ;; *************** function _BeepsStateMachine *****************
  1181 ;; Defined at:
  1182 ;;		line 38 in file "sounds.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;		None
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;		None
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      void 
  1189 ;; Registers used:
  1190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+6, btemp+7, pclath, cstack
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:      BANK0
  1196 ;;      Params:         0
  1197 ;;      Locals:         0
  1198 ;;      Temps:          0
  1199 ;;      Totals:         0
  1200 ;;Total ram usage:        0 bytes
  1201 ;; Hardware stack levels used: 1
  1202 ;; Hardware stack levels required when called: 2
  1203 ;; This function calls:
  1204 ;;		___awmod
  1205 ;;		___bmul
  1206 ;; This function is called by:
  1207 ;;		_main
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211  0000'                    _BeepsStateMachine:	
  1212                           ;psect for function _BeepsStateMachine
  1213                           
  1214  0000'                    l1472:	
  1215                           ;incstack = 0
  1216                           ; Regs used in _BeepsStateMachine: [wreg-fsr0h+status,2+status,0+btemp+6+btemp+7+pclath+
      +                          cstack]
  1217                           
  1218                           
  1219                           ;sounds.c: 40:     static uint8_t state = 0;;sounds.c: 41:     static uint16_t stateMach
      +                          ineDuration = 0;;sounds.c: 42:     static uint8_t stateMachineAllowTimeout = 0;;sounds.c
      +                          : 44:     switch(state){
  1220  0000' 286E'              	goto	l1516
  1221  0001'                    l1474:
  1222                           
  1223                           ;sounds.c: 46:         if (queueHead != queueTail) {
  1224  0001' 0818'              	movf	_queueHead,w
  1225  0002' 0617'              	xorwf	_queueTail,w
  1226  0003' 1903               	skipnz
  1227  0004' 2806'              	goto	u751
  1228  0005' 2807'              	goto	u750
  1229  0006'                    u751:
  1230  0006' 2885'              	goto	l57
  1231  0007'                    u750:
  1232  0007'                    l1476:
  1233                           
  1234                           ;sounds.c: 47:                 stateMachineDuration = beepsQueue[queueHead].duration;
  1235  0007' 3003               	movlw	3
  1236  0008' 0082'              	movwf	___bmul@multiplicand
  1237  0009' 0818'              	movf	_queueHead,w
  1238  000A' 2000'              	fcall	___bmul
  1239  000B' 3E00'              	addlw	(low (_beepsQueue| 0))& (0+255)
  1240  000C' 0084               	movwf	4
  1241  000D' 1383               	bcf	3,7	;select IRP bank0
  1242  000E' 0800               	movf	0,w
  1243  000F' 1283               	bcf	3,5	;RP0=0, select bank0
  1244  0010' 008F'              	movwf	BeepsStateMachine@stateMachineDuration
  1245  0011' 0A84               	incf	4,f
  1246  0012' 0800               	movf	0,w
  1247  0013' 0090'              	movwf	BeepsStateMachine@stateMachineDuration+1
  1248                           
  1249                           ;sounds.c: 48:                 stateMachineAllowTimeout = beepsQueue[queueHead].allowTim
      +                          eout;
  1250  0014' 3003               	movlw	3
  1251  0015' 0082'              	movwf	___bmul@multiplicand
  1252  0016' 0818'              	movf	_queueHead,w
  1253  0017' 2000'              	fcall	___bmul
  1254  0018' 3E00'              	addlw	(low ((_beepsQueue| 0+2)))& (0+255)
  1255  0019' 0084               	movwf	4
  1256  001A' 1383               	bcf	3,7	;select IRP bank0
  1257  001B' 0800               	movf	0,w
  1258  001C' 1283               	bcf	3,5	;RP0=0, select bank0
  1259  001D' 0095'              	movwf	BeepsStateMachine@stateMachineAllowTimeout
  1260  001E'                    l1478:
  1261                           
  1262                           ;sounds.c: 49:                 queueHead = (queueHead + 1) % 5;
  1263  001E' 3005               	movlw	5
  1264  001F' 0082'              	movwf	___awmod@divisor
  1265  0020' 3000               	movlw	0
  1266  0021' 0083'              	movwf	___awmod@divisor+1
  1267  0022' 0818'              	movf	_queueHead,w
  1268  0023' 3E01               	addlw	1
  1269  0024' 0084'              	movwf	___awmod@dividend
  1270  0025' 3000               	movlw	0
  1271  0026' 1803               	skipnc
  1272  0027' 3001               	movlw	1
  1273  0028' 0085'              	movwf	___awmod@dividend+1
  1274  0029' 2000'              	fcall	___awmod
  1275  002A' 1283               	bcf	3,5	;RP0=0, select bank0
  1276  002B' 0802'              	movf	?___awmod,w
  1277  002C' 0098'              	movwf	_queueHead
  1278  002D'                    l1480:
  1279                           
  1280                           ;sounds.c: 50:                 GP2 = 1;
  1281  002D' 1505               	bsf	5,2	;volatile
  1282  002E'                    l1482:
  1283                           
  1284                           ;sounds.c: 51:                 cnt0 = 0;
  1285  002E' 0191'              	clrf	_cnt0	;volatile
  1286  002F' 0192'              	clrf	_cnt0+1	;volatile
  1287  0030'                    l1484:
  1288                           
  1289                           ;sounds.c: 52:                 state = 1;
  1290  0030' 0196'              	clrf	BeepsStateMachine@state
  1291  0031' 0A96'              	incf	BeepsStateMachine@state,f
  1292  0032'                    l1486:
  1293                           
  1294                           ;sounds.c: 53:           prmFlags.alarmState = 1;
  1295  0032' 1619'              	bsf	_prmFlags,4	;volatile
  1296  0033' 2885'              	goto	l57
  1297  0034'                    l1488:
  1298                           
  1299                           ;sounds.c: 58:    if (cnt0 >= stateMachineDuration){
  1300  0034' 0810'              	movf	BeepsStateMachine@stateMachineDuration+1,w
  1301  0035' 0212'              	subwf	_cnt0+1,w	;volatile
  1302  0036' 1D03               	skipz
  1303  0037' 283A'              	goto	u765
  1304  0038' 080F'              	movf	BeepsStateMachine@stateMachineDuration,w
  1305  0039' 0211'              	subwf	_cnt0,w	;volatile
  1306  003A'                    u765:
  1307  003A' 1C03               	skipc
  1308  003B' 283D'              	goto	u761
  1309  003C' 283E'              	goto	u760
  1310  003D'                    u761:
  1311  003D' 2885'              	goto	l57
  1312  003E'                    u760:
  1313  003E'                    l1490:
  1314                           
  1315                           ;sounds.c: 59:              cnt0 = 0;
  1316  003E' 0191'              	clrf	_cnt0	;volatile
  1317  003F' 0192'              	clrf	_cnt0+1	;volatile
  1318  0040'                    l1492:
  1319                           
  1320                           ;sounds.c: 60:              state = 2;
  1321  0040' 3002               	movlw	2
  1322  0041' 0096'              	movwf	BeepsStateMachine@state
  1323  0042'                    l1494:
  1324                           
  1325                           ;sounds.c: 61:              GP2 = 0;
  1326  0042' 1105               	bcf	5,2	;volatile
  1327  0043' 2885'              	goto	l57
  1328  0044'                    l1496:
  1329                           
  1330                           ;sounds.c: 66:           if (cnt0 >= 80){
  1331  0044' 3000               	movlw	0
  1332  0045' 0212'              	subwf	_cnt0+1,w	;volatile
  1333  0046' 3050               	movlw	80
  1334  0047' 1903               	skipnz
  1335  0048' 0211'              	subwf	_cnt0,w	;volatile
  1336  0049' 1C03               	skipc
  1337  004A' 284C'              	goto	u771
  1338  004B' 284D'              	goto	u770
  1339  004C'                    u771:
  1340  004C' 2885'              	goto	l57
  1341  004D'                    u770:
  1342  004D'                    l1498:
  1343                           
  1344                           ;sounds.c: 67:              cnt0 = 0;
  1345  004D' 0191'              	clrf	_cnt0	;volatile
  1346  004E' 0192'              	clrf	_cnt0+1	;volatile
  1347  004F'                    l1500:
  1348                           
  1349                           ;sounds.c: 68:              if (stateMachineAllowTimeout == 0){
  1350  004F' 0815'              	movf	BeepsStateMachine@stateMachineAllowTimeout,w
  1351  0050' 1D03               	btfss	3,2
  1352  0051' 2853'              	goto	u781
  1353  0052' 2854'              	goto	u780
  1354  0053'                    u781:
  1355  0053' 2856'              	goto	l1504
  1356  0054'                    u780:
  1357  0054'                    l1502:
  1358                           
  1359                           ;sounds.c: 69:                  state = 0;
  1360  0054' 0196'              	clrf	BeepsStateMachine@state
  1361                           
  1362                           ;sounds.c: 70:          }
  1363  0055' 2885'              	goto	l57
  1364  0056'                    l1504:
  1365  0056' 0315'              	decf	BeepsStateMachine@stateMachineAllowTimeout,w
  1366  0057' 1D03               	btfss	3,2
  1367  0058' 285A'              	goto	u791
  1368  0059' 285B'              	goto	u790
  1369  005A'                    u791:
  1370  005A' 2885'              	goto	l57
  1371  005B'                    u790:
  1372  005B'                    l1506:
  1373                           
  1374                           ;sounds.c: 72:          state = 3;
  1375  005B' 3003               	movlw	3
  1376  005C' 0096'              	movwf	BeepsStateMachine@state
  1377  005D' 2885'              	goto	l57
  1378  005E'                    l1508:
  1379                           
  1380                           ;sounds.c: 78:          if (cnt0 >= 1300){
  1381  005E' 3005               	movlw	5
  1382  005F' 0212'              	subwf	_cnt0+1,w	;volatile
  1383  0060' 3014               	movlw	20
  1384  0061' 1903               	skipnz
  1385  0062' 0211'              	subwf	_cnt0,w	;volatile
  1386  0063' 1C03               	skipc
  1387  0064' 2866'              	goto	u801
  1388  0065' 2867'              	goto	u800
  1389  0066'                    u801:
  1390  0066' 2885'              	goto	l57
  1391  0067'                    u800:
  1392  0067'                    l1510:
  1393                           
  1394                           ;sounds.c: 79:            cnt0 = 0;
  1395  0067' 0191'              	clrf	_cnt0	;volatile
  1396  0068' 0192'              	clrf	_cnt0+1	;volatile
  1397                           
  1398                           ;sounds.c: 80:            queueHead = 0;
  1399  0069' 0198'              	clrf	_queueHead
  1400                           
  1401                           ;sounds.c: 81:            queueTail = 0;
  1402  006A' 0197'              	clrf	_queueTail
  1403                           
  1404                           ;sounds.c: 82:         state = 0;
  1405  006B' 0196'              	clrf	BeepsStateMachine@state
  1406  006C'                    l1512:
  1407                           
  1408                           ;sounds.c: 83:         prmFlags.alarmState = 0;
  1409  006C' 1219'              	bcf	_prmFlags,4	;volatile
  1410  006D' 2885'              	goto	l57
  1411  006E'                    l1516:
  1412  006E' 1283               	bcf	3,5	;RP0=0, select bank0
  1413  006F' 0816'              	movf	BeepsStateMachine@state,w
  1414  0070' 0086               	movwf	btemp+6
  1415  0071' 0187               	clrf	btemp+7
  1416                           
  1417                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1418                           ; Switch size 1, requested type "simple"
  1419                           ; Number of cases is 1, Range of values is 0 to 0
  1420                           ; switch strategies available:
  1421                           ; Name         Instructions Cycles
  1422                           ; simple_byte            4     3 (average)
  1423                           ; direct_byte            7     6 (fixed)
  1424                           ; jumptable            260     6 (fixed)
  1425                           ;	Chosen strategy is simple_byte
  1426  0072' 0801'              	movf	wtemp3+1,w
  1427  0073' 3A00               	xorlw	0	; case 0
  1428  0074' 1903               	skipnz
  1429  0075' 2877'              	goto	l1592
  1430  0076' 2885'              	goto	l57
  1431  0077'                    l1592:
  1432                           
  1433                           ; Switch size 1, requested type "simple"
  1434                           ; Number of cases is 4, Range of values is 0 to 3
  1435                           ; switch strategies available:
  1436                           ; Name         Instructions Cycles
  1437                           ; direct_byte           10     6 (fixed)
  1438                           ; simple_byte           13     7 (average)
  1439                           ; jumptable            260     6 (fixed)
  1440                           ;	Chosen strategy is simple_byte
  1441  0077' 0800'              	movf	wtemp3,w
  1442  0078' 3A00               	xorlw	0	; case 0
  1443  0079' 1903               	skipnz
  1444  007A' 2801'              	goto	l1474
  1445  007B' 3A01               	xorlw	1	; case 1
  1446  007C' 1903               	skipnz
  1447  007D' 2834'              	goto	l1488
  1448  007E' 3A03               	xorlw	3	; case 2
  1449  007F' 1903               	skipnz
  1450  0080' 2844'              	goto	l1496
  1451  0081' 3A01               	xorlw	1	; case 3
  1452  0082' 1903               	skipnz
  1453  0083' 285E'              	goto	l1508
  1454  0084' 2885'              	goto	l57
  1455  0085'                    l57:
  1456  0085' 0008               	return
  1457  0086'                    __end_of_BeepsStateMachine:
  1458                           
  1459                           	psect	text6
  1460  0000'                    __ptext6:	
  1461 ;; *************** function ___bmul *****************
  1462 ;; Defined at:
  1463 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  multiplier      1    wreg     unsigned char 
  1466 ;;  multiplicand    1    2[BANK0 ] unsigned char 
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  multiplier      1    4[BANK0 ] unsigned char 
  1469 ;;  product         1    3[BANK0 ] unsigned char 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      unsigned char 
  1472 ;; Registers used:
  1473 ;;		wreg, status,2, status,0, btemp+7
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:      BANK0
  1479 ;;      Params:         1
  1480 ;;      Locals:         2
  1481 ;;      Temps:          0
  1482 ;;      Totals:         3
  1483 ;;Total ram usage:        3 bytes
  1484 ;; Hardware stack levels used: 1
  1485 ;; Hardware stack levels required when called: 1
  1486 ;; This function calls:
  1487 ;;		Nothing
  1488 ;; This function is called by:
  1489 ;;		_EnqueueBeeps
  1490 ;;		_BeepsStateMachine
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494  0000'                    ___bmul:	
  1495                           ;psect for function ___bmul
  1496                           
  1497                           
  1498                           ;incstack = 0
  1499                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+7]
  1500                           ;___bmul@multiplier stored from wreg
  1501  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1502  0001' 0084'              	movwf	___bmul@multiplier
  1503  0002'                    l1210:
  1504  0002' 0183'              	clrf	___bmul@product
  1505  0003'                    l1212:
  1506  0003' 1C04'              	btfss	___bmul@multiplier,0
  1507  0004' 2806'              	goto	u351
  1508  0005' 2807'              	goto	u350
  1509  0006'                    u351:
  1510  0006' 280B'              	goto	l1216
  1511  0007'                    u350:
  1512  0007'                    l1214:
  1513  0007' 0802'              	movf	___bmul@multiplicand,w
  1514  0008' 0087               	movwf	btemp+7
  1515  0009' 0807               	movf	btemp+7,w
  1516  000A' 0783'              	addwf	___bmul@product,f
  1517  000B'                    l1216:
  1518  000B' 1003               	clrc
  1519  000C' 0D82'              	rlf	___bmul@multiplicand,f
  1520  000D'                    l1218:
  1521  000D' 1003               	clrc
  1522  000E' 0C84'              	rrf	___bmul@multiplier,f
  1523  000F'                    l1220:
  1524  000F' 0804'              	movf	___bmul@multiplier,w
  1525  0010' 1D03               	btfss	3,2
  1526  0011' 2813'              	goto	u361
  1527  0012' 2814'              	goto	u360
  1528  0013'                    u361:
  1529  0013' 2803'              	goto	l1212
  1530  0014'                    u360:
  1531  0014'                    l1222:
  1532  0014' 0803'              	movf	___bmul@product,w
  1533  0015'                    l322:
  1534  0015' 0008               	return
  1535  0016'                    __end_of___bmul:
  1536                           
  1537                           	psect	text7
  1538  0000'                    __ptext7:	
  1539 ;; *************** function ___awmod *****************
  1540 ;; Defined at:
  1541 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  divisor         2    2[BANK0 ] int 
  1544 ;;  dividend        2    4[BANK0 ] int 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  sign            1    7[BANK0 ] unsigned char 
  1547 ;;  counter         1    6[BANK0 ] unsigned char 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  2    2[BANK0 ] int 
  1550 ;; Registers used:
  1551 ;;		wreg, status,2, status,0, btemp+7
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:      BANK0
  1557 ;;      Params:         4
  1558 ;;      Locals:         2
  1559 ;;      Temps:          0
  1560 ;;      Totals:         6
  1561 ;;Total ram usage:        6 bytes
  1562 ;; Hardware stack levels used: 1
  1563 ;; Hardware stack levels required when called: 1
  1564 ;; This function calls:
  1565 ;;		Nothing
  1566 ;; This function is called by:
  1567 ;;		_EnqueueBeeps
  1568 ;;		_BeepsStateMachine
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572  0000'                    ___awmod:	
  1573                           ;psect for function ___awmod
  1574                           
  1575  0000'                    l1226:	
  1576                           ;incstack = 0
  1577                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+7]
  1578                           
  1579  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1580  0001' 0187'              	clrf	___awmod@sign
  1581  0002'                    l1228:
  1582  0002' 1F85'              	btfss	___awmod@dividend+1,7
  1583  0003' 2805'              	goto	u371
  1584  0004' 2806'              	goto	u370
  1585  0005'                    u371:
  1586  0005' 280D'              	goto	l1234
  1587  0006'                    u370:
  1588  0006'                    l1230:
  1589  0006' 0984'              	comf	___awmod@dividend,f
  1590  0007' 0985'              	comf	___awmod@dividend+1,f
  1591  0008' 0A84'              	incf	___awmod@dividend,f
  1592  0009' 1903               	skipnz
  1593  000A' 0A85'              	incf	___awmod@dividend+1,f
  1594  000B'                    l1232:
  1595  000B' 0187'              	clrf	___awmod@sign
  1596  000C' 0A87'              	incf	___awmod@sign,f
  1597  000D'                    l1234:
  1598  000D' 1F83'              	btfss	___awmod@divisor+1,7
  1599  000E' 2810'              	goto	u381
  1600  000F' 2811'              	goto	u380
  1601  0010'                    u381:
  1602  0010' 2816'              	goto	l1238
  1603  0011'                    u380:
  1604  0011'                    l1236:
  1605  0011' 0982'              	comf	___awmod@divisor,f
  1606  0012' 0983'              	comf	___awmod@divisor+1,f
  1607  0013' 0A82'              	incf	___awmod@divisor,f
  1608  0014' 1903               	skipnz
  1609  0015' 0A83'              	incf	___awmod@divisor+1,f
  1610  0016'                    l1238:
  1611  0016' 0802'              	movf	___awmod@divisor,w
  1612  0017' 0403'              	iorwf	___awmod@divisor+1,w
  1613  0018' 1903               	btfsc	3,2
  1614  0019' 281B'              	goto	u391
  1615  001A' 281C'              	goto	u390
  1616  001B'                    u391:
  1617  001B' 284B'              	goto	l1256
  1618  001C'                    u390:
  1619  001C'                    l1240:
  1620  001C' 0186'              	clrf	___awmod@counter
  1621  001D' 0A86'              	incf	___awmod@counter,f
  1622  001E' 282A'              	goto	l1246
  1623  001F'                    l1242:
  1624  001F' 3001               	movlw	1
  1625  0020'                    u405:
  1626  0020' 1003               	clrc
  1627  0021' 0D82'              	rlf	___awmod@divisor,f
  1628  0022' 0D83'              	rlf	___awmod@divisor+1,f
  1629  0023' 3EFF               	addlw	-1
  1630  0024' 1D03               	skipz
  1631  0025' 2820'              	goto	u405
  1632  0026'                    l1244:
  1633  0026' 3001               	movlw	1
  1634  0027' 0087               	movwf	btemp+7
  1635  0028' 0807               	movf	btemp+7,w
  1636  0029' 0786'              	addwf	___awmod@counter,f
  1637  002A'                    l1246:
  1638  002A' 1F83'              	btfss	___awmod@divisor+1,7
  1639  002B' 282D'              	goto	u411
  1640  002C' 282E'              	goto	u410
  1641  002D'                    u411:
  1642  002D' 281F'              	goto	l1242
  1643  002E'                    u410:
  1644  002E'                    l1248:
  1645  002E' 0803'              	movf	___awmod@divisor+1,w
  1646  002F' 0205'              	subwf	___awmod@dividend+1,w
  1647  0030' 1D03               	skipz
  1648  0031' 2834'              	goto	u425
  1649  0032' 0802'              	movf	___awmod@divisor,w
  1650  0033' 0204'              	subwf	___awmod@dividend,w
  1651  0034'                    u425:
  1652  0034' 1C03               	skipc
  1653  0035' 2837'              	goto	u421
  1654  0036' 2838'              	goto	u420
  1655  0037'                    u421:
  1656  0037' 283E'              	goto	l1252
  1657  0038'                    u420:
  1658  0038'                    l1250:
  1659  0038' 0802'              	movf	___awmod@divisor,w
  1660  0039' 0284'              	subwf	___awmod@dividend,f
  1661  003A' 0803'              	movf	___awmod@divisor+1,w
  1662  003B' 1C03               	skipc
  1663  003C' 0385'              	decf	___awmod@dividend+1,f
  1664  003D' 0285'              	subwf	___awmod@dividend+1,f
  1665  003E'                    l1252:
  1666  003E' 3001               	movlw	1
  1667  003F'                    u435:
  1668  003F' 1003               	clrc
  1669  0040' 0C83'              	rrf	___awmod@divisor+1,f
  1670  0041' 0C82'              	rrf	___awmod@divisor,f
  1671  0042' 3EFF               	addlw	-1
  1672  0043' 1D03               	skipz
  1673  0044' 283F'              	goto	u435
  1674  0045'                    l1254:
  1675  0045' 3001               	movlw	1
  1676  0046' 0286'              	subwf	___awmod@counter,f
  1677  0047' 1D03               	btfss	3,2
  1678  0048' 284A'              	goto	u441
  1679  0049' 284B'              	goto	u440
  1680  004A'                    u441:
  1681  004A' 282E'              	goto	l1248
  1682  004B'                    u440:
  1683  004B'                    l1256:
  1684  004B' 0807'              	movf	___awmod@sign,w
  1685  004C' 1903               	btfsc	3,2
  1686  004D' 284F'              	goto	u451
  1687  004E' 2850'              	goto	u450
  1688  004F'                    u451:
  1689  004F' 2855'              	goto	l1260
  1690  0050'                    u450:
  1691  0050'                    l1258:
  1692  0050' 0984'              	comf	___awmod@dividend,f
  1693  0051' 0985'              	comf	___awmod@dividend+1,f
  1694  0052' 0A84'              	incf	___awmod@dividend,f
  1695  0053' 1903               	skipnz
  1696  0054' 0A85'              	incf	___awmod@dividend+1,f
  1697  0055'                    l1260:
  1698  0055' 0805'              	movf	___awmod@dividend+1,w
  1699  0056' 0083'              	movwf	?___awmod+1
  1700  0057' 0804'              	movf	___awmod@dividend,w
  1701  0058' 0082'              	movwf	?___awmod
  1702  0059'                    l462:
  1703  0059' 0008               	return
  1704  005A'                    __end_of___awmod:
  1705                           
  1706                           	psect	text8
  1707  0000'                    __ptext8:	
  1708 ;; *************** function _ADCProcessing *****************
  1709 ;; Defined at:
  1710 ;;		line 48 in file "interrupt.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;		None
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;  adcValue        2    3[BANK0 ] unsigned int 
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  1    wreg      void 
  1717 ;; Registers used:
  1718 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+6, btemp+7, pclath, cstack
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:      BANK0
  1724 ;;      Params:         0
  1725 ;;      Locals:         2
  1726 ;;      Temps:          0
  1727 ;;      Totals:         2
  1728 ;;Total ram usage:        2 bytes
  1729 ;; Hardware stack levels used: 1
  1730 ;; Hardware stack levels required when called: 2
  1731 ;; This function calls:
  1732 ;;		_MuxTemp
  1733 ;;		_MuxVoltage
  1734 ;; This function is called by:
  1735 ;;		_main
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739  0000'                    _ADCProcessing:	
  1740                           ;psect for function _ADCProcessing
  1741                           
  1742  0000'                    l1338:	
  1743                           ;incstack = 0
  1744                           ; Regs used in _ADCProcessing: [wreg-fsr0h+status,2+status,0+btemp+6+btemp+7+pclath+csta
      +                          ck]
  1745                           
  1746  0000'                    l1340:
  1747                           
  1748                           ;interrupt.c: 51:     static uint8_t adcState = 0;;interrupt.c: 53:     if (ADIF == 1){
  1749  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1750  0001' 1F0C               	btfss	12,6	;volatile
  1751  0002' 2804'              	goto	u471
  1752  0003' 2805'              	goto	u470
  1753  0004'                    u471:
  1754  0004' 28AE'              	goto	l210
  1755  0005'                    u470:
  1756  0005'                    l1342:
  1757                           
  1758                           ;interrupt.c: 54:      adcValue = (uint16_t) ((ADRESH << 8) + ADRESL);
  1759  0005' 081E               	movf	30,w	;volatile
  1760  0006' 0084'              	movwf	ADCProcessing@adcValue+1
  1761  0007' 1683               	bsf	3,5	;RP0=1, select bank1
  1762  0008' 081E               	movf	30,w	;volatile
  1763  0009' 1283               	bcf	3,5	;RP0=0, select bank0
  1764  000A' 0083'              	movwf	ADCProcessing@adcValue
  1765                           
  1766                           ;interrupt.c: 56:      switch (adcState){
  1767  000B' 289E'              	goto	l1398
  1768  000C'                    l1344:
  1769                           
  1770                           ;interrupt.c: 59:    if ((adcValue > 96) && (adcValue < 148)){
  1771  000C' 3000               	movlw	0
  1772  000D' 0204'              	subwf	ADCProcessing@adcValue+1,w
  1773  000E' 3061               	movlw	97
  1774  000F' 1903               	skipnz
  1775  0010' 0203'              	subwf	ADCProcessing@adcValue,w
  1776  0011' 1C03               	skipc
  1777  0012' 2814'              	goto	u481
  1778  0013' 2815'              	goto	u480
  1779  0014'                    u481:
  1780  0014' 2828'              	goto	l1352
  1781  0015'                    u480:
  1782  0015'                    l1346:
  1783  0015' 3000               	movlw	0
  1784  0016' 0204'              	subwf	ADCProcessing@adcValue+1,w
  1785  0017' 3094               	movlw	148
  1786  0018' 1903               	skipnz
  1787  0019' 0203'              	subwf	ADCProcessing@adcValue,w
  1788  001A' 1803               	skipnc
  1789  001B' 281D'              	goto	u491
  1790  001C' 281E'              	goto	u490
  1791  001D'                    u491:
  1792  001D' 2828'              	goto	l1352
  1793  001E'                    u490:
  1794  001E'                    l1348:
  1795                           
  1796                           ;interrupt.c: 60:       if(prmFlags.errorHighTemperature == 0) GP5 = 0;
  1797  001E' 1999'              	btfsc	_prmFlags,3	;volatile
  1798  001F' 2821'              	goto	u501
  1799  0020' 2822'              	goto	u500
  1800  0021'                    u501:
  1801  0021' 2824'              	goto	l190
  1802  0022'                    u500:
  1803  0022'                    l1350:
  1804  0022' 1285               	bcf	5,5	;volatile
  1805  0023' 2825'              	goto	l191
  1806  0024'                    l190:	
  1807                           ;interrupt.c: 61:        else GP5 = 1;
  1808                           
  1809  0024' 1685               	bsf	5,5	;volatile
  1810  0025'                    l191:
  1811                           
  1812                           ;interrupt.c: 62:        prmFlags.errorUnderVoltage = 0;
  1813  0025' 1099'              	bcf	_prmFlags,1	;volatile
  1814                           
  1815                           ;interrupt.c: 63:           prmFlags.errorOverVoltage = 0;
  1816  0026' 1119'              	bcf	_prmFlags,2	;volatile
  1817                           
  1818                           ;interrupt.c: 64:            }
  1819  0027' 283F'              	goto	l1360
  1820  0028'                    l1352:
  1821  0028' 3000               	movlw	0
  1822  0029' 0204'              	subwf	ADCProcessing@adcValue+1,w
  1823  002A' 3061               	movlw	97
  1824  002B' 1903               	skipnz
  1825  002C' 0203'              	subwf	ADCProcessing@adcValue,w
  1826  002D' 1803               	skipnc
  1827  002E' 2830'              	goto	u511
  1828  002F' 2831'              	goto	u510
  1829  0030'                    u511:
  1830  0030' 2834'              	goto	l1356
  1831  0031'                    u510:
  1832  0031'                    l1354:
  1833                           
  1834                           ;interrupt.c: 66:           GP5 = 1;
  1835  0031' 1685               	bsf	5,5	;volatile
  1836                           
  1837                           ;interrupt.c: 67:        prmFlags.errorUnderVoltage = 1;
  1838  0032' 1499'              	bsf	_prmFlags,1	;volatile
  1839                           
  1840                           ;interrupt.c: 68:   }
  1841  0033' 283F'              	goto	l1360
  1842  0034'                    l1356:
  1843  0034' 3000               	movlw	0
  1844  0035' 0204'              	subwf	ADCProcessing@adcValue+1,w
  1845  0036' 3094               	movlw	148
  1846  0037' 1903               	skipnz
  1847  0038' 0203'              	subwf	ADCProcessing@adcValue,w
  1848  0039' 1C03               	skipc
  1849  003A' 283C'              	goto	u521
  1850  003B' 283D'              	goto	u520
  1851  003C'                    u521:
  1852  003C' 283F'              	goto	l1360
  1853  003D'                    u520:
  1854  003D'                    l1358:
  1855                           
  1856                           ;interrupt.c: 72:        GP5 = 1;
  1857  003D' 1685               	bsf	5,5	;volatile
  1858                           
  1859                           ;interrupt.c: 73:     prmFlags.errorOverVoltage = 1;
  1860  003E' 1519'              	bsf	_prmFlags,2	;volatile
  1861  003F'                    l1360:
  1862                           
  1863                           ;interrupt.c: 76:       MuxTemp();
  1864  003F' 2000'              	fcall	_MuxTemp
  1865  0040'                    l1362:
  1866                           
  1867                           ;interrupt.c: 77:    adcState = 1;
  1868  0040' 1283               	bcf	3,5	;RP0=0, select bank0
  1869  0041' 0193'              	clrf	ADCProcessing@adcState
  1870  0042' 0A93'              	incf	ADCProcessing@adcState,f
  1871                           
  1872                           ;interrupt.c: 78:       break;
  1873  0043' 28AE'              	goto	l210
  1874  0044'                    l1364:
  1875                           
  1876                           ;interrupt.c: 83:       if (adcValue < 200){
  1877  0044' 3000               	movlw	0
  1878  0045' 0204'              	subwf	ADCProcessing@adcValue+1,w
  1879  0046' 30C8               	movlw	200
  1880  0047' 1903               	skipnz
  1881  0048' 0203'              	subwf	ADCProcessing@adcValue,w
  1882  0049' 1803               	skipnc
  1883  004A' 284C'              	goto	u531
  1884  004B' 284D'              	goto	u530
  1885  004C'                    u531:
  1886  004C' 2850'              	goto	l1368
  1887  004D'                    u530:
  1888  004D'                    l1366:
  1889                           
  1890                           ;interrupt.c: 84:         GP5 = 1;
  1891  004D' 1685               	bsf	5,5	;volatile
  1892                           
  1893                           ;interrupt.c: 86:              prmFlags.errorHighTemperature = 0;
  1894  004E' 1199'              	bcf	_prmFlags,3	;volatile
  1895                           
  1896                           ;interrupt.c: 87:     }
  1897  004F' 289A'              	goto	l1392
  1898  0050'                    l1368:
  1899  0050' 3000               	movlw	0
  1900  0051' 0204'              	subwf	ADCProcessing@adcValue+1,w
  1901  0052' 30C9               	movlw	201
  1902  0053' 1903               	skipnz
  1903  0054' 0203'              	subwf	ADCProcessing@adcValue,w
  1904  0055' 1C03               	skipc
  1905  0056' 2858'              	goto	u541
  1906  0057' 2859'              	goto	u540
  1907  0058'                    u541:
  1908  0058' 286F'              	goto	l1378
  1909  0059'                    u540:
  1910  0059'                    l1370:
  1911  0059' 3003               	movlw	3
  1912  005A' 0204'              	subwf	ADCProcessing@adcValue+1,w
  1913  005B' 30A2               	movlw	162
  1914  005C' 1903               	skipnz
  1915  005D' 0203'              	subwf	ADCProcessing@adcValue,w
  1916  005E' 1803               	skipnc
  1917  005F' 2861'              	goto	u551
  1918  0060' 2862'              	goto	u550
  1919  0061'                    u551:
  1920  0061' 286F'              	goto	l1378
  1921  0062'                    u550:
  1922  0062'                    l1372:
  1923                           
  1924                           ;interrupt.c: 90:               if((prmFlags.errorUnderVoltage == 0) && (prmFlags.errorO
      +                          verVoltage == 0)) GP5 = 0;
  1925  0062' 1899'              	btfsc	_prmFlags,1	;volatile
  1926  0063' 2865'              	goto	u561
  1927  0064' 2866'              	goto	u560
  1928  0065'                    u561:
  1929  0065' 286C'              	goto	l201
  1930  0066'                    u560:
  1931  0066'                    l1374:
  1932  0066' 1919'              	btfsc	_prmFlags,2	;volatile
  1933  0067' 2869'              	goto	u571
  1934  0068' 286A'              	goto	u570
  1935  0069'                    u571:
  1936  0069' 286C'              	goto	l201
  1937  006A'                    u570:
  1938  006A'                    l1376:
  1939  006A' 1285               	bcf	5,5	;volatile
  1940  006B' 286D'              	goto	l202
  1941  006C'                    l201:	
  1942                           ;interrupt.c: 91:           else GP5 = 1;
  1943                           
  1944  006C' 1685               	bsf	5,5	;volatile
  1945  006D'                    l202:
  1946                           
  1947                           ;interrupt.c: 93:        prmFlags.errorHighTemperature = 0;
  1948  006D' 1199'              	bcf	_prmFlags,3	;volatile
  1949                           
  1950                           ;interrupt.c: 94:                        }
  1951  006E' 289A'              	goto	l1392
  1952  006F'                    l1378:
  1953  006F' 3003               	movlw	3
  1954  0070' 0204'              	subwf	ADCProcessing@adcValue+1,w
  1955  0071' 30A3               	movlw	163
  1956  0072' 1903               	skipnz
  1957  0073' 0203'              	subwf	ADCProcessing@adcValue,w
  1958  0074' 1C03               	skipc
  1959  0075' 2877'              	goto	u581
  1960  0076' 2878'              	goto	u580
  1961  0077'                    u581:
  1962  0077' 288E'              	goto	l1388
  1963  0078'                    u580:
  1964  0078'                    l1380:
  1965  0078' 3003               	movlw	3
  1966  0079' 0204'              	subwf	ADCProcessing@adcValue+1,w
  1967  007A' 30CA               	movlw	202
  1968  007B' 1903               	skipnz
  1969  007C' 0203'              	subwf	ADCProcessing@adcValue,w
  1970  007D' 1803               	skipnc
  1971  007E' 2880'              	goto	u591
  1972  007F' 2881'              	goto	u590
  1973  0080'                    u591:
  1974  0080' 288E'              	goto	l1388
  1975  0081'                    u590:
  1976  0081'                    l1382:
  1977                           
  1978                           ;interrupt.c: 97:              if((prmFlags.errorUnderVoltage == 0) && (prmFlags.errorOv
      +                          erVoltage == 0)) GP5 = 0;
  1979  0081' 1899'              	btfsc	_prmFlags,1	;volatile
  1980  0082' 2884'              	goto	u601
  1981  0083' 2885'              	goto	u600
  1982  0084'                    u601:
  1983  0084' 288B'              	goto	l205
  1984  0085'                    u600:
  1985  0085'                    l1384:
  1986  0085' 1919'              	btfsc	_prmFlags,2	;volatile
  1987  0086' 2888'              	goto	u611
  1988  0087' 2889'              	goto	u610
  1989  0088'                    u611:
  1990  0088' 288B'              	goto	l205
  1991  0089'                    u610:
  1992  0089'                    l1386:
  1993  0089' 1285               	bcf	5,5	;volatile
  1994  008A' 288C'              	goto	l206
  1995  008B'                    l205:	
  1996                           ;interrupt.c: 98:           else GP5 = 1;
  1997                           
  1998  008B' 1685               	bsf	5,5	;volatile
  1999  008C'                    l206:
  2000                           
  2001                           ;interrupt.c: 100:        prmFlags.errorHighTemperature = 0;
  2002  008C' 1199'              	bcf	_prmFlags,3	;volatile
  2003                           
  2004                           ;interrupt.c: 101:                        }
  2005  008D' 289A'              	goto	l1392
  2006  008E'                    l1388:
  2007  008E' 3003               	movlw	3
  2008  008F' 0204'              	subwf	ADCProcessing@adcValue+1,w
  2009  0090' 30CB               	movlw	203
  2010  0091' 1903               	skipnz
  2011  0092' 0203'              	subwf	ADCProcessing@adcValue,w
  2012  0093' 1C03               	skipc
  2013  0094' 2896'              	goto	u621
  2014  0095' 2897'              	goto	u620
  2015  0096'                    u621:
  2016  0096' 289A'              	goto	l203
  2017  0097'                    u620:
  2018  0097'                    l1390:
  2019                           
  2020                           ;interrupt.c: 104:              GP5 = 1;
  2021  0097' 1685               	bsf	5,5	;volatile
  2022                           
  2023                           ;interrupt.c: 105:                 prmFlags.errorHighTemperature = 1;
  2024  0098' 1599'              	bsf	_prmFlags,3	;volatile
  2025  0099' 289A'              	goto	l1392
  2026  009A'                    l203:
  2027  009A'                    l1392:
  2028                           
  2029                           ;interrupt.c: 109:      MuxVoltage();
  2030  009A' 2000'              	fcall	_MuxVoltage
  2031  009B'                    l1394:
  2032                           
  2033                           ;interrupt.c: 110:      adcState = 0;
  2034  009B' 1283               	bcf	3,5	;RP0=0, select bank0
  2035  009C' 0193'              	clrf	ADCProcessing@adcState
  2036                           
  2037                           ;interrupt.c: 111:  break;
  2038  009D' 28AE'              	goto	l210
  2039  009E'                    l1398:
  2040  009E' 0813'              	movf	ADCProcessing@adcState,w
  2041  009F' 0086               	movwf	btemp+6
  2042  00A0' 0187               	clrf	btemp+7
  2043                           
  2044                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2045                           ; Switch size 1, requested type "simple"
  2046                           ; Number of cases is 1, Range of values is 0 to 0
  2047                           ; switch strategies available:
  2048                           ; Name         Instructions Cycles
  2049                           ; simple_byte            4     3 (average)
  2050                           ; direct_byte            7     6 (fixed)
  2051                           ; jumptable            260     6 (fixed)
  2052                           ;	Chosen strategy is simple_byte
  2053  00A1' 0801'              	movf	wtemp3+1,w
  2054  00A2' 3A00               	xorlw	0	; case 0
  2055  00A3' 1903               	skipnz
  2056  00A4' 28A6'              	goto	l1594
  2057  00A5' 28AE'              	goto	l210
  2058  00A6'                    l1594:
  2059                           
  2060                           ; Switch size 1, requested type "simple"
  2061                           ; Number of cases is 2, Range of values is 0 to 1
  2062                           ; switch strategies available:
  2063                           ; Name         Instructions Cycles
  2064                           ; simple_byte            7     4 (average)
  2065                           ; direct_byte            8     6 (fixed)
  2066                           ; jumptable            260     6 (fixed)
  2067                           ;	Chosen strategy is simple_byte
  2068  00A6' 0800'              	movf	wtemp3,w
  2069  00A7' 3A00               	xorlw	0	; case 0
  2070  00A8' 1903               	skipnz
  2071  00A9' 280C'              	goto	l1344
  2072  00AA' 3A01               	xorlw	1	; case 1
  2073  00AB' 1903               	skipnz
  2074  00AC' 2844'              	goto	l1364
  2075  00AD' 28AE'              	goto	l210
  2076  00AE'                    l210:
  2077  00AE' 0008               	return
  2078  00AF'                    __end_of_ADCProcessing:
  2079                           
  2080                           	psect	text9
  2081  0000'                    __ptext9:	
  2082 ;; *************** function _MuxVoltage *****************
  2083 ;; Defined at:
  2084 ;;		line 12 in file "interrupt.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;		None
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;		None
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      void 
  2091 ;; Registers used:
  2092 ;;		wreg, status,2
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:      BANK0
  2098 ;;      Params:         0
  2099 ;;      Locals:         0
  2100 ;;      Temps:          1
  2101 ;;      Totals:         1
  2102 ;;Total ram usage:        1 bytes
  2103 ;; Hardware stack levels used: 1
  2104 ;; Hardware stack levels required when called: 1
  2105 ;; This function calls:
  2106 ;;		Nothing
  2107 ;; This function is called by:
  2108 ;;		_Init_uC
  2109 ;;		_ADCProcessing
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113  0000'                    _MuxVoltage:	
  2114                           ;psect for function _MuxVoltage
  2115                           
  2116  0000'                    l1270:	
  2117                           ;incstack = 0
  2118                           ; Regs used in _MuxVoltage: [wreg+status,2]
  2119                           
  2120                           
  2121                           ;interrupt.c: 13:        ADCON0 = 0;
  2122  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2123  0001' 019F               	clrf	31	;volatile
  2124  0002'                    l1272:
  2125                           
  2126                           ;interrupt.c: 14:        ADON = 1;
  2127  0002' 141F               	bsf	31,0	;volatile
  2128  0003'                    l1274:
  2129                           
  2130                           ;interrupt.c: 15:        ADFM = 1;
  2131  0003' 179F               	bsf	31,7	;volatile
  2132  0004'                    l1276:
  2133                           
  2134                           ;interrupt.c: 16:        CHS1 = 0;
  2135  0004' 119F               	bcf	31,3	;volatile
  2136  0005'                    l1278:
  2137                           
  2138                           ;interrupt.c: 17:        CHS0 = 1;
  2139  0005' 151F               	bsf	31,2	;volatile
  2140  0006'                    l1280:
  2141                           
  2142                           ;interrupt.c: 18:        ADIF = 0;
  2143  0006' 130C               	bcf	12,6	;volatile
  2144  0007'                    l1282:
  2145                           
  2146                           ;interrupt.c: 19:        _delay((unsigned long)((50)*(4000000/4000000.0)));
  2147  0007' 3010               	movlw	16
  2148  0008' 0082'              	movwf	??_MuxVoltage
  2149  0009'                    u817:
  2150  0009' 0B82'              	decfsz	??_MuxVoltage,f
  2151  000A' 2809'              	goto	u817
  2152  000B' 0000               	nop
  2153  000C'                    l1284:
  2154                           
  2155                           ;interrupt.c: 20:        GO = 1;
  2156  000C' 1283               	bcf	3,5	;RP0=0, select bank0
  2157  000D' 149F               	bsf	31,1	;volatile
  2158  000E'                    l172:
  2159  000E' 0008               	return
  2160  000F'                    __end_of_MuxVoltage:
  2161                           
  2162                           	psect	text10
  2163  0000'                    __ptext10:	
  2164 ;; *************** function _MuxTemp *****************
  2165 ;; Defined at:
  2166 ;;		line 24 in file "interrupt.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;		None
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;		None
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg, status,2
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:      BANK0
  2180 ;;      Params:         0
  2181 ;;      Locals:         0
  2182 ;;      Temps:          1
  2183 ;;      Totals:         1
  2184 ;;Total ram usage:        1 bytes
  2185 ;; Hardware stack levels used: 1
  2186 ;; Hardware stack levels required when called: 1
  2187 ;; This function calls:
  2188 ;;		Nothing
  2189 ;; This function is called by:
  2190 ;;		_ADCProcessing
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194  0000'                    _MuxTemp:	
  2195                           ;psect for function _MuxTemp
  2196                           
  2197  0000'                    l1286:	
  2198                           ;incstack = 0
  2199                           ; Regs used in _MuxTemp: [wreg+status,2]
  2200                           
  2201                           
  2202                           ;interrupt.c: 25:        ADCON0 = 0;
  2203  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2204  0001' 019F               	clrf	31	;volatile
  2205  0002'                    l1288:
  2206                           
  2207                           ;interrupt.c: 26:        ADON = 1;
  2208  0002' 141F               	bsf	31,0	;volatile
  2209  0003'                    l1290:
  2210                           
  2211                           ;interrupt.c: 27:        ADFM = 1;
  2212  0003' 179F               	bsf	31,7	;volatile
  2213  0004'                    l1292:
  2214                           
  2215                           ;interrupt.c: 28:        CHS1 = 0;
  2216  0004' 119F               	bcf	31,3	;volatile
  2217  0005'                    l1294:
  2218                           
  2219                           ;interrupt.c: 29:        CHS0 = 0;
  2220  0005' 111F               	bcf	31,2	;volatile
  2221  0006'                    l1296:
  2222                           
  2223                           ;interrupt.c: 30:        ADIF = 0;
  2224  0006' 130C               	bcf	12,6	;volatile
  2225  0007'                    l1298:
  2226                           
  2227                           ;interrupt.c: 31:        _delay((unsigned long)((50)*(4000000/4000000.0)));
  2228  0007' 3010               	movlw	16
  2229  0008' 0082'              	movwf	??_MuxTemp
  2230  0009'                    u827:
  2231  0009' 0B82'              	decfsz	??_MuxTemp,f
  2232  000A' 2809'              	goto	u827
  2233  000B' 0000               	nop
  2234  000C'                    l1300:
  2235                           
  2236                           ;interrupt.c: 32:        GO = 1;
  2237  000C' 1283               	bcf	3,5	;RP0=0, select bank0
  2238  000D' 149F               	bsf	31,1	;volatile
  2239  000E'                    l175:
  2240  000E' 0008               	return
  2241  000F'                    __end_of_MuxTemp:
  2242                           
  2243                           	psect	text11
  2244  0000'                    __ptext11:	
  2245 ;; *************** function _ISR *****************
  2246 ;; Defined at:
  2247 ;;		line 35 in file "interrupt.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;		None
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;		None
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  1    wreg      void 
  2254 ;; Registers used:
  2255 ;;		wreg
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:      BANK0
  2261 ;;      Params:         0
  2262 ;;      Locals:         0
  2263 ;;      Temps:          2
  2264 ;;      Totals:         2
  2265 ;;Total ram usage:        2 bytes
  2266 ;; Hardware stack levels used: 1
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		Interrupt level 1
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274  0000'                    _ISR:	
  2275                           ;psect for function _ISR
  2276                           
  2277  0000'                    i1l1132:
  2278                           
  2279                           ;interrupt.c: 38:     if (TMR0IF == 1){
  2280  0000' 1D0B               	btfss	11,2	;volatile
  2281  0001' 2803'              	goto	u34_21
  2282  0002' 2804'              	goto	u34_20
  2283  0003'                    u34_21:
  2284  0003' 280E'              	goto	i1l181
  2285  0004'                    u34_20:
  2286  0004'                    i1l1134:
  2287                           
  2288                           ;interrupt.c: 39:             TMR0 = 5;
  2289  0004' 3005               	movlw	5
  2290  0005' 0081               	movwf	1	;volatile
  2291                           
  2292                           ;interrupt.c: 40:          ++cnt0;
  2293  0006' 3001               	movlw	1
  2294  0007' 0791'              	addwf	_cnt0,f	;volatile
  2295  0008' 1803               	skipnc
  2296  0009' 0A92'              	incf	_cnt0+1,f	;volatile
  2297  000A' 3000               	movlw	0
  2298  000B' 0792'              	addwf	_cnt0+1,f	;volatile
  2299  000C'                    i1l1136:
  2300                           
  2301                           ;interrupt.c: 41:          TMR0IF = 0;
  2302  000C' 110B               	bcf	11,2	;volatile
  2303  000D'                    i1l1138:
  2304                           
  2305                           ;interrupt.c: 42:             TMR0IE = 1;
  2306  000D' 168B               	bsf	11,5	;volatile
  2307  000E'                    i1l181:
  2308  000E' 0801'              	movf	??_ISR+1,w
  2309  000F' 008A               	movwf	10
  2310  0010' 0E00'              	swapf	??_ISR,w
  2311  0011' 0083               	movwf	3
  2312  0012' 0E80               	swapf	btemp,f
  2313  0013' 0E00               	swapf	btemp,w
  2314  0014' 0009               	retfie
  2315  0015'                    __end_of_ISR:
  2316  0000                     btemp	set	0	;btemp
  2317                           
  2318                           	psect	intentry
  2319  0000'                    __pintentry:	
  2320                           ;incstack = 0
  2321                           ; Regs used in _ISR: [wreg]
  2322                           
  2323  0000'                    interrupt_function:
  2324  0000                     saved_w	set	btemp
  2325  0000' 0080               	movwf	btemp
  2326  0001' 0E03               	swapf	3,w
  2327  0002' 1283               	bcf	3,5	;RP0=0, select bank0
  2328  0003' 0080'              	movwf	??_ISR
  2329  0004' 080A               	movf	10,w
  2330  0005' 0081'              	movwf	??_ISR+1
  2331  0006' 2800'              	ljmp	_ISR
  2332                           
  2333                           	psect	idloc
  2334                           
  2335                           ;Config register IDLOC0 @ 0x2000
  2336                           ;	unspecified, using default values
  2337  2000                     	org	8192
  2338  2000  3FFF               	dw	16383
  2339                           
  2340                           ;Config register IDLOC1 @ 0x2001
  2341                           ;	unspecified, using default values
  2342  2001                     	org	8193
  2343  2001  3FFF               	dw	16383
  2344                           
  2345                           ;Config register IDLOC2 @ 0x2002
  2346                           ;	unspecified, using default values
  2347  2002                     	org	8194
  2348  2002  3FFF               	dw	16383
  2349                           
  2350                           ;Config register IDLOC3 @ 0x2003
  2351                           ;	unspecified, using default values
  2352  2003                     	org	8195
  2353  2003  3FFF               	dw	16383
  2354                           
  2355                           	psect	config
  2356                           
  2357                           ;Config register CONFIG @ 0x2007
  2358                           ;	Oscillator Selection bits
  2359                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  2360                           ;	Watchdog Timer Enable bit
  2361                           ;	WDTE = OFF, WDT disabled
  2362                           ;	Power-Up Timer Enable bit
  2363                           ;	PWRTE = OFF, PWRT disabled
  2364                           ;	GP3/MCLR pin function select
  2365                           ;	MCLRE = ON, GP3/MCLR pin function is MCLR
  2366                           ;	Brown-out Detect Enable bit
  2367                           ;	BOREN = ON, BOD enabled
  2368                           ;	Code Protection bit
  2369                           ;	CP = OFF, Program Memory code protection is disabled
  2370                           ;	Data Code Protection bit
  2371                           ;	CPD = OFF, Data memory code protection is disabled
  2372  2007                     	org	8199
  2373  2007  31F4               	dw	12788

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    BANK0            52     16      42

Pointer List with Targets:

    None.

Critical Paths under _main in BANK0

    _main->_playAlert
    _playAlert->_EnqueueBeeps
    _EnqueueBeeps->___awmod
    _Init_uC->_MuxVoltage
    _BeepsStateMachine->___awmod
    _ADCProcessing->_MuxTemp
    _ADCProcessing->_MuxVoltage

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3028
                      _ADCProcessing
                  _BeepsStateMachine
                         _InitTimer0
                            _Init_uC
                          _playAlert
 ---------------------------------------------------------------------------------
 (1) _playAlert                                            5     5      0    1858
                                             11 BANK0      5     5      0
                       _EnqueueBeeps
 ---------------------------------------------------------------------------------
 (2) _EnqueueBeeps                                         3     0      3    1600
                                              8 BANK0      3     0      3
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _Init_uC                                              0     0      0       0
                         _MuxVoltage
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BeepsStateMachine                                    0     0      0     948
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     196
                                              2 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     752
                                              2 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _ADCProcessing                                        2     2      0     222
                                              3 BANK0      2     2      0
                            _MuxTemp
                         _MuxVoltage
 ---------------------------------------------------------------------------------
 (2) _MuxVoltage                                           1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _MuxTemp                                              1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCProcessing
     _MuxTemp
     _MuxVoltage
   _BeepsStateMachine
     ___awmod
     ___bmul
   _InitTimer0
   _Init_uC
     _MuxVoltage
   _playAlert
     _EnqueueBeeps
       ___awmod
       ___bmul

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
STACK                0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITBANK0            34      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BANK0               34     10      2A       2       80.8%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
ABS                  0      0      2A       3        0.0%
DATA                 0      0      2A       4        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Sep 03 09:19:48 2025

                           ___bmul@product 0003                                         l34 003B  
                                       l70 0022                                         l63 0004  
                                       l57 0085                                         l73 0030  
                                       l67 0013                                         l87 00B1  
                                       _GO 00F9                                         fsr 0004  
                                      l201 006C                                        l202 006D  
                                      l210 00AE                                        l203 009A  
                                      l205 008B                                        l206 008C  
                                      l134 0007                                        l137 001F  
                                      l322 0015                                        l172 000E  
                                      l190 0024                                        l175 000E  
                                      l191 0025                                        l462 0059  
                                      l900 0006                                        l894 0000  
                                      _GP2 002A                                        l896 0003  
                                      _GP4 002C                                        _GP5 002D  
                                      l898 0005                                        _GIE 005F  
                                      u410 002E                                        u411 002D  
                                      u500 0022                                        u420 0038  
                                      u501 0021                                        u421 0037  
                                      u405 0020                                        u510 0031  
                                      u350 0007                                        u511 0030  
                                      u351 0006                                        u600 0085  
                                      u520 003D                                        u440 004B  
                                      u360 0014                                        u601 0084  
                                      u521 003C                                        u441 004A  
                                      u425 0034                                        u361 0013  
                                      u610 0089                                        u530 004D  
                                      u450 0050                                        u370 0006  
                                      u611 0088                                        u531 004C  
                                      u451 004F                                        u435 003F  
                                      u371 0005                                        u620 0097  
                                      u540 0059                                        u380 0011  
                                      u460 0015                                        u700 003B  
                                      _ISR 0000                                        u621 0096  
                                      u541 0058                                        u381 0010  
                                      u461 0014                                        u701 003A  
                                      u550 0062                                        u470 0005  
                                      u390 001C                                        u710 0067  
                                      u630 0008                                        u551 0061  
                                      u471 0004                                        u391 001B  
                                      u711 0066                                        u631 0007  
                                      u560 0066                                        u480 0015  
                                      u800 0067                                        u720 0080  
                                      u640 0010                                        u561 0065  
                                      u481 0014                                        u801 0066  
                                      u721 007F                                        u641 000F  
                                      u570 006A                                        u490 001E  
                                      u730 0098                                        u650 0017  
                                      u571 0069                                        u491 001D  
                                      u731 0097                                        u651 0016  
                                      u580 0078                                        u740 00B1  
                                      u660 001F                                        u581 0077  
                                      u741 00B0                                        u661 001E  
                                      u590 0081                                        u750 0007  
                                      u670 0026                                        u591 0080  
                                      u751 0006                                        u735 0094  
                                      u671 0025                                        u760 003E  
                                      u680 002D                                        u817 0009  
                                      u761 003D                                        u681 002C  
                                      u770 004D                                        u690 0034  
                                      u827 0009                                        u771 004C  
                                      u691 0033                                        u780 0054  
                                      u781 0053                                        u765 003A  
                                      u790 005B                                        u791 005A  
                                      fsr0 0004                                        indf 0000  
                             ___awmod@sign 0007                      ADCProcessing@adcValue 0003  
                    ADCProcessing@adcState 0013                                       ?_ISR 0000  
                                     l1210 0002                                       l1300 000C  
                                     l1220 000F                                       l1212 0003  
                                     l1230 0006                                       l1222 0014  
                                     l1214 0007                                       l1310 0008  
                                     l1302 0000                                       l1240 001C  
                                     l1232 000B                                       l1216 000B  
                                     l1320 0012                                       l1312 000A  
                                     l1304 0003                                       l1250 0038  
                                     l1242 001F                                       l1234 000D  
                                     l1226 0000                                       l1218 000D  
                                     l1330 001A                                       l1322 0014  
                                     l1314 000C                                       l1306 0005  
                                     l1410 000C                                       l1340 0000  
                                     l1260 0055                                       l1252 003E  
                                     l1244 0026                                       l1236 0011  
                                     l1228 0002                                       l1500 004F  
                                     l1332 001B                                       l1324 0015  
                                     l1316 000E                                       l1308 0006  
                                     l1420 0026                                       l1412 0010  
                                     l1404 0000                                       l1270 0000  
                                     l1350 0022                                       l1342 0005  
                                     l1254 0045                                       l1246 002A  
                                     l1238 0016                                       l1510 0067  
                                     l1502 0054                                       l1334 001C  
                                     l1326 0017                                       l1318 0010  
                                     l1430 0035                                       l1422 0028  
                                     l1414 0017                                       l1406 0008  
                                     l1280 0006                                       l1272 0002  
                                     l1360 003F                                       l1352 0028  
                                     l1344 000C                                       l1248 002E  
                                     l1256 004B                                       l1512 006C  
                                     l1504 0056                                       l1336 001E  
                                     l1328 0018                                       l1264 0000  
                                     l1432 0037                                       l1424 0029  
                                     l1416 001B                                       l1408 000A  
                                     l1440 003E                                       l1290 0003  
                                     l1282 0007                                       l1274 0003  
                                     l1370 0059                                       l1362 0040  
                                     l1354 0031                                       l1346 0015  
                                     l1338 0000                                       l1258 0050  
                                     l1506 005B                                       l1266 0015  
                                     l1450 006F                                       l1434 003B  
                                     l1426 002D                                       l1418 001F  
                                     l1442 0054                                       l1522 0000  
                                     l1292 0004                                       l1284 000C  
                                     l1276 0004                                       l1380 0078  
                                     l1372 0062                                       l1364 0044  
                                     l1356 0034                                       l1348 001E  
                                     l1508 005E                                       l1516 006E  
                                     l1268 002C                                       l1460 0098  
                                     l1452 0075                                       l1444 0057  
                                     l1436 003C                                       l1428 0034  
                                     l1524 0002                                       l1294 0005  
                                     l1286 0000                                       l1278 0005  
                                     l1390 0097                                       l1382 0081  
                                     l1374 0066                                       l1366 004D  
                                     l1358 003D                                       l1462 00A0  
                                     l1446 0059                                       l1454 007A  
                                     l1526 0003                                       l1296 0006  
                                     l1288 0002                                       l1384 0085  
                                     l1376 006A                                       l1392 009A  
                                     l1368 0050                                       l1480 002D  
                                     l1472 0000                                       l1464 00A6  
                                     l1456 0080                                       l1448 0067  
                                     l1528 0004                                       l1298 0007  
                                     l1394 009B                                       l1386 0089  
                                     l1378 006F                                       l1490 003E  
                                     l1482 002E                                       l1474 0001  
                                     l1458 0082                                       l1466 00AB  
                                     l1388 008E                                       l1492 0040  
                                     l1484 0030                                       l1476 0007  
                                     l1398 009E                                       l1494 0042  
                                     l1486 0032                                       l1478 001E  
                                     l1590 0046                                       l1592 0077  
                                     l1496 0044                                       l1488 0034  
                                     l1594 00A6                                       l1498 004D  
                                     _ADIF 0066                                       _ADFM 00FF  
                                     _ADON 00F8                                       _CHS0 00FA  
                                     _CHS1 00FB                                       _GPIO 0005  
                                     _PEIE 005E                                       _VCFG 00FE  
                                     _TMR0 0001                              ?_EnqueueBeeps 0008  
                                     _cnt0 0011                                       _main 0000  
                                     btemp 0000                                       start 0000* 
                        ___bmul@multiplier 0004                            __end_of_Init_uC 0020  
                                    ??_ISR 0000                            __end_of_MuxTemp 000F  
                                    ?_main 0000                            __end_of___awmod 005A  
                                    _CMCON 0019                                      _ANSEL 009F  
                                    i1l181 000E                                      u34_20 0004  
                                    u34_21 0003                                      _VRCON 0099  
                 EnqueueBeeps@allowTimeout 000A                             ??_EnqueueBeeps 000B  
                                    pclath 000A                                      status 0003  
                                    wtemp0 0000*                                     wtemp3 0000* 
    BeepsStateMachine@stateMachineDuration 000F                            __initialization 0000  
                               _InitTimer0 0000                               __end_of_main 0007  
                                   ??_main 0010                                     _ADCON0 001F  
                                   _ADRESH 001E                                     _ADRESL 009E  
                                   i1l1132 0000                                     i1l1134 0004  
                                   i1l1136 000C                                     i1l1138 000D  
                                   _TMR0IE 005D                                     _TMR0IF 005A  
                                   _TRISIO 0085                                  ??_Init_uC 0003  
                                ??_MuxTemp 0002                                     ___bmul 0000  
                                ??___awmod 0006                                 _MuxVoltage 0000  
                          ___awmod@divisor 0002                            ___awmod@counter 0006  
                                   saved_w 0000                    __end_of__initialization 0005  
                            playAlert@i_85 000D                        ___bmul@multiplicand 0002  
                              ?_InitTimer0 0000                       __end_of_EnqueueBeeps 003C  
                               _beepsQueue 0000                                 __pbssBANK0 0000  
                            _ADCProcessing 0000                                 __pmaintext 0000  
                                  ?___bmul 0002                                 __pintentry 0000  
                              ?_MuxVoltage 0000                                    _TRISIO0 0428  
                                  _TRISIO1 0429                                    _TRISIO2 042A  
                                  _TRISIO4 042C                                    _TRISIO5 042D  
                           ?_ADCProcessing 0000             playAlert@howMuchTimesPlayShort 000F  
                                  _Init_uC 0000                                    _MuxTemp 0000  
                                  ___awmod 0000                     BeepsStateMachine@state 0016  
                                  __ptext1 0000                                    __ptext2 0000  
                                  __ptext3 0000                                    __ptext4 0000  
                                  __ptext5 0000                                    __ptext6 0000  
                                  __ptext7 0000                                    __ptext8 0000  
                                  __ptext9 0000                           ___awmod@dividend 0004  
                        __end_of_playAlert 00B2                                    clrloop0 0001  
                     end_of_initialization 0005                            ??_ADCProcessing 0003  
                             _EnqueueBeeps 0000                       EnqueueBeeps@duration 0008  
                             ??_InitTimer0 0002                             __end_of___bmul 0016  
                      start_initialization 0000                                __end_of_ISR 0015  
                       __end_of_InitTimer0 0008                                   ??___bmul 0003  
                             ??_MuxVoltage 0002                                  ___latbits 0000  
                            __pcstackBANK0 0000                         __end_of_MuxVoltage 000F  
                               playAlert@i 000C                                   ?_Init_uC 0000  
                                 ?_MuxTemp 0000                                   ?___awmod 0002  
            playAlert@howMuchTimesPlayLong 000E                          interrupt_function 0000  
                                _playAlert 0000                                  clear_ram0 0000  
                      playAlert@totalBeeps 000B                        playAlert@soundState 0014  
                                _queueHead 0018                                  _queueTail 0017  
                               ?_playAlert 0000                                   __ptext10 0000  
                                 __ptext11 0000                      __end_of_ADCProcessing 00AF  
                        _BeepsStateMachine 0000                         ?_BeepsStateMachine 0000  
                                 _prmFlags 0019                        ??_BeepsStateMachine 0008  
                __end_of_BeepsStateMachine 0086                                   intlevel1 0000* 
                              ??_playAlert 000B                                 _OPTION_REG 0081  
BeepsStateMachine@stateMachineAllowTimeout 0015  
