

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Mar 02 22:31:16 2024

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x5E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 29/04/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC12F675 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0019                     	;# 
    76  001E                     	;# 
    77  001F                     	;# 
    78  0081                     	;# 
    79  0085                     	;# 
    80  008C                     	;# 
    81  008E                     	;# 
    82  0090                     	;# 
    83  0095                     	;# 
    84  0096                     	;# 
    85  0096                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009A                     	;# 
    89  009B                     	;# 
    90  009C                     	;# 
    91  009D                     	;# 
    92  009E                     	;# 
    93  009F                     	;# 
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0019                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  008C                     	;# 
   113  008E                     	;# 
   114  0090                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0096                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0019                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  008C                     	;# 
   145  008E                     	;# 
   146  0090                     	;# 
   147  0095                     	;# 
   148  0096                     	;# 
   149  0096                     	;# 
   150  0099                     	;# 
   151  009A                     	;# 
   152  009A                     	;# 
   153  009B                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  009F                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  000A                     	;# 
   165  000B                     	;# 
   166  000C                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0019                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  008C                     	;# 
   177  008E                     	;# 
   178  0090                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0096                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0000                     	;# 
   191  0001                     	;# 
   192  0002                     	;# 
   193  0003                     	;# 
   194  0004                     	;# 
   195  0005                     	;# 
   196  000A                     	;# 
   197  000B                     	;# 
   198  000C                     	;# 
   199  000E                     	;# 
   200  000E                     	;# 
   201  000F                     	;# 
   202  0010                     	;# 
   203  0019                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  008C                     	;# 
   209  008E                     	;# 
   210  0090                     	;# 
   211  0095                     	;# 
   212  0096                     	;# 
   213  0096                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009A                     	;# 
   217  009B                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222                           
   223                           	psect	idataBANK0
   224  0253                     __pidataBANK0:
   225                           
   226                           ;initializer for _errorType
   227  0253  3401               	retlw	1
   228                           
   229                           ;initializer for _measureType
   230  0254  3401               	retlw	1
   231  0005                     _GPIO	set	5
   232  0019                     _CMCON	set	25
   233  0010                     _T1CON	set	16
   234  001F                     _ADCON0	set	31
   235  001E                     _ADRESH	set	30
   236  000E                     _TMR1L	set	14
   237  000F                     _TMR1H	set	15
   238  0001                     _TMR0	set	1
   239  005F                     _GIE	set	95
   240  005E                     _PEIE	set	94
   241  00FE                     _VCFG	set	254
   242  005D                     _TMR0IE	set	93
   243  00F9                     _GO	set	249
   244  00FA                     _CHS0	set	250
   245  00FB                     _CHS1	set	251
   246  00FF                     _ADFM	set	255
   247  00F8                     _ADON	set	248
   248  002C                     _GP4	set	44
   249  002A                     _GP2	set	42
   250  002D                     _GP5	set	45
   251  0066                     _ADIF	set	102
   252  0060                     _TMR1IF	set	96
   253  005A                     _TMR0IF	set	90
   254  009F                     _ANSEL	set	159
   255  0085                     _TRISIO	set	133
   256  0099                     _VRCON	set	153
   257  0081                     _OPTION_REG	set	129
   258  009E                     _ADRESL	set	158
   259  0429                     _TRISIO1	set	1065
   260  0428                     _TRISIO0	set	1064
   261  042C                     _TRISIO4	set	1068
   262  042D                     _TRISIO5	set	1069
   263  042A                     _TRISIO2	set	1066
   264  0460                     _TMR1IE	set	1120
   265                           
   266                           	psect	cinit
   267  000E                     start_initialization:	
   268                           ; #config settings
   269                           
   270  000E                     __initialization:
   271                           
   272                           ; Initialize objects allocated to BANK0
   273  000E  2253               	fcall	__pidataBANK0	;fetch initializer
   274  000F  00B2               	movwf	__pdataBANK0& (0+127)
   275  0010  2254               	fcall	__pidataBANK0+1	;fetch initializer
   276  0011  00B3               	movwf	(__pdataBANK0+1)& (0+127)
   277                           
   278                           ; Clear objects allocated to BANK0
   279  0012  01A0               	clrf	__pbssBANK0& (0+127)
   280  0013  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   281  0014  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   282  0015  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   283  0016  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   284  0017  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   285  0018  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   286  0019  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   287  001A  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   288  001B                     end_of_initialization:	
   289                           ;End of C runtime variable initialization code
   290                           
   291  001B                     __end_of__initialization:
   292  001B  0183               	clrf	3
   293  001C  28DB               	ljmp	_main	;jump to C main() function
   294                           
   295                           	psect	bssBANK0
   296  0020                     __pbssBANK0:
   297  0020                     _adcValue:
   298  0020                     	ds	2
   299  0022                     _cnt1:
   300  0022                     	ds	2
   301  0024                     _soundModeSwitch:
   302  0024                     	ds	1
   303  0025                     _secondMeasRes:
   304  0025                     	ds	1
   305  0026                     _firstMeasRes:
   306  0026                     	ds	1
   307  0027                     _msFlag:
   308  0027                     	ds	1
   309  0028                     _cnt0:
   310  0028                     	ds	1
   311                           
   312                           	psect	dataBANK0
   313  0032                     __pdataBANK0:
   314  0032                     _errorType:
   315  0032                     	ds	1
   316  0033                     _measureType:
   317  0033                     	ds	1
   318                           
   319                           	psect	cstackCOMMON
   320  0000                     __pcstackCOMMON:
   321  0000                     ??_InitTimer0:
   322  0000                     ??_InitTimer1:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0000                     ??_Init_uC:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0000                     ??_TwoShortOneLong:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0000                     ??_TwoShortTwoLong:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0000                     ??_ThreeShort:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0000                     ??_TimeOut:	
   338                           ; 1 bytes @ 0x0
   339                           
   340                           
   341                           	psect	cstackBANK0
   342  0029                     __pcstackBANK0:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0029                     ?_MuxTemp:
   346  0029                     ??_MuxTemp:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0029                     ?_MuxVoltage:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0029                     ?_InitTimer0:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0029                     ?_InitTimer1:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0029                     ?_Init_uC:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0029                     ?_TwoShortOneLong:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0029                     ?_TwoShortTwoLong:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0029                     ?_ThreeShort:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0029                     ?_ISR:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0029                     ?_main:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0029                     ?_ShortSound:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0029                     ?_LongSound:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0029                     ?_TimeOut:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0029                     ?i1_MuxVoltage:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0029                     ??i1_MuxVoltage:	
   389                           ; 1 bytes @ 0x0
   390                           
   391                           
   392                           ; 1 bytes @ 0x0
   393  0029                     	ds	1
   394  002A                     ??_ISR:
   395                           
   396                           ; 1 bytes @ 0x1
   397  002A                     	ds	5
   398  002F                     ??_MuxVoltage:
   399  002F                     ??_ShortSound:	
   400                           ; 1 bytes @ 0x6
   401                           
   402  002F                     ??_LongSound:	
   403                           ; 1 bytes @ 0x6
   404                           
   405                           
   406                           ; 1 bytes @ 0x6
   407  002F                     	ds	1
   408  0030                     ??_main:
   409                           
   410                           ; 1 bytes @ 0x7
   411  0030                     	ds	2
   412                           
   413                           	psect	maintext
   414  00DB                     __pmaintext:	
   415 ;;
   416 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   417 ;;
   418 ;; *************** function _main *****************
   419 ;; Defined at:
   420 ;;		line 71 in file "main.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;		None
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   429 ;; Tracked objects:
   430 ;;		On entry : B00/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMMON   BANK0
   434 ;;      Params:         0       0
   435 ;;      Locals:         0       0
   436 ;;      Temps:          0       2
   437 ;;      Totals:         0       2
   438 ;;Total ram usage:        2 bytes
   439 ;; Hardware stack levels required when called: 4
   440 ;; This function calls:
   441 ;;		_InitTimer0
   442 ;;		_InitTimer1
   443 ;;		_Init_uC
   444 ;;		_MuxVoltage
   445 ;;		_ThreeShort
   446 ;;		_TwoShortOneLong
   447 ;;		_TwoShortTwoLong
   448 ;; This function is called by:
   449 ;;		Startup code after reset
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453  00DB                     _main:	
   454                           ;psect for function _main
   455                           
   456  00DB                     l1419:	
   457                           ;incstack = 0
   458                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   459                           
   460  00DB  224B               	fcall	_InitTimer0
   461  00DC  2240               	fcall	_InitTimer1
   462  00DD  219C               	fcall	_Init_uC
   463  00DE  220E               	fcall	_MuxVoltage
   464  00DF                     l1421:
   465  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   466  00E0  0832               	movf	_errorType,w
   467  00E1  00B0               	movwf	??_main
   468  00E2  0830               	movf	??_main,w
   469  00E3  00A6               	movwf	_firstMeasRes
   470  00E4                     l1423:
   471  00E4  301E               	movlw	30
   472  00E5  0628               	xorwf	_cnt0,w
   473  00E6  1D03               	btfss	3,2
   474  00E7  28E9               	goto	u731
   475  00E8  28EA               	goto	u730
   476  00E9                     u731:
   477  00E9  28EF               	goto	l1429
   478  00EA                     u730:
   479  00EA                     l1425:
   480  00EA  0832               	movf	_errorType,w
   481  00EB  00B0               	movwf	??_main
   482  00EC  0830               	movf	??_main,w
   483  00ED  00A5               	movwf	_secondMeasRes
   484  00EE                     l1427:
   485  00EE  01A8               	clrf	_cnt0
   486  00EF                     l1429:
   487  00EF  0826               	movf	_firstMeasRes,w
   488  00F0  0625               	xorwf	_secondMeasRes,w
   489  00F1  1903               	skipnz
   490  00F2  28F4               	goto	u741
   491  00F3  28F5               	goto	u740
   492  00F4                     u741:
   493  00F4  28FE               	goto	l1441
   494  00F5                     u740:
   495  00F5                     l1431:
   496  00F5  01B2               	clrf	_errorType
   497  00F6  0AB2               	incf	_errorType,f
   498  00F7  28FE               	goto	l1441
   499  00F8                     l1433:
   500  00F8  21BD               	fcall	_TwoShortOneLong
   501  00F9  28DF               	goto	l1421
   502  00FA                     l1435:
   503  00FA  2175               	fcall	_TwoShortTwoLong
   504  00FB  28DF               	goto	l1421
   505  00FC                     l1437:
   506  00FC  21DC               	fcall	_ThreeShort
   507  00FD  28DF               	goto	l1421
   508  00FE                     l1441:
   509  00FE  0832               	movf	_errorType,w
   510  00FF  00B0               	movwf	??_main
   511  0100  01B1               	clrf	??_main+1
   512                           
   513                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   514                           ; Switch size 1, requested type "simple"
   515                           ; Number of cases is 1, Range of values is 0 to 0
   516                           ; switch strategies available:
   517                           ; Name         Instructions Cycles
   518                           ; simple_byte            4     3 (average)
   519                           ; direct_byte            7     6 (fixed)
   520                           ; jumptable            260     6 (fixed)
   521                           ;	Chosen strategy is simple_byte
   522  0101  0831               	movf	??_main+1,w
   523  0102  3A00               	xorlw	0	; case 0
   524  0103  1903               	skipnz
   525  0104  2906               	goto	l1497
   526  0105  28DF               	goto	l1421
   527  0106                     l1497:
   528                           
   529                           ; Switch size 1, requested type "simple"
   530                           ; Number of cases is 4, Range of values is 1 to 5
   531                           ; switch strategies available:
   532                           ; Name         Instructions Cycles
   533                           ; simple_byte           13     7 (average)
   534                           ; direct_byte           14     9 (fixed)
   535                           ; jumptable            263     9 (fixed)
   536                           ;	Chosen strategy is simple_byte
   537  0106  0830               	movf	??_main,w
   538  0107  3A01               	xorlw	1	; case 1
   539  0108  1903               	skipnz
   540  0109  28DF               	goto	l1421
   541  010A  3A03               	xorlw	3	; case 2
   542  010B  1903               	skipnz
   543  010C  28F8               	goto	l1433
   544  010D  3A01               	xorlw	1	; case 3
   545  010E  1903               	skipnz
   546  010F  28FA               	goto	l1435
   547  0110  3A06               	xorlw	6	; case 5
   548  0111  1903               	skipnz
   549  0112  28FC               	goto	l1437
   550  0113  28DF               	goto	l1421
   551  0114  280D               	ljmp	start
   552  0115                     __end_of_main:
   553                           
   554                           	psect	text1
   555  0175                     __ptext1:	
   556 ;; *************** function _TwoShortTwoLong *****************
   557 ;; Defined at:
   558 ;;		line 52 in file "sounds.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, status,2, status,0, pclath, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMMON   BANK0
   572 ;;      Params:         0       0
   573 ;;      Locals:         0       0
   574 ;;      Temps:          0       0
   575 ;;      Totals:         0       0
   576 ;;Total ram usage:        0 bytes
   577 ;; Hardware stack levels used: 1
   578 ;; Hardware stack levels required when called: 3
   579 ;; This function calls:
   580 ;;		_LongSound
   581 ;;		_ShortSound
   582 ;;		_TimeOut
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588  0175                     _TwoShortTwoLong:	
   589                           ;psect for function _TwoShortTwoLong
   590                           
   591  0175                     l1295:	
   592                           ;incstack = 0
   593                           ; Regs used in _TwoShortTwoLong: [wreg+status,2+status,0+pclath+cstack]
   594                           
   595                           
   596                           ;sounds.c: 54:        if (soundModeSwitch == 0){
   597  0175  1283               	bcf	3,5	;RP0=0, select bank0
   598  0176  0824               	movf	_soundModeSwitch,w	;volatile
   599  0177  1D03               	btfss	3,2
   600  0178  297A               	goto	u511
   601  0179  297B               	goto	u510
   602  017A                     u511:
   603  017A  297C               	goto	l1299
   604  017B                     u510:
   605  017B                     l1297:
   606                           
   607                           ;sounds.c: 55:           ShortSound();
   608  017B  2115               	fcall	_ShortSound
   609  017C                     l1299:
   610                           
   611                           ;sounds.c: 57:        if (soundModeSwitch == 1){
   612  017C  1283               	bcf	3,5	;RP0=0, select bank0
   613  017D  0324               	decf	_soundModeSwitch,w	;volatile
   614  017E  1D03               	btfss	3,2
   615  017F  2981               	goto	u521
   616  0180  2982               	goto	u520
   617  0181                     u521:
   618  0181  2983               	goto	l1303
   619  0182                     u520:
   620  0182                     l1301:
   621                           
   622                           ;sounds.c: 58:           ShortSound();
   623  0182  2115               	fcall	_ShortSound
   624  0183                     l1303:
   625                           
   626                           ;sounds.c: 60:        if (soundModeSwitch == 2){
   627  0183  3002               	movlw	2
   628  0184  1283               	bcf	3,5	;RP0=0, select bank0
   629  0185  0624               	xorwf	_soundModeSwitch,w	;volatile
   630  0186  1D03               	btfss	3,2
   631  0187  2989               	goto	u531
   632  0188  298A               	goto	u530
   633  0189                     u531:
   634  0189  298B               	goto	l1307
   635  018A                     u530:
   636  018A                     l1305:
   637                           
   638                           ;sounds.c: 61:           LongSound();
   639  018A  2145               	fcall	_LongSound
   640  018B                     l1307:
   641                           
   642                           ;sounds.c: 63:        if (soundModeSwitch == 3){
   643  018B  3003               	movlw	3
   644  018C  1283               	bcf	3,5	;RP0=0, select bank0
   645  018D  0624               	xorwf	_soundModeSwitch,w	;volatile
   646  018E  1D03               	btfss	3,2
   647  018F  2991               	goto	u541
   648  0190  2992               	goto	u540
   649  0191                     u541:
   650  0191  2993               	goto	l1311
   651  0192                     u540:
   652  0192                     l1309:
   653                           
   654                           ;sounds.c: 64:           LongSound();
   655  0192  2145               	fcall	_LongSound
   656  0193                     l1311:
   657                           
   658                           ;sounds.c: 66:        if (soundModeSwitch > 3) {
   659  0193  3004               	movlw	4
   660  0194  1283               	bcf	3,5	;RP0=0, select bank0
   661  0195  0224               	subwf	_soundModeSwitch,w	;volatile
   662  0196  1C03               	skipc
   663  0197  2999               	goto	u551
   664  0198  299A               	goto	u550
   665  0199                     u551:
   666  0199  299B               	goto	l163
   667  019A                     u550:
   668  019A                     l1313:
   669                           
   670                           ;sounds.c: 67:          TimeOut();
   671  019A  2230               	fcall	_TimeOut
   672  019B                     l163:
   673  019B  0008               	return
   674  019C                     __end_of_TwoShortTwoLong:
   675                           
   676                           	psect	text2
   677  01BD                     __ptext2:	
   678 ;; *************** function _TwoShortOneLong *****************
   679 ;; Defined at:
   680 ;;		line 35 in file "sounds.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0, pclath, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0
   694 ;;      Params:         0       0
   695 ;;      Locals:         0       0
   696 ;;      Temps:          0       0
   697 ;;      Totals:         0       0
   698 ;;Total ram usage:        0 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; Hardware stack levels required when called: 3
   701 ;; This function calls:
   702 ;;		_LongSound
   703 ;;		_ShortSound
   704 ;;		_TimeOut
   705 ;; This function is called by:
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710  01BD                     _TwoShortOneLong:	
   711                           ;psect for function _TwoShortOneLong
   712                           
   713  01BD                     l1279:	
   714                           ;incstack = 0
   715                           ; Regs used in _TwoShortOneLong: [wreg+status,2+status,0+pclath+cstack]
   716                           
   717                           
   718                           ;sounds.c: 37:        if (soundModeSwitch == 0){
   719  01BD  1283               	bcf	3,5	;RP0=0, select bank0
   720  01BE  0824               	movf	_soundModeSwitch,w	;volatile
   721  01BF  1D03               	btfss	3,2
   722  01C0  29C2               	goto	u471
   723  01C1  29C3               	goto	u470
   724  01C2                     u471:
   725  01C2  29C4               	goto	l1283
   726  01C3                     u470:
   727  01C3                     l1281:
   728                           
   729                           ;sounds.c: 38:           ShortSound();
   730  01C3  2115               	fcall	_ShortSound
   731  01C4                     l1283:
   732                           
   733                           ;sounds.c: 40:        if (soundModeSwitch == 1){
   734  01C4  1283               	bcf	3,5	;RP0=0, select bank0
   735  01C5  0324               	decf	_soundModeSwitch,w	;volatile
   736  01C6  1D03               	btfss	3,2
   737  01C7  29C9               	goto	u481
   738  01C8  29CA               	goto	u480
   739  01C9                     u481:
   740  01C9  29CB               	goto	l1287
   741  01CA                     u480:
   742  01CA                     l1285:
   743                           
   744                           ;sounds.c: 41:           ShortSound();
   745  01CA  2115               	fcall	_ShortSound
   746  01CB                     l1287:
   747                           
   748                           ;sounds.c: 43:        if (soundModeSwitch == 2){
   749  01CB  3002               	movlw	2
   750  01CC  1283               	bcf	3,5	;RP0=0, select bank0
   751  01CD  0624               	xorwf	_soundModeSwitch,w	;volatile
   752  01CE  1D03               	btfss	3,2
   753  01CF  29D1               	goto	u491
   754  01D0  29D2               	goto	u490
   755  01D1                     u491:
   756  01D1  29D3               	goto	l1291
   757  01D2                     u490:
   758  01D2                     l1289:
   759                           
   760                           ;sounds.c: 44:           LongSound();
   761  01D2  2145               	fcall	_LongSound
   762  01D3                     l1291:
   763                           
   764                           ;sounds.c: 46:        if (soundModeSwitch > 2) {
   765  01D3  3003               	movlw	3
   766  01D4  1283               	bcf	3,5	;RP0=0, select bank0
   767  01D5  0224               	subwf	_soundModeSwitch,w	;volatile
   768  01D6  1C03               	skipc
   769  01D7  29D9               	goto	u501
   770  01D8  29DA               	goto	u500
   771  01D9                     u501:
   772  01D9  29DB               	goto	l155
   773  01DA                     u500:
   774  01DA                     l1293:
   775                           
   776                           ;sounds.c: 47:        TimeOut();
   777  01DA  2230               	fcall	_TimeOut
   778  01DB                     l155:
   779  01DB  0008               	return
   780  01DC                     __end_of_TwoShortOneLong:
   781                           
   782                           	psect	text3
   783  01DC                     __ptext3:	
   784 ;; *************** function _ThreeShort *****************
   785 ;; Defined at:
   786 ;;		line 71 in file "sounds.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;		None
   789 ;; Auto vars:     Size  Location     Type
   790 ;;		None
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg, status,2, status,0, pclath, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMMON   BANK0
   800 ;;      Params:         0       0
   801 ;;      Locals:         0       0
   802 ;;      Temps:          0       0
   803 ;;      Totals:         0       0
   804 ;;Total ram usage:        0 bytes
   805 ;; Hardware stack levels used: 1
   806 ;; Hardware stack levels required when called: 3
   807 ;; This function calls:
   808 ;;		_ShortSound
   809 ;;		_TimeOut
   810 ;; This function is called by:
   811 ;;		_main
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815  01DC                     _ThreeShort:	
   816                           ;psect for function _ThreeShort
   817                           
   818  01DC                     l1315:	
   819                           ;incstack = 0
   820                           ; Regs used in _ThreeShort: [wreg+status,2+status,0+pclath+cstack]
   821                           
   822                           
   823                           ;sounds.c: 73:        if (soundModeSwitch == 0){
   824  01DC  1283               	bcf	3,5	;RP0=0, select bank0
   825  01DD  0824               	movf	_soundModeSwitch,w	;volatile
   826  01DE  1D03               	btfss	3,2
   827  01DF  29E1               	goto	u561
   828  01E0  29E2               	goto	u560
   829  01E1                     u561:
   830  01E1  29E3               	goto	l1319
   831  01E2                     u560:
   832  01E2                     l1317:
   833                           
   834                           ;sounds.c: 74:           ShortSound();
   835  01E2  2115               	fcall	_ShortSound
   836  01E3                     l1319:
   837                           
   838                           ;sounds.c: 76:        if (soundModeSwitch == 1){
   839  01E3  1283               	bcf	3,5	;RP0=0, select bank0
   840  01E4  0324               	decf	_soundModeSwitch,w	;volatile
   841  01E5  1D03               	btfss	3,2
   842  01E6  29E8               	goto	u571
   843  01E7  29E9               	goto	u570
   844  01E8                     u571:
   845  01E8  29EA               	goto	l1323
   846  01E9                     u570:
   847  01E9                     l1321:
   848                           
   849                           ;sounds.c: 77:           ShortSound();
   850  01E9  2115               	fcall	_ShortSound
   851  01EA                     l1323:
   852                           
   853                           ;sounds.c: 79:        if (soundModeSwitch == 2){
   854  01EA  3002               	movlw	2
   855  01EB  1283               	bcf	3,5	;RP0=0, select bank0
   856  01EC  0624               	xorwf	_soundModeSwitch,w	;volatile
   857  01ED  1D03               	btfss	3,2
   858  01EE  29F0               	goto	u581
   859  01EF  29F1               	goto	u580
   860  01F0                     u581:
   861  01F0  29F2               	goto	l1327
   862  01F1                     u580:
   863  01F1                     l1325:
   864                           
   865                           ;sounds.c: 80:           ShortSound();
   866  01F1  2115               	fcall	_ShortSound
   867  01F2                     l1327:
   868                           
   869                           ;sounds.c: 82:        if (soundModeSwitch > 2) {
   870  01F2  3003               	movlw	3
   871  01F3  1283               	bcf	3,5	;RP0=0, select bank0
   872  01F4  0224               	subwf	_soundModeSwitch,w	;volatile
   873  01F5  1C03               	skipc
   874  01F6  29F8               	goto	u591
   875  01F7  29F9               	goto	u590
   876  01F8                     u591:
   877  01F8  29FA               	goto	l170
   878  01F9                     u590:
   879  01F9                     l1329:
   880                           
   881                           ;sounds.c: 83:          TimeOut();
   882  01F9  2230               	fcall	_TimeOut
   883  01FA                     l170:
   884  01FA  0008               	return
   885  01FB                     __end_of_ThreeShort:
   886                           
   887                           	psect	text4
   888  0230                     __ptext4:	
   889 ;; *************** function _TimeOut *****************
   890 ;; Defined at:
   891 ;;		line 26 in file "sounds.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, status,2
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMMON   BANK0
   905 ;;      Params:         0       0
   906 ;;      Locals:         0       0
   907 ;;      Temps:          0       0
   908 ;;      Totals:         0       0
   909 ;;Total ram usage:        0 bytes
   910 ;; Hardware stack levels used: 1
   911 ;; Hardware stack levels required when called: 2
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_TwoShortOneLong
   916 ;;		_TwoShortTwoLong
   917 ;;		_ThreeShort
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921  0230                     _TimeOut:	
   922                           ;psect for function _TimeOut
   923                           
   924  0230                     l1187:	
   925                           ;incstack = 0
   926                           ; Regs used in _TimeOut: [wreg+status,2]
   927                           
   928                           
   929                           ;sounds.c: 27:    if (cnt1 <= 1000) GP2 = 0;
   930  0230  3003               	movlw	3
   931  0231  1283               	bcf	3,5	;RP0=0, select bank0
   932  0232  0223               	subwf	_cnt1+1,w
   933  0233  30E9               	movlw	233
   934  0234  1903               	skipnz
   935  0235  0222               	subwf	_cnt1,w
   936  0236  1803               	skipnc
   937  0237  2A39               	goto	u461
   938  0238  2A3A               	goto	u460
   939  0239                     u461:
   940  0239  2A3C               	goto	l1191
   941  023A                     u460:
   942  023A                     l1189:
   943  023A  1105               	bcf	5,2	;volatile
   944  023B  2A3F               	goto	l148
   945  023C                     l1191:
   946                           
   947                           ;sounds.c: 29:     cnt1 = 0;
   948  023C  01A2               	clrf	_cnt1
   949  023D  01A3               	clrf	_cnt1+1
   950                           
   951                           ;sounds.c: 30:     soundModeSwitch = 0;
   952  023E  01A4               	clrf	_soundModeSwitch	;volatile
   953  023F                     l148:
   954  023F  0008               	return
   955  0240                     __end_of_TimeOut:
   956                           
   957                           	psect	text5
   958  0115                     __ptext5:	
   959 ;; *************** function _ShortSound *****************
   960 ;; Defined at:
   961 ;;		line 8 in file "sounds.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, status,2, status,0
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0
   975 ;;      Params:         0       0
   976 ;;      Locals:         0       0
   977 ;;      Temps:          0       1
   978 ;;      Totals:         0       1
   979 ;;Total ram usage:        1 bytes
   980 ;; Hardware stack levels used: 1
   981 ;; Hardware stack levels required when called: 2
   982 ;; This function calls:
   983 ;;		Nothing
   984 ;; This function is called by:
   985 ;;		_TwoShortOneLong
   986 ;;		_TwoShortTwoLong
   987 ;;		_ThreeShort
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991  0115                     _ShortSound:	
   992                           ;psect for function _ShortSound
   993                           
   994  0115                     l1155:	
   995                           ;incstack = 0
   996                           ; Regs used in _ShortSound: [wreg+status,2+status,0]
   997                           
   998                           
   999                           ;sounds.c: 9:    if(cnt1 <= 120) GP2 = 1;
  1000  0115  3000               	movlw	0
  1001  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1002  0117  0223               	subwf	_cnt1+1,w
  1003  0118  3079               	movlw	121
  1004  0119  1903               	skipnz
  1005  011A  0222               	subwf	_cnt1,w
  1006  011B  1803               	skipnc
  1007  011C  291E               	goto	u381
  1008  011D  291F               	goto	u380
  1009  011E                     u381:
  1010  011E  2921               	goto	l1159
  1011  011F                     u380:
  1012  011F                     l1157:
  1013  011F  1505               	bsf	5,2	;volatile
  1014  0120  2944               	goto	l135
  1015  0121                     l1159:
  1016  0121  3000               	movlw	0
  1017  0122  0223               	subwf	_cnt1+1,w
  1018  0123  3079               	movlw	121
  1019  0124  1903               	skipnz
  1020  0125  0222               	subwf	_cnt1,w
  1021  0126  1C03               	skipc
  1022  0127  2929               	goto	u391
  1023  0128  292A               	goto	u390
  1024  0129                     u391:
  1025  0129  2935               	goto	l1165
  1026  012A                     u390:
  1027  012A                     l1161:
  1028  012A  3000               	movlw	0
  1029  012B  0223               	subwf	_cnt1+1,w
  1030  012C  30C9               	movlw	201
  1031  012D  1903               	skipnz
  1032  012E  0222               	subwf	_cnt1,w
  1033  012F  1803               	skipnc
  1034  0130  2932               	goto	u401
  1035  0131  2933               	goto	u400
  1036  0132                     u401:
  1037  0132  2935               	goto	l1165
  1038  0133                     u400:
  1039  0133                     l1163:
  1040  0133  1105               	bcf	5,2	;volatile
  1041  0134  2944               	goto	l135
  1042  0135                     l1165:
  1043  0135  3000               	movlw	0
  1044  0136  0223               	subwf	_cnt1+1,w
  1045  0137  30C9               	movlw	201
  1046  0138  1903               	skipnz
  1047  0139  0222               	subwf	_cnt1,w
  1048  013A  1C03               	skipc
  1049  013B  293D               	goto	u411
  1050  013C  293E               	goto	u410
  1051  013D                     u411:
  1052  013D  2944               	goto	l135
  1053  013E                     u410:
  1054  013E                     l1167:
  1055                           
  1056                           ;sounds.c: 12:       cnt1 = 0;
  1057  013E  01A2               	clrf	_cnt1
  1058  013F  01A3               	clrf	_cnt1+1
  1059  0140                     l1169:
  1060                           
  1061                           ;sounds.c: 13:       soundModeSwitch++;
  1062  0140  3001               	movlw	1
  1063  0141  00AF               	movwf	??_ShortSound
  1064  0142  082F               	movf	??_ShortSound,w
  1065  0143  07A4               	addwf	_soundModeSwitch,f	;volatile
  1066  0144                     l135:
  1067  0144  0008               	return
  1068  0145                     __end_of_ShortSound:
  1069                           
  1070                           	psect	text6
  1071  020E                     __ptext6:	
  1072 ;; *************** function _MuxVoltage *****************
  1073 ;; Defined at:
  1074 ;;		line 120 in file "interrupt.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;		None
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, status,2
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMMON   BANK0
  1088 ;;      Params:         0       0
  1089 ;;      Locals:         0       0
  1090 ;;      Temps:          0       1
  1091 ;;      Totals:         0       1
  1092 ;;Total ram usage:        1 bytes
  1093 ;; Hardware stack levels used: 1
  1094 ;; Hardware stack levels required when called: 2
  1095 ;; This function calls:
  1096 ;;		Nothing
  1097 ;; This function is called by:
  1098 ;;		_main
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102  020E                     _MuxVoltage:	
  1103                           ;psect for function _MuxVoltage
  1104                           
  1105  020E                     l1211:	
  1106                           ;incstack = 0
  1107                           ; Regs used in _MuxVoltage: [wreg+status,2]
  1108                           
  1109                           
  1110                           ;interrupt.c: 121:        ADCON0 = 0;
  1111  020E  1283               	bcf	3,5	;RP0=0, select bank0
  1112  020F  019F               	clrf	31	;volatile
  1113  0210                     l1213:
  1114                           
  1115                           ;interrupt.c: 122:        ADON = 1;
  1116  0210  141F               	bsf	31,0	;volatile
  1117  0211                     l1215:
  1118                           
  1119                           ;interrupt.c: 123:        ADFM = 1;
  1120  0211  179F               	bsf	31,7	;volatile
  1121  0212                     l1217:
  1122                           
  1123                           ;interrupt.c: 124:        CHS1 = 0;
  1124  0212  119F               	bcf	31,3	;volatile
  1125  0213                     l1219:
  1126                           
  1127                           ;interrupt.c: 125:        CHS0 = 1;
  1128  0213  151F               	bsf	31,2	;volatile
  1129  0214                     l1221:
  1130                           
  1131                           ;interrupt.c: 126:        measureType = 1;
  1132  0214  01B3               	clrf	_measureType
  1133  0215  0AB3               	incf	_measureType,f
  1134  0216                     l1223:
  1135                           
  1136                           ;interrupt.c: 127:        ADIF = 0;
  1137  0216  130C               	bcf	12,6	;volatile
  1138  0217                     l1225:
  1139                           
  1140                           ;interrupt.c: 130:        _delay((unsigned long)((50)*(4000000/4000000.0)));
  1141  0217  3010               	movlw	16
  1142  0218  00AF               	movwf	??_MuxVoltage
  1143  0219                     u757:
  1144  0219  0BAF               	decfsz	??_MuxVoltage,f
  1145  021A  2A19               	goto	u757
  1146  021B  0000               	nop
  1147  021C                     l1227:
  1148                           
  1149                           ;interrupt.c: 131:        GO = 1;
  1150  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1151  021D  149F               	bsf	31,1	;volatile
  1152  021E                     l79:
  1153  021E  0008               	return
  1154  021F                     __end_of_MuxVoltage:
  1155                           
  1156                           	psect	text7
  1157  019C                     __ptext7:	
  1158 ;; *************** function _Init_uC *****************
  1159 ;; Defined at:
  1160 ;;		line 33 in file "init_periphery.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg, status,2, status,0, pclath, cstack
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMMON   BANK0
  1174 ;;      Params:         0       0
  1175 ;;      Locals:         0       0
  1176 ;;      Temps:          0       0
  1177 ;;      Totals:         0       0
  1178 ;;Total ram usage:        0 bytes
  1179 ;; Hardware stack levels used: 1
  1180 ;; Hardware stack levels required when called: 3
  1181 ;; This function calls:
  1182 ;;		_LongSound
  1183 ;; This function is called by:
  1184 ;;		_main
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188  019C                     _Init_uC:	
  1189                           ;psect for function _Init_uC
  1190                           
  1191  019C                     l1243:	
  1192                           ;incstack = 0
  1193                           ; Regs used in _Init_uC: [wreg+status,2+status,0+pclath+cstack]
  1194                           
  1195                           
  1196                           ;init_periphery.c: 34:     CMCON = 0x07;
  1197  019C  3007               	movlw	7
  1198  019D  1283               	bcf	3,5	;RP0=0, select bank0
  1199  019E  0099               	movwf	25	;volatile
  1200  019F                     l1245:
  1201                           
  1202                           ;init_periphery.c: 35:     VRCON = 0x00;
  1203  019F  1683               	bsf	3,5	;RP0=1, select bank1
  1204  01A0  0199               	clrf	25	;volatile
  1205  01A1                     l1247:
  1206                           
  1207                           ;init_periphery.c: 38:     TRISIO = 0;
  1208  01A1  0185               	clrf	5	;volatile
  1209  01A2                     l1249:
  1210                           
  1211                           ;init_periphery.c: 39:     GPIO = 0;
  1212  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1213  01A3  0185               	clrf	5	;volatile
  1214  01A4                     l1251:
  1215                           
  1216                           ;init_periphery.c: 42:     TRISIO2 = 0;
  1217  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  1218  01A5  1105               	bcf	5,2	;volatile
  1219  01A6                     l1253:
  1220                           
  1221                           ;init_periphery.c: 43:     GP2 = 0;
  1222  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1223  01A7  1105               	bcf	5,2	;volatile
  1224  01A8                     l1255:
  1225                           
  1226                           ;init_periphery.c: 46:     TRISIO5 = 0;
  1227  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  1228  01A9  1285               	bcf	5,5	;volatile
  1229  01AA                     l1257:
  1230                           
  1231                           ;init_periphery.c: 47:     GP5 = 1;
  1232  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1233  01AB  1685               	bsf	5,5	;volatile
  1234  01AC                     l1259:
  1235                           
  1236                           ;init_periphery.c: 50:     TRISIO4 = 0;
  1237  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  1238  01AD  1205               	bcf	5,4	;volatile
  1239  01AE                     l1261:
  1240                           
  1241                           ;init_periphery.c: 51:     GP4 = 0;
  1242  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1243  01AF  1205               	bcf	5,4	;volatile
  1244  01B0                     l1263:
  1245                           
  1246                           ;init_periphery.c: 54:     VCFG = 1;
  1247  01B0  171F               	bsf	31,6	;volatile
  1248  01B1                     l1265:
  1249                           
  1250                           ;init_periphery.c: 55:     TRISIO0 = 1;
  1251  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  1252  01B2  1405               	bsf	5,0	;volatile
  1253  01B3                     l1267:
  1254                           
  1255                           ;init_periphery.c: 56:     TRISIO1 = 1;
  1256  01B3  1485               	bsf	5,1	;volatile
  1257  01B4                     l1269:
  1258                           
  1259                           ;init_periphery.c: 58:     ANSEL = 0b00110011;
  1260  01B4  3033               	movlw	51
  1261  01B5  009F               	movwf	31	;volatile
  1262  01B6                     l1271:
  1263                           
  1264                           ;init_periphery.c: 60:     PEIE = 1;
  1265  01B6  170B               	bsf	11,6	;volatile
  1266  01B7                     l1273:
  1267                           
  1268                           ;init_periphery.c: 61:     GIE = 1;
  1269  01B7  178B               	bsf	11,7	;volatile
  1270  01B8                     l1275:
  1271                           
  1272                           ;init_periphery.c: 63:     LongSound();
  1273  01B8  2145               	fcall	_LongSound
  1274  01B9                     l1277:
  1275                           
  1276                           ;init_periphery.c: 64:     adcValue = 0;
  1277  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1278  01BA  01A0               	clrf	_adcValue
  1279  01BB  01A1               	clrf	_adcValue+1
  1280  01BC                     l233:
  1281  01BC  0008               	return
  1282  01BD                     __end_of_Init_uC:
  1283                           
  1284                           	psect	text8
  1285  0145                     __ptext8:	
  1286 ;; *************** function _LongSound *****************
  1287 ;; Defined at:
  1288 ;;		line 17 in file "sounds.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;		None
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;		None
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		wreg, status,2, status,0
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMMON   BANK0
  1302 ;;      Params:         0       0
  1303 ;;      Locals:         0       0
  1304 ;;      Temps:          0       1
  1305 ;;      Totals:         0       1
  1306 ;;Total ram usage:        1 bytes
  1307 ;; Hardware stack levels used: 1
  1308 ;; Hardware stack levels required when called: 2
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_TwoShortOneLong
  1313 ;;		_TwoShortTwoLong
  1314 ;;		_Init_uC
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318  0145                     _LongSound:	
  1319                           ;psect for function _LongSound
  1320                           
  1321  0145                     l1171:	
  1322                           ;incstack = 0
  1323                           ; Regs used in _LongSound: [wreg+status,2+status,0]
  1324                           
  1325                           
  1326                           ;sounds.c: 18:    if(cnt1 <= 200) GP2 = 1;
  1327  0145  3000               	movlw	0
  1328  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1329  0147  0223               	subwf	_cnt1+1,w
  1330  0148  30C9               	movlw	201
  1331  0149  1903               	skipnz
  1332  014A  0222               	subwf	_cnt1,w
  1333  014B  1803               	skipnc
  1334  014C  294E               	goto	u421
  1335  014D  294F               	goto	u420
  1336  014E                     u421:
  1337  014E  2951               	goto	l1175
  1338  014F                     u420:
  1339  014F                     l1173:
  1340  014F  1505               	bsf	5,2	;volatile
  1341  0150  2974               	goto	l143
  1342  0151                     l1175:
  1343  0151  3000               	movlw	0
  1344  0152  0223               	subwf	_cnt1+1,w
  1345  0153  30C9               	movlw	201
  1346  0154  1903               	skipnz
  1347  0155  0222               	subwf	_cnt1,w
  1348  0156  1C03               	skipc
  1349  0157  2959               	goto	u431
  1350  0158  295A               	goto	u430
  1351  0159                     u431:
  1352  0159  2965               	goto	l1181
  1353  015A                     u430:
  1354  015A                     l1177:
  1355  015A  3001               	movlw	1
  1356  015B  0223               	subwf	_cnt1+1,w
  1357  015C  305F               	movlw	95
  1358  015D  1903               	skipnz
  1359  015E  0222               	subwf	_cnt1,w
  1360  015F  1803               	skipnc
  1361  0160  2962               	goto	u441
  1362  0161  2963               	goto	u440
  1363  0162                     u441:
  1364  0162  2965               	goto	l1181
  1365  0163                     u440:
  1366  0163                     l1179:
  1367  0163  1105               	bcf	5,2	;volatile
  1368  0164  2974               	goto	l143
  1369  0165                     l1181:
  1370  0165  3001               	movlw	1
  1371  0166  0223               	subwf	_cnt1+1,w
  1372  0167  305F               	movlw	95
  1373  0168  1903               	skipnz
  1374  0169  0222               	subwf	_cnt1,w
  1375  016A  1C03               	skipc
  1376  016B  296D               	goto	u451
  1377  016C  296E               	goto	u450
  1378  016D                     u451:
  1379  016D  2974               	goto	l143
  1380  016E                     u450:
  1381  016E                     l1183:
  1382                           
  1383                           ;sounds.c: 21:       cnt1 = 0;
  1384  016E  01A2               	clrf	_cnt1
  1385  016F  01A3               	clrf	_cnt1+1
  1386  0170                     l1185:
  1387                           
  1388                           ;sounds.c: 22:       soundModeSwitch++;
  1389  0170  3001               	movlw	1
  1390  0171  00AF               	movwf	??_LongSound
  1391  0172  082F               	movf	??_LongSound,w
  1392  0173  07A4               	addwf	_soundModeSwitch,f	;volatile
  1393  0174                     l143:
  1394  0174  0008               	return
  1395  0175                     __end_of_LongSound:
  1396                           
  1397                           	psect	text9
  1398  0240                     __ptext9:	
  1399 ;; *************** function _InitTimer1 *****************
  1400 ;; Defined at:
  1401 ;;		line 21 in file "init_periphery.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;		None
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;		None
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      void 
  1408 ;; Registers used:
  1409 ;;		wreg
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMMON   BANK0
  1415 ;;      Params:         0       0
  1416 ;;      Locals:         0       0
  1417 ;;      Temps:          0       0
  1418 ;;      Totals:         0       0
  1419 ;;Total ram usage:        0 bytes
  1420 ;; Hardware stack levels used: 1
  1421 ;; Hardware stack levels required when called: 2
  1422 ;; This function calls:
  1423 ;;		Nothing
  1424 ;; This function is called by:
  1425 ;;		_main
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429  0240                     _InitTimer1:	
  1430                           ;psect for function _InitTimer1
  1431                           
  1432  0240                     l1237:	
  1433                           ;incstack = 0
  1434                           ; Regs used in _InitTimer1: [wreg]
  1435                           
  1436                           
  1437                           ;init_periphery.c: 23:          TMR1H = 0xFC;
  1438  0240  30FC               	movlw	252
  1439  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1440  0242  008F               	movwf	15	;volatile
  1441                           
  1442                           ;init_periphery.c: 24:   TMR1L = 0x17;
  1443  0243  3017               	movlw	23
  1444  0244  008E               	movwf	14	;volatile
  1445                           
  1446                           ;init_periphery.c: 26:   T1CON = 0x01;
  1447  0245  3001               	movlw	1
  1448  0246  0090               	movwf	16	;volatile
  1449  0247                     l1239:
  1450                           
  1451                           ;init_periphery.c: 28:   TMR1IF = 0;
  1452  0247  100C               	bcf	12,0	;volatile
  1453  0248                     l1241:
  1454                           
  1455                           ;init_periphery.c: 29:   TMR1IE = 1;
  1456  0248  1683               	bsf	3,5	;RP0=1, select bank1
  1457  0249  140C               	bsf	12,0	;volatile
  1458  024A                     l230:
  1459  024A  0008               	return
  1460  024B                     __end_of_InitTimer1:
  1461                           
  1462                           	psect	text10
  1463  024B                     __ptext10:	
  1464 ;; *************** function _InitTimer0 *****************
  1465 ;; Defined at:
  1466 ;;		line 12 in file "init_periphery.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;		None
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0
  1480 ;;      Params:         0       0
  1481 ;;      Locals:         0       0
  1482 ;;      Temps:          0       0
  1483 ;;      Totals:         0       0
  1484 ;;Total ram usage:        0 bytes
  1485 ;; Hardware stack levels used: 1
  1486 ;; Hardware stack levels required when called: 2
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_main
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494  024B                     _InitTimer0:	
  1495                           ;psect for function _InitTimer0
  1496                           
  1497  024B                     l1229:	
  1498                           ;incstack = 0
  1499                           ; Regs used in _InitTimer0: [wreg+status,2]
  1500                           
  1501                           
  1502                           ;init_periphery.c: 14:     OPTION_REG = 0b11000001;
  1503  024B  30C1               	movlw	193
  1504  024C  1683               	bsf	3,5	;RP0=1, select bank1
  1505  024D  0081               	movwf	1	;volatile
  1506  024E                     l1231:
  1507                           
  1508                           ;init_periphery.c: 15:     TMR0 = 0;
  1509  024E  1283               	bcf	3,5	;RP0=0, select bank0
  1510  024F  0181               	clrf	1	;volatile
  1511  0250                     l1233:
  1512                           
  1513                           ;init_periphery.c: 16:     TMR0IF = 0;
  1514  0250  110B               	bcf	11,2	;volatile
  1515  0251                     l1235:
  1516                           
  1517                           ;init_periphery.c: 17:     TMR0IE = 1;
  1518  0251  168B               	bsf	11,5	;volatile
  1519  0252                     l227:
  1520  0252  0008               	return
  1521  0253                     __end_of_InitTimer0:
  1522                           
  1523                           	psect	text11
  1524  001D                     __ptext11:	
  1525 ;; *************** function _ISR *****************
  1526 ;; Defined at:
  1527 ;;		line 19 in file "interrupt.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;		None
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;		None
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  1    wreg      void 
  1534 ;; Registers used:
  1535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMMON   BANK0
  1541 ;;      Params:         0       0
  1542 ;;      Locals:         0       0
  1543 ;;      Temps:          0       5
  1544 ;;      Totals:         0       5
  1545 ;;Total ram usage:        5 bytes
  1546 ;; Hardware stack levels used: 1
  1547 ;; Hardware stack levels required when called: 1
  1548 ;; This function calls:
  1549 ;;		_MuxTemp
  1550 ;;		i1_MuxVoltage
  1551 ;; This function is called by:
  1552 ;;		Interrupt level 1
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556  001D                     _ISR:	
  1557                           ;psect for function _ISR
  1558                           
  1559  001D                     i1l1349:
  1560                           
  1561                           ;interrupt.c: 22:     if (TMR0IF == 1){
  1562  001D  1D0B               	btfss	11,2	;volatile
  1563  001E  2820               	goto	u60_21
  1564  001F  2821               	goto	u60_20
  1565  0020                     u60_21:
  1566  0020  2828               	goto	i1l1357
  1567  0021                     u60_20:
  1568  0021                     i1l1351:
  1569                           
  1570                           ;interrupt.c: 24:         TMR0 = 6;
  1571  0021  3006               	movlw	6
  1572  0022  0081               	movwf	1	;volatile
  1573  0023                     i1l1353:
  1574                           
  1575                           ;interrupt.c: 28:  cnt0++;
  1576  0023  3001               	movlw	1
  1577  0024  00AA               	movwf	??_ISR
  1578  0025  082A               	movf	??_ISR,w
  1579  0026  07A8               	addwf	_cnt0,f
  1580  0027                     i1l1355:
  1581                           
  1582                           ;interrupt.c: 30:  TMR0IF = 0;
  1583  0027  110B               	bcf	11,2	;volatile
  1584  0028                     i1l1357:
  1585                           
  1586                           ;interrupt.c: 33:     if (TMR1IF == 1){
  1587  0028  1C0C               	btfss	12,0	;volatile
  1588  0029  282B               	goto	u61_21
  1589  002A  282C               	goto	u61_20
  1590  002B                     u61_21:
  1591  002B  2837               	goto	i1l1363
  1592  002C                     u61_20:
  1593  002C                     i1l1359:
  1594                           
  1595                           ;interrupt.c: 35:   TMR1H = 0xFC;
  1596  002C  30FC               	movlw	252
  1597  002D  008F               	movwf	15	;volatile
  1598                           
  1599                           ;interrupt.c: 36:   TMR1L = 0x17;
  1600  002E  3017               	movlw	23
  1601  002F  008E               	movwf	14	;volatile
  1602                           
  1603                           ;interrupt.c: 38:          cnt1++;
  1604  0030  3001               	movlw	1
  1605  0031  07A2               	addwf	_cnt1,f
  1606  0032  1803               	skipnc
  1607  0033  0AA3               	incf	_cnt1+1,f
  1608  0034  3000               	movlw	0
  1609  0035  07A3               	addwf	_cnt1+1,f
  1610  0036                     i1l1361:
  1611                           
  1612                           ;interrupt.c: 42:          TMR1IF = 0;
  1613  0036  100C               	bcf	12,0	;volatile
  1614  0037                     i1l1363:
  1615                           
  1616                           ;interrupt.c: 45:     if (ADIF == 1){
  1617  0037  1F0C               	btfss	12,6	;volatile
  1618  0038  283A               	goto	u62_21
  1619  0039  283B               	goto	u62_20
  1620  003A                     u62_21:
  1621  003A  28D1               	goto	i1l76
  1622  003B                     u62_20:
  1623  003B  28C1               	goto	i1l1411
  1624  003C                     i1l1367:
  1625                           
  1626                           ;interrupt.c: 49:         adcValue = (uint16_t) ((ADRESH << 8) + ADRESL);
  1627  003C  081E               	movf	30,w	;volatile
  1628  003D  00A1               	movwf	_adcValue+1
  1629  003E  1683               	bsf	3,5	;RP0=1, select bank1
  1630  003F  081E               	movf	30,w	;volatile
  1631  0040  1283               	bcf	3,5	;RP0=0, select bank0
  1632  0041  00A0               	movwf	_adcValue
  1633                           
  1634                           ;interrupt.c: 51:  if ((adcValue > 190) && (adcValue < 285) && (errorType == 1)){
  1635  0042  3000               	movlw	0
  1636  0043  0221               	subwf	_adcValue+1,w
  1637  0044  30BF               	movlw	191
  1638  0045  1903               	skipnz
  1639  0046  0220               	subwf	_adcValue,w
  1640  0047  1C03               	skipc
  1641  0048  284A               	goto	u63_21
  1642  0049  284B               	goto	u63_20
  1643  004A                     u63_21:
  1644  004A  285C               	goto	i1l1375
  1645  004B                     u63_20:
  1646  004B                     i1l1369:
  1647  004B  3001               	movlw	1
  1648  004C  0221               	subwf	_adcValue+1,w
  1649  004D  301D               	movlw	29
  1650  004E  1903               	skipnz
  1651  004F  0220               	subwf	_adcValue,w
  1652  0050  1803               	skipnc
  1653  0051  2853               	goto	u64_21
  1654  0052  2854               	goto	u64_20
  1655  0053                     u64_21:
  1656  0053  285C               	goto	i1l1375
  1657  0054                     u64_20:
  1658  0054                     i1l1371:
  1659  0054  0332               	decf	_errorType,w
  1660  0055  1D03               	btfss	3,2
  1661  0056  2858               	goto	u65_21
  1662  0057  2859               	goto	u65_20
  1663  0058                     u65_21:
  1664  0058  285C               	goto	i1l1375
  1665  0059                     u65_20:
  1666  0059                     i1l1373:
  1667                           
  1668                           ;interrupt.c: 52:            GP5 = 0;
  1669  0059  1285               	bcf	5,5	;volatile
  1670                           
  1671                           ;interrupt.c: 53:     GP2 = 0;
  1672  005A  1105               	bcf	5,2	;volatile
  1673                           
  1674                           ;interrupt.c: 54:            }
  1675  005B  2879               	goto	i1l1387
  1676  005C                     i1l1375:
  1677  005C  3000               	movlw	0
  1678  005D  0221               	subwf	_adcValue+1,w
  1679  005E  30BF               	movlw	191
  1680  005F  1903               	skipnz
  1681  0060  0220               	subwf	_adcValue,w
  1682  0061  1803               	skipnc
  1683  0062  2864               	goto	u66_21
  1684  0063  2865               	goto	u66_20
  1685  0064                     u66_21:
  1686  0064  286B               	goto	i1l1381
  1687  0065                     u66_20:
  1688  0065                     i1l1377:
  1689                           
  1690                           ;interrupt.c: 56:            GP5 = 1;
  1691  0065  1685               	bsf	5,5	;volatile
  1692  0066                     i1l1379:
  1693                           
  1694                           ;interrupt.c: 57:     errorType = 2;
  1695  0066  3002               	movlw	2
  1696  0067  00AA               	movwf	??_ISR
  1697  0068  082A               	movf	??_ISR,w
  1698  0069  00B2               	movwf	_errorType
  1699                           
  1700                           ;interrupt.c: 58:            }
  1701  006A  2879               	goto	i1l1387
  1702  006B                     i1l1381:
  1703  006B  3001               	movlw	1
  1704  006C  0221               	subwf	_adcValue+1,w
  1705  006D  301D               	movlw	29
  1706  006E  1903               	skipnz
  1707  006F  0220               	subwf	_adcValue,w
  1708  0070  1C03               	skipc
  1709  0071  2873               	goto	u67_21
  1710  0072  2874               	goto	u67_20
  1711  0073                     u67_21:
  1712  0073  2879               	goto	i1l1387
  1713  0074                     u67_20:
  1714  0074                     i1l1383:
  1715                           
  1716                           ;interrupt.c: 60:            GP5 = 1;
  1717  0074  1685               	bsf	5,5	;volatile
  1718  0075                     i1l1385:
  1719                           
  1720                           ;interrupt.c: 61:     errorType = 3;
  1721  0075  3003               	movlw	3
  1722  0076  00AA               	movwf	??_ISR
  1723  0077  082A               	movf	??_ISR,w
  1724  0078  00B2               	movwf	_errorType
  1725  0079                     i1l1387:
  1726                           
  1727                           ;interrupt.c: 63:           MuxTemp();
  1728  0079  21FB               	fcall	_MuxTemp
  1729                           
  1730                           ;interrupt.c: 64:         break;
  1731  007A  28D1               	goto	i1l76
  1732  007B                     i1l1389:
  1733                           
  1734                           ;interrupt.c: 68:   adcValue = (uint16_t) ((ADRESH << 8) + ADRESL);
  1735  007B  081E               	movf	30,w	;volatile
  1736  007C  00A1               	movwf	_adcValue+1
  1737  007D  1683               	bsf	3,5	;RP0=1, select bank1
  1738  007E  081E               	movf	30,w	;volatile
  1739  007F  1283               	bcf	3,5	;RP0=0, select bank0
  1740  0080  00A0               	movwf	_adcValue
  1741                           
  1742                           ;interrupt.c: 70:             if (adcValue < 200)
  1743  0081  3000               	movlw	0
  1744  0082  0221               	subwf	_adcValue+1,w
  1745  0083  30C8               	movlw	200
  1746  0084  1903               	skipnz
  1747  0085  0220               	subwf	_adcValue,w
  1748  0086  1803               	skipnc
  1749  0087  2889               	goto	u68_21
  1750  0088  288A               	goto	u68_20
  1751  0089                     u68_21:
  1752  0089  288D               	goto	i1l1393
  1753  008A                     u68_20:
  1754  008A                     i1l1391:
  1755                           
  1756                           ;interrupt.c: 71:          {;interrupt.c: 72:         GP5 = 1;
  1757  008A  1685               	bsf	5,5	;volatile
  1758                           
  1759                           ;interrupt.c: 73:         GP4 = 0;
  1760  008B  1205               	bcf	5,4	;volatile
  1761                           
  1762                           ;interrupt.c: 76:     }
  1763  008C  28BF               	goto	i1l1407
  1764  008D                     i1l1393:
  1765  008D  3000               	movlw	0
  1766  008E  0221               	subwf	_adcValue+1,w
  1767  008F  30C8               	movlw	200
  1768  0090  1903               	skipnz
  1769  0091  0220               	subwf	_adcValue,w
  1770  0092  1C03               	skipc
  1771  0093  2895               	goto	u69_21
  1772  0094  2896               	goto	u69_20
  1773  0095                     u69_21:
  1774  0095  28A3               	goto	i1l1399
  1775  0096                     u69_20:
  1776  0096                     i1l1395:
  1777  0096  3003               	movlw	3
  1778  0097  0221               	subwf	_adcValue+1,w
  1779  0098  3070               	movlw	112
  1780  0099  1903               	skipnz
  1781  009A  0220               	subwf	_adcValue,w
  1782  009B  1803               	skipnc
  1783  009C  289E               	goto	u70_21
  1784  009D  289F               	goto	u70_20
  1785  009E                     u70_21:
  1786  009E  28A3               	goto	i1l1399
  1787  009F                     u70_20:
  1788  009F                     i1l1397:
  1789                           
  1790                           ;interrupt.c: 80:           GP4 = 0;
  1791  009F  1205               	bcf	5,4	;volatile
  1792                           
  1793                           ;interrupt.c: 81:    errorType = 1;
  1794  00A0  01B2               	clrf	_errorType
  1795  00A1  0AB2               	incf	_errorType,f
  1796                           
  1797                           ;interrupt.c: 82:                        }
  1798  00A2  28BF               	goto	i1l1407
  1799  00A3                     i1l1399:
  1800  00A3  3003               	movlw	3
  1801  00A4  0221               	subwf	_adcValue+1,w
  1802  00A5  3070               	movlw	112
  1803  00A6  1903               	skipnz
  1804  00A7  0220               	subwf	_adcValue,w
  1805  00A8  1C03               	skipc
  1806  00A9  28AB               	goto	u71_21
  1807  00AA  28AC               	goto	u71_20
  1808  00AB                     u71_21:
  1809  00AB  28B9               	goto	i1l73
  1810  00AC                     u71_20:
  1811  00AC                     i1l1401:
  1812  00AC  3003               	movlw	3
  1813  00AD  0221               	subwf	_adcValue+1,w
  1814  00AE  30CA               	movlw	202
  1815  00AF  1903               	skipnz
  1816  00B0  0220               	subwf	_adcValue,w
  1817  00B1  1803               	skipnc
  1818  00B2  28B4               	goto	u72_21
  1819  00B3  28B5               	goto	u72_20
  1820  00B4                     u72_21:
  1821  00B4  28B9               	goto	i1l73
  1822  00B5                     u72_20:
  1823  00B5                     i1l1403:
  1824                           
  1825                           ;interrupt.c: 99:           GP4 = 1;
  1826  00B5  1605               	bsf	5,4	;volatile
  1827                           
  1828                           ;interrupt.c: 100:    errorType = 1;
  1829  00B6  01B2               	clrf	_errorType
  1830  00B7  0AB2               	incf	_errorType,f
  1831                           
  1832                           ;interrupt.c: 101:                        }
  1833  00B8  28BF               	goto	i1l1407
  1834  00B9                     i1l73:	
  1835                           ;interrupt.c: 104:              else {
  1836                           
  1837                           
  1838                           ;interrupt.c: 106:           GP4 = 1;
  1839  00B9  1605               	bsf	5,4	;volatile
  1840                           
  1841                           ;interrupt.c: 107:                  GP5 = 1;
  1842  00BA  1685               	bsf	5,5	;volatile
  1843  00BB                     i1l1405:
  1844                           
  1845                           ;interrupt.c: 108:                         errorType = 5;
  1846  00BB  3005               	movlw	5
  1847  00BC  00AA               	movwf	??_ISR
  1848  00BD  082A               	movf	??_ISR,w
  1849  00BE  00B2               	movwf	_errorType
  1850  00BF                     i1l1407:
  1851                           
  1852                           ;interrupt.c: 110:   MuxVoltage();
  1853  00BF  221F               	fcall	i1_MuxVoltage
  1854                           
  1855                           ;interrupt.c: 111:  break;
  1856  00C0  28D1               	goto	i1l76
  1857  00C1                     i1l1411:
  1858  00C1  0833               	movf	_measureType,w
  1859  00C2  00AA               	movwf	??_ISR
  1860  00C3  01AB               	clrf	??_ISR+1
  1861                           
  1862                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1863                           ; Switch size 1, requested type "simple"
  1864                           ; Number of cases is 1, Range of values is 0 to 0
  1865                           ; switch strategies available:
  1866                           ; Name         Instructions Cycles
  1867                           ; simple_byte            4     3 (average)
  1868                           ; direct_byte            7     6 (fixed)
  1869                           ; jumptable            260     6 (fixed)
  1870                           ;	Chosen strategy is simple_byte
  1871  00C4  082B               	movf	??_ISR+1,w
  1872  00C5  3A00               	xorlw	0	; case 0
  1873  00C6  1903               	skipnz
  1874  00C7  28C9               	goto	i1l1499
  1875  00C8  28D1               	goto	i1l76
  1876  00C9                     i1l1499:
  1877                           
  1878                           ; Switch size 1, requested type "simple"
  1879                           ; Number of cases is 2, Range of values is 1 to 2
  1880                           ; switch strategies available:
  1881                           ; Name         Instructions Cycles
  1882                           ; simple_byte            7     4 (average)
  1883                           ; direct_byte           11     9 (fixed)
  1884                           ; jumptable            263     9 (fixed)
  1885                           ;	Chosen strategy is simple_byte
  1886  00C9  082A               	movf	??_ISR,w
  1887  00CA  3A01               	xorlw	1	; case 1
  1888  00CB  1903               	skipnz
  1889  00CC  283C               	goto	i1l1367
  1890  00CD  3A03               	xorlw	3	; case 2
  1891  00CE  1903               	skipnz
  1892  00CF  287B               	goto	i1l1389
  1893  00D0  28D1               	goto	i1l76
  1894  00D1                     i1l76:
  1895  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1896  00D2  082E               	movf	??_ISR+4,w
  1897  00D3  008A               	movwf	10
  1898  00D4  082D               	movf	??_ISR+3,w
  1899  00D5  0084               	movwf	4
  1900  00D6  0E2C               	swapf	??_ISR+2,w
  1901  00D7  0083               	movwf	3
  1902  00D8  0EDE               	swapf	btemp,f
  1903  00D9  0E5E               	swapf	btemp,w
  1904  00DA  0009               	retfie
  1905  00DB                     __end_of_ISR:
  1906                           
  1907                           	psect	intentry
  1908  0004                     __pintentry:	
  1909                           ;incstack = 0
  1910                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1911                           
  1912  0004                     interrupt_function:
  1913  005E                     saved_w	set	btemp
  1914  0004  00DE               	movwf	btemp
  1915  0005  0E03               	swapf	3,w
  1916  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0007  00AC               	movwf	??_ISR+2
  1918  0008  0804               	movf	4,w
  1919  0009  00AD               	movwf	??_ISR+3
  1920  000A  080A               	movf	10,w
  1921  000B  00AE               	movwf	??_ISR+4
  1922  000C  281D               	ljmp	_ISR
  1923                           
  1924                           	psect	text12
  1925  021F                     __ptext12:	
  1926 ;; *************** function i1_MuxVoltage *****************
  1927 ;; Defined at:
  1928 ;;		line 120 in file "interrupt.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;		None
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;		None
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      void 
  1935 ;; Registers used:
  1936 ;;		wreg, status,2
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMMON   BANK0
  1942 ;;      Params:         0       0
  1943 ;;      Locals:         0       0
  1944 ;;      Temps:          0       1
  1945 ;;      Totals:         0       1
  1946 ;;Total ram usage:        1 bytes
  1947 ;; Hardware stack levels used: 1
  1948 ;; This function calls:
  1949 ;;		Nothing
  1950 ;; This function is called by:
  1951 ;;		_ISR
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955  021F                     i1_MuxVoltage:	
  1956                           ;psect for function i1_MuxVoltage
  1957                           
  1958  021F                     i1l1331:	
  1959                           ;incstack = 0
  1960                           ; Regs used in i1_MuxVoltage: [wreg+status,2]
  1961                           
  1962                           
  1963                           ;interrupt.c: 121:        ADCON0 = 0;
  1964  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1965  0220  019F               	clrf	31	;volatile
  1966  0221                     i1l1333:
  1967                           
  1968                           ;interrupt.c: 122:        ADON = 1;
  1969  0221  141F               	bsf	31,0	;volatile
  1970  0222                     i1l1335:
  1971                           
  1972                           ;interrupt.c: 123:        ADFM = 1;
  1973  0222  179F               	bsf	31,7	;volatile
  1974  0223                     i1l1337:
  1975                           
  1976                           ;interrupt.c: 124:        CHS1 = 0;
  1977  0223  119F               	bcf	31,3	;volatile
  1978  0224                     i1l1339:
  1979                           
  1980                           ;interrupt.c: 125:        CHS0 = 1;
  1981  0224  151F               	bsf	31,2	;volatile
  1982  0225                     i1l1341:
  1983                           
  1984                           ;interrupt.c: 126:        measureType = 1;
  1985  0225  01B3               	clrf	_measureType
  1986  0226  0AB3               	incf	_measureType,f
  1987  0227                     i1l1343:
  1988                           
  1989                           ;interrupt.c: 127:        ADIF = 0;
  1990  0227  130C               	bcf	12,6	;volatile
  1991  0228                     i1l1345:
  1992                           
  1993                           ;interrupt.c: 130:        _delay((unsigned long)((50)*(4000000/4000000.0)));
  1994  0228  3010               	movlw	16
  1995  0229  00A9               	movwf	??i1_MuxVoltage
  1996  022A                     u76_27:
  1997  022A  0BA9               	decfsz	??i1_MuxVoltage,f
  1998  022B  2A2A               	goto	u76_27
  1999  022C  0000               	nop
  2000  022D                     i1l1347:
  2001                           
  2002                           ;interrupt.c: 131:        GO = 1;
  2003  022D  1283               	bcf	3,5	;RP0=0, select bank0
  2004  022E  149F               	bsf	31,1	;volatile
  2005  022F                     i1l79:
  2006  022F  0008               	return
  2007  0230                     __end_ofi1_MuxVoltage:
  2008                           
  2009                           	psect	text13
  2010  01FB                     __ptext13:	
  2011 ;; *************** function _MuxTemp *****************
  2012 ;; Defined at:
  2013 ;;		line 135 in file "interrupt.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;		None
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;		None
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      void 
  2020 ;; Registers used:
  2021 ;;		wreg, status,2
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMMON   BANK0
  2027 ;;      Params:         0       0
  2028 ;;      Locals:         0       0
  2029 ;;      Temps:          0       1
  2030 ;;      Totals:         0       1
  2031 ;;Total ram usage:        1 bytes
  2032 ;; Hardware stack levels used: 1
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_ISR
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040  01FB                     _MuxTemp:	
  2041                           ;psect for function _MuxTemp
  2042                           
  2043  01FB                     i1l1193:	
  2044                           ;incstack = 0
  2045                           ; Regs used in _MuxTemp: [wreg+status,2]
  2046                           
  2047                           
  2048                           ;interrupt.c: 136:        ADCON0 = 0;
  2049  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  2050  01FC  019F               	clrf	31	;volatile
  2051  01FD                     i1l1195:
  2052                           
  2053                           ;interrupt.c: 137:        ADON = 1;
  2054  01FD  141F               	bsf	31,0	;volatile
  2055  01FE                     i1l1197:
  2056                           
  2057                           ;interrupt.c: 138:        ADFM = 1;
  2058  01FE  179F               	bsf	31,7	;volatile
  2059  01FF                     i1l1199:
  2060                           
  2061                           ;interrupt.c: 139:        CHS1 = 0;
  2062  01FF  119F               	bcf	31,3	;volatile
  2063  0200                     i1l1201:
  2064                           
  2065                           ;interrupt.c: 140:        CHS0 = 0;
  2066  0200  111F               	bcf	31,2	;volatile
  2067  0201                     i1l1203:
  2068                           
  2069                           ;interrupt.c: 141:        measureType = 2;
  2070  0201  3002               	movlw	2
  2071  0202  00A9               	movwf	??_MuxTemp
  2072  0203  0829               	movf	??_MuxTemp,w
  2073  0204  00B3               	movwf	_measureType
  2074  0205                     i1l1205:
  2075                           
  2076                           ;interrupt.c: 142:        ADIF = 0;
  2077  0205  130C               	bcf	12,6	;volatile
  2078  0206                     i1l1207:
  2079                           
  2080                           ;interrupt.c: 145:        _delay((unsigned long)((50)*(4000000/4000000.0)));
  2081  0206  3010               	movlw	16
  2082  0207  00A9               	movwf	??_MuxTemp
  2083  0208                     u77_27:
  2084  0208  0BA9               	decfsz	??_MuxTemp,f
  2085  0209  2A08               	goto	u77_27
  2086  020A  0000               	nop
  2087  020B                     i1l1209:
  2088                           
  2089                           ;interrupt.c: 146:        GO = 1;
  2090  020B  1283               	bcf	3,5	;RP0=0, select bank0
  2091  020C  149F               	bsf	31,1	;volatile
  2092  020D                     i1l82:
  2093  020D  0008               	return
  2094  020E                     __end_of_MuxTemp:
  2095  005E                     btemp	set	94	;btemp
  2096  005E                     wtemp0	set	94
  2097                           
  2098                           	psect	config
  2099                           
  2100                           ;Config register CONFIG @ 0x2007
  2101                           ;	Oscillator Selection bits
  2102                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  2103                           ;	Watchdog Timer Enable bit
  2104                           ;	WDTE = OFF, WDT disabled
  2105                           ;	Power-Up Timer Enable bit
  2106                           ;	PWRTE = OFF, PWRT disabled
  2107                           ;	GP3/MCLR pin function select
  2108                           ;	MCLRE = ON, GP3/MCLR pin function is MCLR
  2109                           ;	Brown-out Detect Enable bit
  2110                           ;	BOREN = ON, BOD enabled
  2111                           ;	Code Protection bit
  2112                           ;	CP = OFF, Program Memory code protection is disabled
  2113                           ;	Data Code Protection bit
  2114                           ;	CPD = OFF, Data memory code protection is disabled
  2115  2007                     	org	8199
  2116  2007  31F4               	dw	12788

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      9      20

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MuxVoltage
    _TwoShortTwoLong->_LongSound
    _TwoShortTwoLong->_ShortSound
    _TwoShortOneLong->_LongSound
    _TwoShortOneLong->_ShortSound
    _ThreeShort->_ShortSound
    _Init_uC->_LongSound

Critical Paths under _ISR in BANK0

    _ISR->_MuxTemp
    _ISR->i1_MuxVoltage

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              7 BANK0      2     2      0
                         _InitTimer0
                         _InitTimer1
                            _Init_uC
                         _MuxVoltage
                         _ThreeShort
                    _TwoShortOneLong
                    _TwoShortTwoLong
 ---------------------------------------------------------------------------------
 (1) _TwoShortTwoLong                                      0     0      0       0
                          _LongSound
                         _ShortSound
                            _TimeOut
 ---------------------------------------------------------------------------------
 (1) _TwoShortOneLong                                      0     0      0       0
                          _LongSound
                         _ShortSound
                            _TimeOut
 ---------------------------------------------------------------------------------
 (1) _ThreeShort                                           0     0      0       0
                         _ShortSound
                            _TimeOut
 ---------------------------------------------------------------------------------
 (2) _TimeOut                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ShortSound                                           1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _MuxVoltage                                           1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_uC                                              0     0      0       0
                          _LongSound
 ---------------------------------------------------------------------------------
 (2) _LongSound                                            1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0       0
                                              1 BANK0      5     5      0
                            _MuxTemp
                       i1_MuxVoltage
 ---------------------------------------------------------------------------------
 (4) i1_MuxVoltage                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _MuxTemp                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitTimer0
   _InitTimer1
   _Init_uC
     _LongSound
   _MuxVoltage
   _ThreeShort
     _ShortSound
     _TimeOut
   _TwoShortOneLong
     _LongSound
     _ShortSound
     _TimeOut
   _TwoShortTwoLong
     _LongSound
     _ShortSound
     _TimeOut

 _ISR (ROOT)
   _MuxTemp
   i1_MuxVoltage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               3E      9      14       4       32.3%
BITBANK0            3E      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      14       6        0.0%
ABS                  0      0      14       5        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Mar 02 22:31:16 2024

                     l79 021E                       _GO 00F9                      l230 024A  
                    l143 0174                      l135 0144                      l233 01BC  
                    l170 01FA                      l227 0252                      l155 01DB  
                    l163 019B                      l148 023F                      _GP2 002A  
                    _GP4 002C                      _GP5 002D                      _GIE 005F  
                    u400 0133                      u401 0132                      u410 013E  
                    u411 013D                      u420 014F                      u500 01DA  
                    u421 014E                      u501 01D9                      u430 015A  
                    u510 017B                      u431 0159                      u511 017A  
                    u440 0163                      u520 0182                      u441 0162  
                    u521 0181                      u450 016E                      u530 018A  
                    u451 016D                      u531 0189                      u380 011F  
                    u460 023A                      u540 0192                      _ISR 001D  
                    u381 011E                      u461 0239                      u541 0191  
                    u390 012A                      u470 01C3                      u550 019A  
                    u391 0129                      u471 01C2                      u551 0199  
                    u560 01E2                      u480 01CA                      u561 01E1  
                    u481 01C9                      u570 01E9                      u490 01D2  
                    u730 00EA                      u571 01E8                      u491 01D1  
                    u731 00E9                      u580 01F1                      u740 00F5  
                    u581 01F0                      u741 00F4                      u590 01F9  
                    u591 01F8                      u757 0219                      fsr0 0004  
      ??_TwoShortOneLong 0000                     ?_ISR 0029        ??_TwoShortTwoLong 0000  
                   l1211 020E                     l1221 0214                     l1213 0210  
                   l1301 0182                     l1231 024E                     l1223 0216  
                   l1215 0211                     l1311 0193                     l1303 0183  
                   l1233 0250                     l1241 0248                     l1225 0217  
                   l1217 0212                     l1161 012A                     l1321 01E9  
                   l1313 019A                     l1305 018A                     l1235 0251  
                   l1171 0145                     l1251 01A4                     l1243 019C  
                   l1227 021C                     l1219 0213                     l1163 0133  
                   l1155 0115                     l1323 01EA                     l1315 01DC  
                   l1307 018B                     l1229 024B                     l1237 0240  
                   l1181 0165                     l1173 014F                     l1261 01AE  
                   l1253 01A6                     l1245 019F                     l1165 0135  
                   l1157 011F                     l1325 01F1                     l1317 01E2  
                   l1309 0192                     l1421 00DF                     l1239 0247  
                   l1183 016E                     l1175 0151                     l1271 01B6  
                   l1263 01B0                     l1255 01A8                     l1247 01A1  
                   l1167 013E                     l1159 0121                     l1191 023C  
                   l1327 01F2                     l1319 01E3                     l1431 00F5  
                   l1423 00E4                     l1185 0170                     l1177 015A  
                   l1273 01B7                     l1265 01B1                     l1257 01AA  
                   l1249 01A2                     l1169 0140                     l1329 01F9  
                   l1281 01C3                     l1433 00F8                     l1441 00FE  
                   l1425 00EA                     l1179 0163                     l1275 01B8  
                   l1267 01B3                     l1259 01AC                     l1187 0230  
                   l1291 01D3                     l1283 01C4                     l1435 00FA  
                   l1427 00EE                     l1419 00DB                     l1277 01B9  
                   l1269 01B4                     l1189 023A                     l1293 01DA  
                   l1285 01CA                     l1437 00FC                     l1429 00EF  
                   l1287 01CB                     l1279 01BD                     l1295 0175  
                   l1289 01D2                     l1297 017B                     l1299 017C  
                   l1497 0106                     _ADIF 0066                     _ADFM 00FF  
                   _ADON 00F8                     _CHS0 00FA                     _CHS1 00FB  
                   _GPIO 0005                     _PEIE 005E                     i1l73 00B9  
                   i1l82 020D                     i1l76 00D1                     i1l79 022F  
                   _VCFG 00FE                     _TMR0 0001                     _cnt0 0028  
                   _cnt1 0022                     _main 00DB                     btemp 005E  
                   start 000D          __end_of_Init_uC 01BD                    ??_ISR 002A  
        __end_of_TimeOut 0240          __end_of_MuxTemp 020E                    ?_main 0029  
                  _CMCON 0019                    _ANSEL 009F                    _T1CON 0010  
                  _TMR1H 000F                    _TMR1L 000E                    u60_20 0021  
                  u60_21 0020                    u61_20 002C                    u61_21 002B  
                  u70_20 009F                    u62_20 003B                    u70_21 009E  
                  u62_21 003A                    u71_20 00AC                    u63_20 004B  
                  u71_21 00AB                    u63_21 004A                    u72_20 00B5  
                  u64_20 0054                    u72_21 00B4                    u64_21 0053  
                  u65_20 0059                    u65_21 0058                    u66_20 0065  
                  u66_21 0064                    u67_20 0074                    _VRCON 0099  
                  u67_21 0073                    u68_20 008A                    u68_21 0089  
                  u76_27 022A                    u69_20 0096                    u69_21 0095  
                  u77_27 0208                    pclath 000A                    status 0003  
                  wtemp0 005E          __initialization 000E               _InitTimer0 024B  
             _InitTimer1 0240             __end_of_main 0115                   ??_main 0030  
                 _ADCON0 001F                   _ADRESH 001E                   _ADRESL 009E  
                 i1l1201 0200                   i1l1203 0201                   i1l1205 0205  
                 i1l1207 0206                   i1l1209 020B                   i1l1401 00AC  
                 i1l1331 021F                   i1l1403 00B5                   i1l1411 00C1  
                 i1l1341 0225                   i1l1333 0221                   i1l1405 00BB  
                 i1l1343 0227                   i1l1335 0222                   i1l1407 00BF  
                 i1l1351 0021                   i1l1193 01FB                   i1l1345 0228  
                 i1l1337 0223                   i1l1361 0036                   i1l1353 0023  
                 i1l1195 01FD                   i1l1347 022D                   i1l1339 0224  
                 i1l1371 0054                   i1l1363 0037                   i1l1355 0027  
                 i1l1197 01FE                   i1l1381 006B                   i1l1373 0059  
                 i1l1357 0028                   i1l1349 001D                   i1l1199 01FF  
                 i1l1391 008A                   i1l1383 0074                   i1l1375 005C  
                 i1l1367 003C                   i1l1359 002C                   i1l1393 008D  
                 i1l1385 0075                   i1l1377 0065                   i1l1369 004B  
                 i1l1395 0096                   i1l1379 0066                   i1l1387 0079  
                 i1l1397 009F                   i1l1389 007B                   i1l1399 00A3  
                 i1l1499 00C9                   _TMR0IE 005D                   _TMR0IF 005A  
                 _TMR1IE 0460                   _TMR1IF 0060                   _TRISIO 0085  
              ??_Init_uC 0000                ??_TimeOut 0000                ??_MuxTemp 0029  
             _ThreeShort 01DC                   _msFlag 0027               _MuxVoltage 020E  
             _ShortSound 0115                   saved_w 005E  __end_of__initialization 001B  
            ?_InitTimer0 0029              ?_InitTimer1 0029           __pcstackCOMMON 0000  
           __pidataBANK0 0253          _TwoShortOneLong 01BD          _TwoShortTwoLong 0175  
      __end_of_LongSound 0175               __pbssBANK0 0020               __pmaintext 00DB  
             __pintentry 0004              ?_ThreeShort 0029              ?_MuxVoltage 0029  
            ?_ShortSound 0029                  _TRISIO0 0428                  _TRISIO1 0429  
                _TRISIO2 042A                  _TRISIO4 042C                  _TRISIO5 042D  
__end_of_TwoShortOneLong 01DC                  _Init_uC 019C                  _TimeOut 0230  
                _MuxTemp 01FB  __end_of_TwoShortTwoLong 019C                  __ptext1 0175  
                __ptext2 01BD                  __ptext3 01DC                  __ptext4 0230  
                __ptext5 0115                  __ptext6 020E                  __ptext7 019C  
                __ptext8 0145                  __ptext9 0240     end_of_initialization 001B  
          ?i1_MuxVoltage 0029          _soundModeSwitch 0024         ?_TwoShortOneLong 0029  
           ??_InitTimer0 0000             ??_InitTimer1 0000         ?_TwoShortTwoLong 0029  
           _firstMeasRes 0026            _secondMeasRes 0025      start_initialization 000E  
            __end_of_ISR 00DB       __end_of_InitTimer0 0253       __end_of_InitTimer1 024B  
         ??i1_MuxVoltage 0029                _LongSound 0145             ??_ThreeShort 0000  
            __pdataBANK0 0032             ??_MuxVoltage 002F             ??_ShortSound 002F  
              ___latbits 0000            __pcstackBANK0 0029               ?_LongSound 0029  
     __end_of_ThreeShort 01FB       __end_of_MuxVoltage 021F                 ?_Init_uC 0029  
     __end_of_ShortSound 0145                 ?_TimeOut 0029                 ?_MuxTemp 0029  
              _errorType 0032        interrupt_function 0004     __end_ofi1_MuxVoltage 0230  
            ??_LongSound 002F              _measureType 0033                 _adcValue 0020  
               __ptext10 024B                 __ptext11 001D                 __ptext12 021F  
               __ptext13 01FB                 intlevel1 0000               _OPTION_REG 0081  
           i1_MuxVoltage 021F  
