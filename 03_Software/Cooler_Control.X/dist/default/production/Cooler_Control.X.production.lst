

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Oct 01 17:57:19 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x5E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 29/04/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC12F675 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0019                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  0081                     	;# 
    68  0085                     	;# 
    69  008C                     	;# 
    70  008E                     	;# 
    71  0090                     	;# 
    72  0095                     	;# 
    73  0096                     	;# 
    74  0096                     	;# 
    75  0099                     	;# 
    76  009A                     	;# 
    77  009A                     	;# 
    78  009B                     	;# 
    79  009C                     	;# 
    80  009D                     	;# 
    81  009E                     	;# 
    82  009F                     	;# 
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0019                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  008C                     	;# 
   102  008E                     	;# 
   103  0090                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0096                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0019                     	;# 
   129  001E                     	;# 
   130  001F                     	;# 
   131  0081                     	;# 
   132  0085                     	;# 
   133  008C                     	;# 
   134  008E                     	;# 
   135  0090                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0096                     	;# 
   139  0099                     	;# 
   140  009A                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  009F                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0019                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  008C                     	;# 
   166  008E                     	;# 
   167  0090                     	;# 
   168  0095                     	;# 
   169  0096                     	;# 
   170  0096                     	;# 
   171  0099                     	;# 
   172  009A                     	;# 
   173  009A                     	;# 
   174  009B                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  009F                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  000A                     	;# 
   186  000B                     	;# 
   187  000C                     	;# 
   188  000E                     	;# 
   189  000E                     	;# 
   190  000F                     	;# 
   191  0010                     	;# 
   192  0019                     	;# 
   193  001E                     	;# 
   194  001F                     	;# 
   195  0081                     	;# 
   196  0085                     	;# 
   197  008C                     	;# 
   198  008E                     	;# 
   199  0090                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0096                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0019                     	;# 
   225  001E                     	;# 
   226  001F                     	;# 
   227  0081                     	;# 
   228  0085                     	;# 
   229  008C                     	;# 
   230  008E                     	;# 
   231  0090                     	;# 
   232  0095                     	;# 
   233  0096                     	;# 
   234  0096                     	;# 
   235  0099                     	;# 
   236  009A                     	;# 
   237  009A                     	;# 
   238  009B                     	;# 
   239  009C                     	;# 
   240  009D                     	;# 
   241  009E                     	;# 
   242  009F                     	;# 
   243  000B                     _INTCONbits	set	11
   244  0001                     _TMR0	set	1
   245  001E                     _ADRESH	set	30
   246  001F                     _ADCON0	set	31
   247  0005                     _GPIO	set	5
   248  0019                     _CMCON	set	25
   249  005D                     _T0IE	set	93
   250  005A                     _T0IF	set	90
   251  00FA                     _CHS0	set	250
   252  00FB                     _CHS1	set	251
   253  0066                     _ADIF	set	102
   254  00F9                     _GO	set	249
   255  00FF                     _ADFM	set	255
   256  005F                     _GIE	set	95
   257  00FE                     _VCFG	set	254
   258  00F8                     _ADON	set	248
   259  002C                     _GP4	set	44
   260  002D                     _GP5	set	45
   261  002A                     _GP2	set	42
   262  0081                     _OPTION_REG	set	129
   263  009E                     _ADRESL	set	158
   264  009F                     _ANSEL	set	159
   265  0085                     _TRISIO	set	133
   266  0099                     _VRCON	set	153
   267  0429                     _TRISIO1	set	1065
   268  0428                     _TRISIO0	set	1064
   269  042C                     _TRISIO4	set	1068
   270  042D                     _TRISIO5	set	1069
   271  042A                     _TRISIO2	set	1066
   272                           
   273                           	psect	cinit
   274  000C                     start_initialization:	
   275                           ; #config settings
   276                           
   277  000C                     __initialization:
   278                           
   279                           ; Clear objects allocated to BANK0
   280  000C  1283               	bcf	3,5	;RP0=0, select bank0
   281  000D  01A0               	clrf	__pbssBANK0& (0+127)
   282  000E  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   283  000F  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   284  0010  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   285  0011  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   286  0012  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   287  0013  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   288  0014                     end_of_initialization:	
   289                           ;End of C runtime variable initialization code
   290                           
   291  0014                     __end_of__initialization:
   292  0014  0183               	clrf	3
   293  0015  288C               	ljmp	_main	;jump to C main() function
   294                           
   295                           	psect	bssBANK0
   296  0020                     __pbssBANK0:
   297  0020                     _pulsePerTakt:
   298  0020                     	ds	2
   299  0022                     _pwmValue:
   300  0022                     	ds	2
   301  0024                     _adcValue:
   302  0024                     	ds	2
   303  0026                     _errorFlag:
   304  0026                     	ds	1
   305                           
   306                           	psect	cstackCOMMON
   307  0000                     __pcstackCOMMON:
   308  0000                     ??_main:
   309                           
   310                           	psect	cstackBANK0
   311  0027                     __pcstackBANK0:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0027                     ?_LongSound:
   315  0027                     ?_Init_uC:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0027                     ?_ISR:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0027                     ??_ISR:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0027                     ?_InitTimer0:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0027                     ?_main:	
   328                           ; 1 bytes @ 0x0
   329                           
   330                           
   331                           ; 1 bytes @ 0x0
   332  0027                     	ds	2
   333  0029                     ??_LongSound:
   334  0029                     ??_InitTimer0:	
   335                           ; 1 bytes @ 0x2
   336                           
   337                           
   338                           ; 1 bytes @ 0x2
   339  0029                     	ds	2
   340  002B                     ??_Init_uC:
   341                           
   342                           ; 1 bytes @ 0x4
   343  002B                     	ds	3
   344                           
   345                           	psect	maintext
   346  008C                     __pmaintext:	
   347 ;;
   348 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   349 ;;
   350 ;; *************** function _main *****************
   351 ;; Defined at:
   352 ;;		line 63 in file "main.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;		None
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg, status,2, status,0, pclath, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : B00/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMMON   BANK0
   366 ;;      Params:         0       0
   367 ;;      Locals:         0       0
   368 ;;      Temps:          0       0
   369 ;;      Totals:         0       0
   370 ;;Total ram usage:        0 bytes
   371 ;; Hardware stack levels required when called: 3
   372 ;; This function calls:
   373 ;;		_InitTimer0
   374 ;;		_Init_uC
   375 ;; This function is called by:
   376 ;;		Startup code after reset
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380  008C                     _main:	
   381                           ;psect for function _main
   382                           
   383  008C                     l1148:	
   384                           ;incstack = 0
   385                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   386                           
   387  008C  2084               	fcall	_InitTimer0
   388  008D  2016               	fcall	_Init_uC
   389  008E                     l1150:
   390  008E  178B               	bsf	11,7	;volatile
   391  008F                     l155:
   392  008F                     l156:
   393  008F  288F               	goto	l155
   394  0090  280B               	ljmp	start
   395  0091                     __end_of_main:
   396                           
   397                           	psect	text1
   398  0016                     __ptext1:	
   399 ;; *************** function _Init_uC *****************
   400 ;; Defined at:
   401 ;;		line 13 in file "ADC.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;		None
   404 ;; Auto vars:     Size  Location     Type
   405 ;;		None
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		wreg, status,2, status,0, pclath, cstack
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMMON   BANK0
   415 ;;      Params:         0       0
   416 ;;      Locals:         0       0
   417 ;;      Temps:          0       3
   418 ;;      Totals:         0       3
   419 ;;Total ram usage:        3 bytes
   420 ;; Hardware stack levels used: 1
   421 ;; Hardware stack levels required when called: 2
   422 ;; This function calls:
   423 ;;		_LongSound
   424 ;; This function is called by:
   425 ;;		_main
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429  0016                     _Init_uC:	
   430                           ;psect for function _Init_uC
   431                           
   432  0016                     l960:	
   433                           ;incstack = 0
   434                           ; Regs used in _Init_uC: [wreg+status,2+status,0+pclath+cstack]
   435                           
   436                           
   437                           ;ADC.c: 14:  CMCON = 0x07;
   438  0016  3007               	movlw	7
   439  0017  1283               	bcf	3,5	;RP0=0, select bank0
   440  0018  0099               	movwf	25	;volatile
   441  0019                     l962:
   442                           
   443                           ;ADC.c: 15:     VRCON = 0x00;
   444  0019  1683               	bsf	3,5	;RP0=1, select bank1
   445  001A  0199               	clrf	25	;volatile
   446  001B                     l964:
   447                           
   448                           ;ADC.c: 18:     TRISIO = 0;
   449  001B  0185               	clrf	5	;volatile
   450  001C                     l966:
   451                           
   452                           ;ADC.c: 19:     GPIO = 0;
   453  001C  1283               	bcf	3,5	;RP0=0, select bank0
   454  001D  0185               	clrf	5	;volatile
   455  001E                     l968:
   456                           
   457                           ;ADC.c: 22:     TRISIO2 = 0;
   458  001E  1683               	bsf	3,5	;RP0=1, select bank1
   459  001F  1105               	bcf	5,2	;volatile
   460  0020                     l970:
   461                           
   462                           ;ADC.c: 23:     GP2 = 0;
   463  0020  1283               	bcf	3,5	;RP0=0, select bank0
   464  0021  1105               	bcf	5,2	;volatile
   465  0022                     l972:
   466                           
   467                           ;ADC.c: 26:     TRISIO5 = 0;
   468  0022  1683               	bsf	3,5	;RP0=1, select bank1
   469  0023  1285               	bcf	5,5	;volatile
   470  0024                     l974:
   471                           
   472                           ;ADC.c: 27:     GP5 = 1;
   473  0024  1283               	bcf	3,5	;RP0=0, select bank0
   474  0025  1685               	bsf	5,5	;volatile
   475  0026                     l976:
   476                           
   477                           ;ADC.c: 30:     TRISIO4 = 0;
   478  0026  1683               	bsf	3,5	;RP0=1, select bank1
   479  0027  1205               	bcf	5,4	;volatile
   480  0028                     l978:
   481                           
   482                           ;ADC.c: 31:     GP4 = 0;
   483  0028  1283               	bcf	3,5	;RP0=0, select bank0
   484  0029  1205               	bcf	5,4	;volatile
   485  002A                     l980:
   486                           
   487                           ;ADC.c: 35:     ADON = 1;
   488  002A  141F               	bsf	31,0	;volatile
   489  002B                     l982:
   490                           
   491                           ;ADC.c: 37:     VCFG = 1;
   492  002B  171F               	bsf	31,6	;volatile
   493  002C                     l984:
   494                           
   495                           ;ADC.c: 38:     TRISIO0 = 1;
   496  002C  1683               	bsf	3,5	;RP0=1, select bank1
   497  002D  1405               	bsf	5,0	;volatile
   498  002E                     l986:
   499                           
   500                           ;ADC.c: 39:     TRISIO1 = 1;
   501  002E  1485               	bsf	5,1	;volatile
   502  002F                     l988:
   503                           
   504                           ;ADC.c: 41:     ANSEL = 0b00110011;
   505  002F  3033               	movlw	51
   506  0030  009F               	movwf	31	;volatile
   507  0031                     l990:
   508                           
   509                           ;ADC.c: 44:     GIE = 1;
   510  0031  178B               	bsf	11,7	;volatile
   511  0032                     l992:
   512                           
   513                           ;ADC.c: 46:     LongSound();
   514  0032  206E               	fcall	_LongSound
   515  0033                     l994:
   516                           
   517                           ;ADC.c: 47:     _delay((unsigned long)((700)*(4000000/4000.0)));
   518  0033  3004               	movlw	4
   519  0034  1283               	bcf	3,5	;RP0=0, select bank0
   520  0035  00AD               	movwf	??_Init_uC+2
   521  0036  308E               	movlw	142
   522  0037  00AC               	movwf	??_Init_uC+1
   523  0038  3012               	movlw	18
   524  0039  00AB               	movwf	??_Init_uC
   525  003A                     u317:
   526  003A  0BAB               	decfsz	??_Init_uC,f
   527  003B  283A               	goto	u317
   528  003C  0BAC               	decfsz	??_Init_uC+1,f
   529  003D  283A               	goto	u317
   530  003E  0BAD               	decfsz	??_Init_uC+2,f
   531  003F  283A               	goto	u317
   532  0040  0000               	nop
   533  0041                     l73:
   534  0041  0008               	return
   535  0042                     __end_of_Init_uC:
   536                           
   537                           	psect	text2
   538  006E                     __ptext2:	
   539 ;; *************** function _LongSound *****************
   540 ;; Defined at:
   541 ;;		line 6 in file "sounds.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0
   555 ;;      Params:         0       0
   556 ;;      Locals:         0       0
   557 ;;      Temps:          0       2
   558 ;;      Totals:         0       2
   559 ;;Total ram usage:        2 bytes
   560 ;; Hardware stack levels used: 1
   561 ;; Hardware stack levels required when called: 1
   562 ;; This function calls:
   563 ;;		Nothing
   564 ;; This function is called by:
   565 ;;		_Init_uC
   566 ;;		_TwoShortOneLong
   567 ;;		_TwoShortTwoLong
   568 ;;		_ThreeLongOneShort
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572  006E                     _LongSound:	
   573                           ;psect for function _LongSound
   574                           
   575  006E                     l954:	
   576                           ;incstack = 0
   577                           ; Regs used in _LongSound: [wreg]
   578                           
   579                           
   580                           ;sounds.c: 7:    GP2 = 1;
   581  006E  1283               	bcf	3,5	;RP0=0, select bank0
   582  006F  1505               	bsf	5,2	;volatile
   583  0070                     l956:
   584                           
   585                           ;sounds.c: 8:     _delay((unsigned long)((150)*(4000000/4000.0)));
   586  0070  30C3               	movlw	195
   587  0071  00AA               	movwf	??_LongSound+1
   588  0072  30CD               	movlw	205
   589  0073  00A9               	movwf	??_LongSound
   590  0074                     u327:
   591  0074  0BA9               	decfsz	??_LongSound,f
   592  0075  2874               	goto	u327
   593  0076  0BAA               	decfsz	??_LongSound+1,f
   594  0077  2874               	goto	u327
   595  0078                     l958:
   596                           
   597                           ;sounds.c: 9:    GP2 = 0;
   598  0078  1283               	bcf	3,5	;RP0=0, select bank0
   599  0079  1105               	bcf	5,2	;volatile
   600                           
   601                           ;sounds.c: 10:     _delay((unsigned long)((80)*(4000000/4000.0)));
   602  007A  3068               	movlw	104
   603  007B  00AA               	movwf	??_LongSound+1
   604  007C  30E4               	movlw	228
   605  007D  00A9               	movwf	??_LongSound
   606  007E                     u337:
   607  007E  0BA9               	decfsz	??_LongSound,f
   608  007F  287E               	goto	u337
   609  0080  0BAA               	decfsz	??_LongSound+1,f
   610  0081  287E               	goto	u337
   611  0082  0000               	nop
   612  0083                     l165:
   613  0083  0008               	return
   614  0084                     __end_of_LongSound:
   615                           
   616                           	psect	text3
   617  0084                     __ptext3:	
   618 ;; *************** function _InitTimer0 *****************
   619 ;; Defined at:
   620 ;;		line 4 in file "timer0.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, status,2, status,0
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMMON   BANK0
   634 ;;      Params:         0       0
   635 ;;      Locals:         0       0
   636 ;;      Temps:          0       1
   637 ;;      Totals:         0       1
   638 ;;Total ram usage:        1 bytes
   639 ;; Hardware stack levels used: 1
   640 ;; Hardware stack levels required when called: 1
   641 ;; This function calls:
   642 ;;		Nothing
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648  0084                     _InitTimer0:	
   649                           ;psect for function _InitTimer0
   650                           
   651  0084                     l996:	
   652                           ;incstack = 0
   653                           ; Regs used in _InitTimer0: [wreg+status,2+status,0]
   654                           
   655                           
   656                           ;timer0.c: 7:  OPTION_REG &= 0xC0;
   657  0084  30C0               	movlw	192
   658  0085  1283               	bcf	3,5	;RP0=0, select bank0
   659  0086  00A9               	movwf	??_InitTimer0
   660  0087  0829               	movf	??_InitTimer0,w
   661  0088  1683               	bsf	3,5	;RP0=1, select bank1
   662  0089  0581               	andwf	1,f	;volatile
   663  008A                     l998:
   664                           
   665                           ;timer0.c: 8:  T0IE = 1;
   666  008A  168B               	bsf	11,5	;volatile
   667  008B                     l140:
   668  008B  0008               	return
   669  008C                     __end_of_InitTimer0:
   670                           
   671                           	psect	text4
   672  0042                     __ptext4:	
   673 ;; *************** function _ISR *****************
   674 ;; Defined at:
   675 ;;		line 7 in file "interrupt.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;		None
   678 ;; Auto vars:     Size  Location     Type
   679 ;;		None
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg, status,2
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMMON   BANK0
   689 ;;      Params:         0       0
   690 ;;      Locals:         0       0
   691 ;;      Temps:          0       2
   692 ;;      Totals:         0       2
   693 ;;Total ram usage:        2 bytes
   694 ;; Hardware stack levels used: 1
   695 ;; This function calls:
   696 ;;		Nothing
   697 ;; This function is called by:
   698 ;;		Interrupt level 1
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702  0042                     _ISR:	
   703                           ;psect for function _ISR
   704                           
   705  0042                     i1l1136:
   706                           
   707                           ;interrupt.c: 9:       TMR0 = 200;
   708  0042  30C8               	movlw	200
   709  0043  0081               	movwf	1	;volatile
   710                           
   711                           ;interrupt.c: 10:       pulsePerTakt++;
   712  0044  3001               	movlw	1
   713  0045  07A0               	addwf	_pulsePerTakt,f
   714  0046  1803               	skipnc
   715  0047  0AA1               	incf	_pulsePerTakt+1,f
   716  0048  3000               	movlw	0
   717  0049  07A1               	addwf	_pulsePerTakt+1,f
   718  004A                     i1l1138:
   719                           
   720                           ;interrupt.c: 11:    if(T0IF)
   721  004A  1D0B               	btfss	11,2	;volatile
   722  004B  284D               	goto	u28_21
   723  004C  284E               	goto	u28_20
   724  004D                     u28_21:
   725  004D  285C               	goto	i1l1144
   726  004E                     u28_20:
   727  004E                     i1l1140:
   728                           
   729                           ;interrupt.c: 12:     {;interrupt.c: 13:         if (pulsePerTakt < pwmValue)
   730  004E  0823               	movf	_pwmValue+1,w
   731  004F  0221               	subwf	_pulsePerTakt+1,w
   732  0050  1D03               	skipz
   733  0051  2854               	goto	u29_25
   734  0052  0822               	movf	_pwmValue,w
   735  0053  0220               	subwf	_pulsePerTakt,w
   736  0054                     u29_25:
   737  0054  1803               	skipnc
   738  0055  2857               	goto	u29_21
   739  0056  2858               	goto	u29_20
   740  0057                     u29_21:
   741  0057  285A               	goto	i1l130
   742  0058                     u29_20:
   743  0058                     i1l1142:
   744                           
   745                           ;interrupt.c: 14:          {GP4 = 1;}
   746  0058  1605               	bsf	5,4	;volatile
   747  0059  285B               	goto	i1l131
   748  005A                     i1l130:	
   749                           ;interrupt.c: 15:         else
   750                           
   751                           
   752                           ;interrupt.c: 16:    {GP4 = 0;}
   753  005A  1205               	bcf	5,4	;volatile
   754  005B                     i1l131:
   755                           
   756                           ;interrupt.c: 17:   T0IF = 0;
   757  005B  110B               	bcf	11,2	;volatile
   758  005C                     i1l1144:
   759                           
   760                           ;interrupt.c: 19:       if (pulsePerTakt > 100)
   761  005C  3000               	movlw	0
   762  005D  0221               	subwf	_pulsePerTakt+1,w
   763  005E  3065               	movlw	101
   764  005F  1903               	skipnz
   765  0060  0220               	subwf	_pulsePerTakt,w
   766  0061  1C03               	skipc
   767  0062  2864               	goto	u30_21
   768  0063  2865               	goto	u30_20
   769  0064                     u30_21:
   770  0064  2867               	goto	i1l133
   771  0065                     u30_20:
   772  0065                     i1l1146:
   773                           
   774                           ;interrupt.c: 20:        {;interrupt.c: 21:          pulsePerTakt = 0;
   775  0065  01A0               	clrf	_pulsePerTakt
   776  0066  01A1               	clrf	_pulsePerTakt+1
   777  0067                     i1l133:
   778  0067  0828               	movf	??_ISR+1,w
   779  0068  008A               	movwf	10
   780  0069  0E27               	swapf	??_ISR,w
   781  006A  0083               	movwf	3
   782  006B  0EDE               	swapf	btemp,f
   783  006C  0E5E               	swapf	btemp,w
   784  006D  0009               	retfie
   785  006E                     __end_of_ISR:
   786  005E                     btemp	set	94	;btemp
   787  005E                     wtemp0	set	94
   788                           
   789                           	psect	intentry
   790  0004                     __pintentry:	
   791                           ;incstack = 0
   792                           ; Regs used in _ISR: [wreg+status,2]
   793                           
   794  0004                     interrupt_function:
   795  005E                     saved_w	set	btemp
   796  0004  00DE               	movwf	btemp
   797  0005  0E03               	swapf	3,w
   798  0006  1283               	bcf	3,5	;RP0=0, select bank0
   799  0007  00A7               	movwf	??_ISR
   800  0008  080A               	movf	10,w
   801  0009  00A8               	movwf	??_ISR+1
   802  000A  2842               	ljmp	_ISR
   803                           
   804                           	psect	config
   805                           
   806                           ;Config register CONFIG @ 0x2007
   807                           ;	Oscillator Selection bits
   808                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
   809                           ;	Watchdog Timer Enable bit
   810                           ;	WDTE = OFF, WDT disabled
   811                           ;	Power-Up Timer Enable bit
   812                           ;	PWRTE = OFF, PWRT disabled
   813                           ;	GP3/MCLR pin function select
   814                           ;	MCLRE = ON, GP3/MCLR pin function is MCLR
   815                           ;	Brown-out Detect Enable bit
   816                           ;	BOREN = ON, BOD enabled
   817                           ;	Code Protection bit
   818                           ;	CP = OFF, Program Memory code protection is disabled
   819                           ;	Data Code Protection bit
   820                           ;	CPD = OFF, Data memory code protection is disabled
   821  2007                     	org	8199
   822  2007  31F4               	dw	12788

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      7      14

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Init_uC
    _Init_uC->_LongSound

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _InitTimer0
                            _Init_uC
 ---------------------------------------------------------------------------------
 (1) _Init_uC                                              3     3      0       0
                                              4 BANK0      3     3      0
                          _LongSound
 ---------------------------------------------------------------------------------
 (2) _LongSound                                            2     2      0       0
                                              2 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitTimer0
   _Init_uC
     _LongSound

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      7       E       4       22.6%
ABS                  0      0       E       5        0.0%
DATA                 0      0       E       6        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Oct 01 17:57:19 2023

                     l73 0041                       _GO 00F9             _pulsePerTakt 0020  
                    l140 008B                      l155 008F                      l156 008F  
                    l165 0083                      l960 0016                      l954 006E  
                    l970 0020                      l962 0019                      l956 0070  
                    l980 002A                      l972 0022                      l964 001B  
                    l958 0078                      l990 0031                      l982 002B  
                    l974 0024                      l966 001C                      _GP2 002A  
                    l992 0032                      l984 002C                      l976 0026  
                    l968 001E                      _GP4 002C                      _GP5 002D  
                    l994 0033                      l986 002E                      l978 0028  
                    _GIE 005F                      l996 0084                      l988 002F  
                    l998 008A                      u317 003A                      u327 0074  
                    u337 007E                      _ISR 0042                     ?_ISR 0027  
                   l1150 008E                     l1148 008C                     _ADIF 0066  
                   _ADFM 00FF                     _ADON 00F8                     _CHS0 00FA  
                   _CHS1 00FB                     _T0IE 005D                     _T0IF 005A  
                   _GPIO 0005                     _VCFG 00FE                     _TMR0 0001  
                   _main 008C                     btemp 005E                     start 000B  
        __end_of_Init_uC 0042                    ??_ISR 0027                    ?_main 0027  
                  _CMCON 0019                    _ANSEL 009F                    i1l130 005A  
                  i1l131 005B                    i1l133 0067                    u30_20 0065  
                  u30_21 0064                    u28_20 004E                    u28_21 004D  
                  u29_20 0058                    u29_21 0057                    u29_25 0054  
                  _VRCON 0099                    pclath 000A                    status 0003  
                  wtemp0 005E          __initialization 000C               _InitTimer0 0084  
           __end_of_main 0091                   ??_main 0000                   _ADCON0 001F  
                 _ADRESH 001E                   _ADRESL 009E                   i1l1140 004E  
                 i1l1142 0058                   i1l1144 005C                   i1l1136 0042  
                 i1l1146 0065                   i1l1138 004A                   _TRISIO 0085  
              ??_Init_uC 002B                   saved_w 005E  __end_of__initialization 0014  
            ?_InitTimer0 0027           __pcstackCOMMON 0000        __end_of_LongSound 0084  
             __pbssBANK0 0020               __pmaintext 008C               __pintentry 0004  
                _TRISIO0 0428                  _TRISIO1 0429                  _TRISIO2 042A  
                _TRISIO4 042C                  _TRISIO5 042D                  _Init_uC 0016  
                __ptext1 0016                  __ptext2 006E                  __ptext3 0084  
                __ptext4 0042     end_of_initialization 0014             ??_InitTimer0 0029  
    start_initialization 000C              __end_of_ISR 006E       __end_of_InitTimer0 008C  
              _LongSound 006E                ___latbits 0000            __pcstackBANK0 0027  
             ?_LongSound 0027                 ?_Init_uC 0027                _errorFlag 0026  
      interrupt_function 0004              ??_LongSound 0029                 _adcValue 0024  
               _pwmValue 0022               _INTCONbits 000B                 intlevel1 0000  
             _OPTION_REG 0081  
