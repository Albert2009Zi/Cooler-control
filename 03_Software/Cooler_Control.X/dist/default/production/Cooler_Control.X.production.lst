

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Mar 02 21:11:18 2024

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x5E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 29/04/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC12F675 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0019                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  008C                     	;# 
    82  008E                     	;# 
    83  0090                     	;# 
    84  0095                     	;# 
    85  0096                     	;# 
    86  0096                     	;# 
    87  0099                     	;# 
    88  009A                     	;# 
    89  009A                     	;# 
    90  009B                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009E                     	;# 
    94  009F                     	;# 
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0019                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  008C                     	;# 
   114  008E                     	;# 
   115  0090                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0096                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000E                     	;# 
   137  000E                     	;# 
   138  000F                     	;# 
   139  0010                     	;# 
   140  0019                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  008C                     	;# 
   146  008E                     	;# 
   147  0090                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0096                     	;# 
   151  0099                     	;# 
   152  009A                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  000A                     	;# 
   166  000B                     	;# 
   167  000C                     	;# 
   168  000E                     	;# 
   169  000E                     	;# 
   170  000F                     	;# 
   171  0010                     	;# 
   172  0019                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  008C                     	;# 
   178  008E                     	;# 
   179  0090                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0096                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  000A                     	;# 
   198  000B                     	;# 
   199  000C                     	;# 
   200  000E                     	;# 
   201  000E                     	;# 
   202  000F                     	;# 
   203  0010                     	;# 
   204  0019                     	;# 
   205  001E                     	;# 
   206  001F                     	;# 
   207  0081                     	;# 
   208  0085                     	;# 
   209  008C                     	;# 
   210  008E                     	;# 
   211  0090                     	;# 
   212  0095                     	;# 
   213  0096                     	;# 
   214  0096                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009A                     	;# 
   218  009B                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223                           
   224                           	psect	idataBANK0
   225  0268                     __pidataBANK0:
   226                           
   227                           ;initializer for _errorType
   228  0268  3401               	retlw	1
   229                           
   230                           ;initializer for _measureType
   231  0269  3401               	retlw	1
   232  001F                     _ADCON0	set	31
   233  0005                     _GPIO	set	5
   234  0019                     _CMCON	set	25
   235  0010                     _T1CON	set	16
   236  001E                     _ADRESH	set	30
   237  000E                     _TMR1L	set	14
   238  000F                     _TMR1H	set	15
   239  0001                     _TMR0	set	1
   240  00F9                     _GO	set	249
   241  00FA                     _CHS0	set	250
   242  00FB                     _CHS1	set	251
   243  00FF                     _ADFM	set	255
   244  00F8                     _ADON	set	248
   245  005F                     _GIE	set	95
   246  005E                     _PEIE	set	94
   247  00FE                     _VCFG	set	254
   248  0060                     _T1IF	set	96
   249  005D                     _T0IE	set	93
   250  002C                     _GP4	set	44
   251  002A                     _GP2	set	42
   252  002D                     _GP5	set	45
   253  0066                     _ADIF	set	102
   254  0060                     _TMR1IF	set	96
   255  005A                     _T0IF	set	90
   256  005A                     _TMR0IF	set	90
   257  009F                     _ANSEL	set	159
   258  0085                     _TRISIO	set	133
   259  0099                     _VRCON	set	153
   260  0081                     _OPTION_REG	set	129
   261  009E                     _ADRESL	set	158
   262  0429                     _TRISIO1	set	1065
   263  0428                     _TRISIO0	set	1064
   264  042C                     _TRISIO4	set	1068
   265  042D                     _TRISIO5	set	1069
   266  042A                     _TRISIO2	set	1066
   267  0460                     _T1IE	set	1120
   268                           
   269                           	psect	cinit
   270  000E                     start_initialization:	
   271                           ; #config settings
   272                           
   273  000E                     __initialization:
   274                           
   275                           ; Initialize objects allocated to BANK0
   276  000E  2268               	fcall	__pidataBANK0	;fetch initializer
   277  000F  00AD               	movwf	__pdataBANK0& (0+127)
   278  0010  2269               	fcall	__pidataBANK0+1	;fetch initializer
   279  0011  00AE               	movwf	(__pdataBANK0+1)& (0+127)
   280                           
   281                           ; Clear objects allocated to BANK0
   282  0012  01A7               	clrf	__pbssBANK0& (0+127)
   283  0013  01A8               	clrf	(__pbssBANK0+1)& (0+127)
   284  0014  01A9               	clrf	(__pbssBANK0+2)& (0+127)
   285  0015  01AA               	clrf	(__pbssBANK0+3)& (0+127)
   286  0016  01AB               	clrf	(__pbssBANK0+4)& (0+127)
   287  0017  01AC               	clrf	(__pbssBANK0+5)& (0+127)
   288  0018                     end_of_initialization:	
   289                           ;End of C runtime variable initialization code
   290                           
   291  0018                     __end_of__initialization:
   292  0018  0183               	clrf	3
   293  0019  2A62               	ljmp	_main	;jump to C main() function
   294                           
   295                           	psect	bssBANK0
   296  0027                     __pbssBANK0:
   297  0027                     _adcValue:
   298  0027                     	ds	2
   299  0029                     _cnt1:
   300  0029                     	ds	2
   301  002B                     _soundModeSwitch:
   302  002B                     	ds	1
   303  002C                     _msFlag:
   304  002C                     	ds	1
   305                           
   306                           	psect	dataBANK0
   307  002D                     __pdataBANK0:
   308  002D                     _errorType:
   309  002D                     	ds	1
   310  002E                     _measureType:
   311  002E                     	ds	1
   312                           
   313                           	psect	cstackCOMMON
   314  0000                     __pcstackCOMMON:
   315  0000                     ??_TwoShortOneLong:
   316  0000                     ??_TwoShortTwoLong:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0000                     ??_ThreeShort:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0000                     ??_MuxVoltage:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0000                     ??_InitTimer0:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0000                     ??_InitTimer1:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0000                     ??_Init_uC:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0000                     ??_main:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0000                     ??_TimeOut:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0000                     ??i1_MuxVoltage:	
   341                           ; 1 bytes @ 0x0
   342                           
   343                           
   344                           	psect	cstackBANK0
   345  0020                     __pcstackBANK0:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0020                     ?_TwoShortOneLong:
   349  0020                     ?_TwoShortTwoLong:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0020                     ?_ThreeShort:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0020                     ?_MuxTemp:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0020                     ??_MuxTemp:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0020                     ?_MuxVoltage:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0020                     ?_InitTimer0:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0020                     ?_InitTimer1:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0020                     ?_Init_uC:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0020                     ?_ISR:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0020                     ?_main:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0020                     ?_ShortSound:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0020                     ??_ShortSound:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0020                     ?_LongSound:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0020                     ?_TimeOut:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0020                     ?i1_LongSound:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0020                     ??i1_LongSound:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0020                     ?i1_MuxVoltage:	
   398                           ; 1 bytes @ 0x0
   399                           
   400                           
   401                           ; 1 bytes @ 0x0
   402  0020                     	ds	1
   403  0021                     ??_ISR:
   404                           
   405                           ; 1 bytes @ 0x1
   406  0021                     	ds	5
   407  0026                     ??_LongSound:
   408                           
   409                           ; 1 bytes @ 0x6
   410  0026                     	ds	1
   411                           
   412                           	psect	maintext
   413  0262                     __pmaintext:	
   414 ;;
   415 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   416 ;;
   417 ;; *************** function _main *****************
   418 ;; Defined at:
   419 ;;		line 67 in file "main.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, status,2, status,0, pclath, cstack
   428 ;; Tracked objects:
   429 ;;		On entry : B00/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0
   433 ;;      Params:         0       0
   434 ;;      Locals:         0       0
   435 ;;      Temps:          0       0
   436 ;;      Totals:         0       0
   437 ;;Total ram usage:        0 bytes
   438 ;; Hardware stack levels required when called: 5
   439 ;; This function calls:
   440 ;;		_InitTimer0
   441 ;;		_InitTimer1
   442 ;;		_Init_uC
   443 ;;		_MuxVoltage
   444 ;; This function is called by:
   445 ;;		Startup code after reset
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449  0262                     _main:	
   450                           ;psect for function _main
   451                           
   452  0262                     l1459:	
   453                           ;incstack = 0
   454                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   455                           
   456                           
   457                           ;main.c: 69:     InitTimer0();
   458  0262  225A               	fcall	_InitTimer0
   459                           
   460                           ;main.c: 70:     InitTimer1();
   461  0263  224F               	fcall	_InitTimer1
   462                           
   463                           ;main.c: 71:     Init_uC();
   464  0264  21AB               	fcall	_Init_uC
   465                           
   466                           ;main.c: 72:     MuxVoltage();
   467  0265  221D               	fcall	_MuxVoltage
   468  0266                     l88:	
   469                           ;main.c: 74:     while(1){
   470                           
   471  0266                     l89:	
   472                           ;main.c: 76:  }
   473                           
   474  0266  2A66               	goto	l88
   475  0267  280D               	ljmp	start
   476  0268                     __end_of_main:
   477                           
   478                           	psect	text1
   479  021D                     __ptext1:	
   480 ;; *************** function _MuxVoltage *****************
   481 ;; Defined at:
   482 ;;		line 69 in file "init_periphery.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg, status,2, status,0
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMMON   BANK0
   496 ;;      Params:         0       0
   497 ;;      Locals:         0       0
   498 ;;      Temps:          0       0
   499 ;;      Totals:         0       0
   500 ;;Total ram usage:        0 bytes
   501 ;; Hardware stack levels used: 1
   502 ;; Hardware stack levels required when called: 3
   503 ;; This function calls:
   504 ;;		Nothing
   505 ;; This function is called by:
   506 ;;		_main
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510  021D                     _MuxVoltage:	
   511                           ;psect for function _MuxVoltage
   512                           
   513  021D                     l1287:	
   514                           ;incstack = 0
   515                           ; Regs used in _MuxVoltage: [wreg+status,2+status,0]
   516                           
   517                           
   518                           ;init_periphery.c: 70:        ADCON0 = 0;
   519  021D  1283               	bcf	3,5	;RP0=0, select bank0
   520  021E  019F               	clrf	31	;volatile
   521  021F                     l1289:
   522                           
   523                           ;init_periphery.c: 71:        ADON = 1;
   524  021F  141F               	bsf	31,0	;volatile
   525  0220                     l1291:
   526                           
   527                           ;init_periphery.c: 72:        ADFM = 1;
   528  0220  179F               	bsf	31,7	;volatile
   529  0221                     l1293:
   530                           
   531                           ;init_periphery.c: 73:        CHS1 = 0;
   532  0221  119F               	bcf	31,3	;volatile
   533  0222                     l1295:
   534                           
   535                           ;init_periphery.c: 74:        CHS0 = 1;
   536  0222  151F               	bsf	31,2	;volatile
   537  0223                     l1297:
   538                           
   539                           ;init_periphery.c: 75:        measureType = 1;
   540  0223  01AE               	clrf	_measureType
   541  0224  0AAE               	incf	_measureType,f
   542  0225                     l1299:
   543                           
   544                           ;init_periphery.c: 76:        ADIF = 0;
   545  0225  130C               	bcf	12,6	;volatile
   546  0226                     l1301:	
   547                           ;init_periphery.c: 77:        while (msFlag != 1);
   548                           
   549  0226  032C               	decf	_msFlag,w
   550  0227  1D03               	btfss	3,2
   551  0228  2A2A               	goto	u701
   552  0229  2A2B               	goto	u700
   553  022A                     u701:
   554  022A  2A26               	goto	l1301
   555  022B                     u700:
   556  022B                     l1303:
   557                           
   558                           ;init_periphery.c: 78:        msFlag = 0;
   559  022B  01AC               	clrf	_msFlag
   560  022C                     l1305:
   561                           
   562                           ;init_periphery.c: 79:        GO = 1;
   563  022C  149F               	bsf	31,1	;volatile
   564  022D                     l227:
   565  022D  0008               	return
   566  022E                     __end_of_MuxVoltage:
   567                           
   568                           	psect	text2
   569  01AB                     __ptext2:	
   570 ;; *************** function _Init_uC *****************
   571 ;; Defined at:
   572 ;;		line 34 in file "init_periphery.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;		None
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg, status,2, status,0, pclath, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMMON   BANK0
   586 ;;      Params:         0       0
   587 ;;      Locals:         0       0
   588 ;;      Temps:          0       0
   589 ;;      Totals:         0       0
   590 ;;Total ram usage:        0 bytes
   591 ;; Hardware stack levels used: 1
   592 ;; Hardware stack levels required when called: 4
   593 ;; This function calls:
   594 ;;		_LongSound
   595 ;; This function is called by:
   596 ;;		_main
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600  01AB                     _Init_uC:	
   601                           ;psect for function _Init_uC
   602                           
   603  01AB                     l1321:	
   604                           ;incstack = 0
   605                           ; Regs used in _Init_uC: [wreg+status,2+status,0+pclath+cstack]
   606                           
   607                           
   608                           ;init_periphery.c: 35:     CMCON = 0x07;
   609  01AB  3007               	movlw	7
   610  01AC  1283               	bcf	3,5	;RP0=0, select bank0
   611  01AD  0099               	movwf	25	;volatile
   612  01AE                     l1323:
   613                           
   614                           ;init_periphery.c: 36:     VRCON = 0x00;
   615  01AE  1683               	bsf	3,5	;RP0=1, select bank1
   616  01AF  0199               	clrf	25	;volatile
   617  01B0                     l1325:
   618                           
   619                           ;init_periphery.c: 39:     TRISIO = 0;
   620  01B0  0185               	clrf	5	;volatile
   621  01B1                     l1327:
   622                           
   623                           ;init_periphery.c: 40:     GPIO = 0;
   624  01B1  1283               	bcf	3,5	;RP0=0, select bank0
   625  01B2  0185               	clrf	5	;volatile
   626  01B3                     l1329:
   627                           
   628                           ;init_periphery.c: 43:     TRISIO2 = 0;
   629  01B3  1683               	bsf	3,5	;RP0=1, select bank1
   630  01B4  1105               	bcf	5,2	;volatile
   631  01B5                     l1331:
   632                           
   633                           ;init_periphery.c: 44:     GP2 = 0;
   634  01B5  1283               	bcf	3,5	;RP0=0, select bank0
   635  01B6  1105               	bcf	5,2	;volatile
   636  01B7                     l1333:
   637                           
   638                           ;init_periphery.c: 47:     TRISIO5 = 0;
   639  01B7  1683               	bsf	3,5	;RP0=1, select bank1
   640  01B8  1285               	bcf	5,5	;volatile
   641  01B9                     l1335:
   642                           
   643                           ;init_periphery.c: 48:     GP5 = 1;
   644  01B9  1283               	bcf	3,5	;RP0=0, select bank0
   645  01BA  1685               	bsf	5,5	;volatile
   646  01BB                     l1337:
   647                           
   648                           ;init_periphery.c: 51:     TRISIO4 = 0;
   649  01BB  1683               	bsf	3,5	;RP0=1, select bank1
   650  01BC  1205               	bcf	5,4	;volatile
   651  01BD                     l1339:
   652                           
   653                           ;init_periphery.c: 52:     GP4 = 0;
   654  01BD  1283               	bcf	3,5	;RP0=0, select bank0
   655  01BE  1205               	bcf	5,4	;volatile
   656  01BF                     l1341:
   657                           
   658                           ;init_periphery.c: 55:     VCFG = 1;
   659  01BF  171F               	bsf	31,6	;volatile
   660  01C0                     l1343:
   661                           
   662                           ;init_periphery.c: 56:     TRISIO0 = 1;
   663  01C0  1683               	bsf	3,5	;RP0=1, select bank1
   664  01C1  1405               	bsf	5,0	;volatile
   665  01C2                     l1345:
   666                           
   667                           ;init_periphery.c: 57:     TRISIO1 = 1;
   668  01C2  1485               	bsf	5,1	;volatile
   669  01C3                     l1347:
   670                           
   671                           ;init_periphery.c: 59:     ANSEL = 0b00110011;
   672  01C3  3033               	movlw	51
   673  01C4  009F               	movwf	31	;volatile
   674  01C5                     l1349:
   675                           
   676                           ;init_periphery.c: 61:     PEIE = 1;
   677  01C5  170B               	bsf	11,6	;volatile
   678  01C6                     l1351:
   679                           
   680                           ;init_periphery.c: 62:     GIE = 1;
   681  01C6  178B               	bsf	11,7	;volatile
   682  01C7                     l1353:
   683                           
   684                           ;init_periphery.c: 64:     LongSound();
   685  01C7  20F4               	fcall	_LongSound
   686  01C8                     l1355:
   687                           
   688                           ;init_periphery.c: 65:     adcValue = 0;
   689  01C8  1283               	bcf	3,5	;RP0=0, select bank0
   690  01C9  01A7               	clrf	_adcValue
   691  01CA  01A8               	clrf	_adcValue+1
   692  01CB                     l221:
   693  01CB  0008               	return
   694  01CC                     __end_of_Init_uC:
   695                           
   696                           	psect	text3
   697  00F4                     __ptext3:	
   698 ;; *************** function _LongSound *****************
   699 ;; Defined at:
   700 ;;		line 17 in file "sounds.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;		None
   705 ;; Return value:  Size  Location     Type
   706 ;;                  1    wreg      void 
   707 ;; Registers used:
   708 ;;		wreg, status,2, status,0
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMMON   BANK0
   714 ;;      Params:         0       0
   715 ;;      Locals:         0       0
   716 ;;      Temps:          0       1
   717 ;;      Totals:         0       1
   718 ;;Total ram usage:        1 bytes
   719 ;; Hardware stack levels used: 1
   720 ;; Hardware stack levels required when called: 3
   721 ;; This function calls:
   722 ;;		Nothing
   723 ;; This function is called by:
   724 ;;		_Init_uC
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728  00F4                     _LongSound:	
   729                           ;psect for function _LongSound
   730                           
   731  00F4                     l1177:	
   732                           ;incstack = 0
   733                           ; Regs used in _LongSound: [wreg+status,2+status,0]
   734                           
   735                           
   736                           ;sounds.c: 18:    if(cnt1 <= 200) GP2 = 1;
   737  00F4  3000               	movlw	0
   738  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   739  00F6  022A               	subwf	_cnt1+1,w
   740  00F7  30C9               	movlw	201
   741  00F8  1903               	skipnz
   742  00F9  0229               	subwf	_cnt1,w
   743  00FA  1803               	skipnc
   744  00FB  28FD               	goto	u471
   745  00FC  28FE               	goto	u470
   746  00FD                     u471:
   747  00FD  2900               	goto	l1181
   748  00FE                     u470:
   749  00FE                     l1179:
   750  00FE  1505               	bsf	5,2	;volatile
   751  00FF  2923               	goto	l113
   752  0100                     l1181:
   753  0100  3000               	movlw	0
   754  0101  022A               	subwf	_cnt1+1,w
   755  0102  30C9               	movlw	201
   756  0103  1903               	skipnz
   757  0104  0229               	subwf	_cnt1,w
   758  0105  1C03               	skipc
   759  0106  2908               	goto	u481
   760  0107  2909               	goto	u480
   761  0108                     u481:
   762  0108  2914               	goto	l1187
   763  0109                     u480:
   764  0109                     l1183:
   765  0109  3001               	movlw	1
   766  010A  022A               	subwf	_cnt1+1,w
   767  010B  305F               	movlw	95
   768  010C  1903               	skipnz
   769  010D  0229               	subwf	_cnt1,w
   770  010E  1803               	skipnc
   771  010F  2911               	goto	u491
   772  0110  2912               	goto	u490
   773  0111                     u491:
   774  0111  2914               	goto	l1187
   775  0112                     u490:
   776  0112                     l1185:
   777  0112  1105               	bcf	5,2	;volatile
   778  0113  2923               	goto	l113
   779  0114                     l1187:
   780  0114  3001               	movlw	1
   781  0115  022A               	subwf	_cnt1+1,w
   782  0116  305F               	movlw	95
   783  0117  1903               	skipnz
   784  0118  0229               	subwf	_cnt1,w
   785  0119  1C03               	skipc
   786  011A  291C               	goto	u501
   787  011B  291D               	goto	u500
   788  011C                     u501:
   789  011C  2923               	goto	l113
   790  011D                     u500:
   791  011D                     l1189:
   792                           
   793                           ;sounds.c: 21:       cnt1 = 0;
   794  011D  01A9               	clrf	_cnt1
   795  011E  01AA               	clrf	_cnt1+1
   796  011F                     l1191:
   797                           
   798                           ;sounds.c: 22:       soundModeSwitch++;
   799  011F  3001               	movlw	1
   800  0120  00A6               	movwf	??_LongSound
   801  0121  0826               	movf	??_LongSound,w
   802  0122  07AB               	addwf	_soundModeSwitch,f	;volatile
   803  0123                     l113:
   804  0123  0008               	return
   805  0124                     __end_of_LongSound:
   806                           
   807                           	psect	text4
   808  024F                     __ptext4:	
   809 ;; *************** function _InitTimer1 *****************
   810 ;; Defined at:
   811 ;;		line 22 in file "init_periphery.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMMON   BANK0
   825 ;;      Params:         0       0
   826 ;;      Locals:         0       0
   827 ;;      Temps:          0       0
   828 ;;      Totals:         0       0
   829 ;;Total ram usage:        0 bytes
   830 ;; Hardware stack levels used: 1
   831 ;; Hardware stack levels required when called: 3
   832 ;; This function calls:
   833 ;;		Nothing
   834 ;; This function is called by:
   835 ;;		_main
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839  024F                     _InitTimer1:	
   840                           ;psect for function _InitTimer1
   841                           
   842  024F                     l1315:	
   843                           ;incstack = 0
   844                           ; Regs used in _InitTimer1: [wreg]
   845                           
   846                           
   847                           ;init_periphery.c: 24:          TMR1H = 0xFC;
   848  024F  30FC               	movlw	252
   849  0250  1283               	bcf	3,5	;RP0=0, select bank0
   850  0251  008F               	movwf	15	;volatile
   851                           
   852                           ;init_periphery.c: 25:   TMR1L = 0x17;
   853  0252  3017               	movlw	23
   854  0253  008E               	movwf	14	;volatile
   855                           
   856                           ;init_periphery.c: 27:   T1CON = 0x01;
   857  0254  3001               	movlw	1
   858  0255  0090               	movwf	16	;volatile
   859  0256                     l1317:
   860                           
   861                           ;init_periphery.c: 29:   T1IF = 0;
   862  0256  100C               	bcf	12,0	;volatile
   863  0257                     l1319:
   864                           
   865                           ;init_periphery.c: 30:   T1IE = 1;
   866  0257  1683               	bsf	3,5	;RP0=1, select bank1
   867  0258  140C               	bsf	12,0	;volatile
   868  0259                     l218:
   869  0259  0008               	return
   870  025A                     __end_of_InitTimer1:
   871                           
   872                           	psect	text5
   873  025A                     __ptext5:	
   874 ;; *************** function _InitTimer0 *****************
   875 ;; Defined at:
   876 ;;		line 13 in file "init_periphery.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;		None
   879 ;; Auto vars:     Size  Location     Type
   880 ;;		None
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		wreg, status,2
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMMON   BANK0
   890 ;;      Params:         0       0
   891 ;;      Locals:         0       0
   892 ;;      Temps:          0       0
   893 ;;      Totals:         0       0
   894 ;;Total ram usage:        0 bytes
   895 ;; Hardware stack levels used: 1
   896 ;; Hardware stack levels required when called: 3
   897 ;; This function calls:
   898 ;;		Nothing
   899 ;; This function is called by:
   900 ;;		_main
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904  025A                     _InitTimer0:	
   905                           ;psect for function _InitTimer0
   906                           
   907  025A                     l1307:	
   908                           ;incstack = 0
   909                           ; Regs used in _InitTimer0: [wreg+status,2]
   910                           
   911                           
   912                           ;init_periphery.c: 15:     OPTION_REG = 0b11000001;
   913  025A  30C1               	movlw	193
   914  025B  1683               	bsf	3,5	;RP0=1, select bank1
   915  025C  0081               	movwf	1	;volatile
   916  025D                     l1309:
   917                           
   918                           ;init_periphery.c: 16:     TMR0 = 0;
   919  025D  1283               	bcf	3,5	;RP0=0, select bank0
   920  025E  0181               	clrf	1	;volatile
   921  025F                     l1311:
   922                           
   923                           ;init_periphery.c: 17:     T0IF = 0;
   924  025F  110B               	bcf	11,2	;volatile
   925  0260                     l1313:
   926                           
   927                           ;init_periphery.c: 18:     T0IE = 1;
   928  0260  168B               	bsf	11,5	;volatile
   929  0261                     l215:
   930  0261  0008               	return
   931  0262                     __end_of_InitTimer0:
   932                           
   933                           	psect	text6
   934  001A                     __ptext6:	
   935 ;; *************** function _ISR *****************
   936 ;; Defined at:
   937 ;;		line 18 in file "interrupt.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      void 
   944 ;; Registers used:
   945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMMON   BANK0
   951 ;;      Params:         0       0
   952 ;;      Locals:         0       0
   953 ;;      Temps:          0       5
   954 ;;      Totals:         0       5
   955 ;;Total ram usage:        5 bytes
   956 ;; Hardware stack levels used: 1
   957 ;; Hardware stack levels required when called: 2
   958 ;; This function calls:
   959 ;;		_MuxTemp
   960 ;;		_ThreeShort
   961 ;;		_TwoShortOneLong
   962 ;;		_TwoShortTwoLong
   963 ;;		i1_MuxVoltage
   964 ;; This function is called by:
   965 ;;		Interrupt level 1
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969  001A                     _ISR:	
   970                           ;psect for function _ISR
   971                           
   972  001A                     i1l1377:
   973                           
   974                           ;interrupt.c: 21:     if (TMR0IF == 1){
   975  001A  1D0B               	btfss	11,2	;volatile
   976  001B  281D               	goto	u72_21
   977  001C  281E               	goto	u72_20
   978  001D                     u72_21:
   979  001D  2823               	goto	i1l1385
   980  001E                     u72_20:
   981  001E                     i1l1379:
   982                           
   983                           ;interrupt.c: 22:         msFlag = 1;
   984  001E  01AC               	clrf	_msFlag
   985  001F  0AAC               	incf	_msFlag,f
   986  0020                     i1l1381:
   987                           
   988                           ;interrupt.c: 23:  TMR0 = 6;
   989  0020  3006               	movlw	6
   990  0021  0081               	movwf	1	;volatile
   991  0022                     i1l1383:
   992                           
   993                           ;interrupt.c: 24:  T0IF = 0;
   994  0022  110B               	bcf	11,2	;volatile
   995  0023                     i1l1385:
   996                           
   997                           ;interrupt.c: 27:     if (TMR1IF == 1){
   998  0023  1C0C               	btfss	12,0	;volatile
   999  0024  2826               	goto	u73_21
  1000  0025  2827               	goto	u73_20
  1001  0026                     u73_21:
  1002  0026  2850               	goto	i1l50
  1003  0027                     u73_20:
  1004  0027                     i1l1387:
  1005                           
  1006                           ;interrupt.c: 29:   TMR1H = 0xFC;
  1007  0027  30FC               	movlw	252
  1008  0028  008F               	movwf	15	;volatile
  1009                           
  1010                           ;interrupt.c: 30:   TMR1L = 0x17;
  1011  0029  3017               	movlw	23
  1012  002A  008E               	movwf	14	;volatile
  1013                           
  1014                           ;interrupt.c: 32:          cnt1++;
  1015  002B  3001               	movlw	1
  1016  002C  07A9               	addwf	_cnt1,f
  1017  002D  1803               	skipnc
  1018  002E  0AAA               	incf	_cnt1+1,f
  1019  002F  3000               	movlw	0
  1020  0030  07AA               	addwf	_cnt1+1,f
  1021                           
  1022                           ;interrupt.c: 34:   switch(errorType){
  1023  0031  2838               	goto	i1l1397
  1024  0032                     i1l1389:
  1025                           
  1026                           ;interrupt.c: 40:     TwoShortOneLong();
  1027  0032  21CC               	fcall	_TwoShortOneLong
  1028                           
  1029                           ;interrupt.c: 41:      break;
  1030  0033  284E               	goto	i1l53
  1031  0034                     i1l1391:
  1032                           
  1033                           ;interrupt.c: 44:            TwoShortTwoLong();
  1034  0034  2184               	fcall	_TwoShortTwoLong
  1035                           
  1036                           ;interrupt.c: 45:      break;
  1037  0035  284E               	goto	i1l53
  1038  0036                     i1l1393:
  1039                           
  1040                           ;interrupt.c: 48:            ThreeShort();
  1041  0036  21EB               	fcall	_ThreeShort
  1042                           
  1043                           ;interrupt.c: 49:      break;
  1044  0037  284E               	goto	i1l53
  1045  0038                     i1l1397:
  1046  0038  082D               	movf	_errorType,w
  1047  0039  00A1               	movwf	??_ISR
  1048  003A  01A2               	clrf	??_ISR+1
  1049                           
  1050                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1051                           ; Switch size 1, requested type "simple"
  1052                           ; Number of cases is 1, Range of values is 0 to 0
  1053                           ; switch strategies available:
  1054                           ; Name         Instructions Cycles
  1055                           ; simple_byte            4     3 (average)
  1056                           ; direct_byte            7     6 (fixed)
  1057                           ; jumptable            260     6 (fixed)
  1058                           ;	Chosen strategy is simple_byte
  1059  003B  0822               	movf	??_ISR+1,w
  1060  003C  3A00               	xorlw	0	; case 0
  1061  003D  1903               	skipnz
  1062  003E  2840               	goto	i1l1521
  1063  003F  284E               	goto	i1l53
  1064  0040                     i1l1521:
  1065                           
  1066                           ; Switch size 1, requested type "simple"
  1067                           ; Number of cases is 4, Range of values is 1 to 5
  1068                           ; switch strategies available:
  1069                           ; Name         Instructions Cycles
  1070                           ; simple_byte           13     7 (average)
  1071                           ; direct_byte           14     9 (fixed)
  1072                           ; jumptable            263     9 (fixed)
  1073                           ;	Chosen strategy is simple_byte
  1074  0040  0821               	movf	??_ISR,w
  1075  0041  3A01               	xorlw	1	; case 1
  1076  0042  1903               	skipnz
  1077  0043  284E               	goto	i1l53
  1078  0044  3A03               	xorlw	3	; case 2
  1079  0045  1903               	skipnz
  1080  0046  2832               	goto	i1l1389
  1081  0047  3A01               	xorlw	1	; case 3
  1082  0048  1903               	skipnz
  1083  0049  2834               	goto	i1l1391
  1084  004A  3A06               	xorlw	6	; case 5
  1085  004B  1903               	skipnz
  1086  004C  2836               	goto	i1l1393
  1087  004D  284E               	goto	i1l53
  1088  004E                     i1l53:
  1089                           
  1090                           ;interrupt.c: 55:          TMR1IF = 0;
  1091  004E  1283               	bcf	3,5	;RP0=0, select bank0
  1092  004F  100C               	bcf	12,0	;volatile
  1093  0050                     i1l50:	
  1094                           ;interrupt.c: 56:     }
  1095                           
  1096                           
  1097                           ;interrupt.c: 58:     if (ADIF == 1){
  1098  0050  1F0C               	btfss	12,6	;volatile
  1099  0051  2853               	goto	u74_21
  1100  0052  2854               	goto	u74_20
  1101  0053                     u74_21:
  1102  0053  28EA               	goto	i1l75
  1103  0054                     u74_20:
  1104  0054  28DA               	goto	i1l1445
  1105  0055                     i1l1401:
  1106                           
  1107                           ;interrupt.c: 62:         adcValue = (uint16_t) ((ADRESH << 8) + ADRESL);
  1108  0055  081E               	movf	30,w	;volatile
  1109  0056  00A8               	movwf	_adcValue+1
  1110  0057  1683               	bsf	3,5	;RP0=1, select bank1
  1111  0058  081E               	movf	30,w	;volatile
  1112  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1113  005A  00A7               	movwf	_adcValue
  1114                           
  1115                           ;interrupt.c: 64:  if ((adcValue > 190) && (adcValue < 285) && (errorType == 1)){
  1116  005B  3000               	movlw	0
  1117  005C  0228               	subwf	_adcValue+1,w
  1118  005D  30BF               	movlw	191
  1119  005E  1903               	skipnz
  1120  005F  0227               	subwf	_adcValue,w
  1121  0060  1C03               	skipc
  1122  0061  2863               	goto	u75_21
  1123  0062  2864               	goto	u75_20
  1124  0063                     u75_21:
  1125  0063  2875               	goto	i1l1409
  1126  0064                     u75_20:
  1127  0064                     i1l1403:
  1128  0064  3001               	movlw	1
  1129  0065  0228               	subwf	_adcValue+1,w
  1130  0066  301D               	movlw	29
  1131  0067  1903               	skipnz
  1132  0068  0227               	subwf	_adcValue,w
  1133  0069  1803               	skipnc
  1134  006A  286C               	goto	u76_21
  1135  006B  286D               	goto	u76_20
  1136  006C                     u76_21:
  1137  006C  2875               	goto	i1l1409
  1138  006D                     u76_20:
  1139  006D                     i1l1405:
  1140  006D  032D               	decf	_errorType,w
  1141  006E  1D03               	btfss	3,2
  1142  006F  2871               	goto	u77_21
  1143  0070  2872               	goto	u77_20
  1144  0071                     u77_21:
  1145  0071  2875               	goto	i1l1409
  1146  0072                     u77_20:
  1147  0072                     i1l1407:
  1148                           
  1149                           ;interrupt.c: 65:            GP5 = 0;
  1150  0072  1285               	bcf	5,5	;volatile
  1151                           
  1152                           ;interrupt.c: 66:     GP2 = 0;
  1153  0073  1105               	bcf	5,2	;volatile
  1154                           
  1155                           ;interrupt.c: 67:            }
  1156  0074  2892               	goto	i1l1421
  1157  0075                     i1l1409:
  1158  0075  3000               	movlw	0
  1159  0076  0228               	subwf	_adcValue+1,w
  1160  0077  30BF               	movlw	191
  1161  0078  1903               	skipnz
  1162  0079  0227               	subwf	_adcValue,w
  1163  007A  1803               	skipnc
  1164  007B  287D               	goto	u78_21
  1165  007C  287E               	goto	u78_20
  1166  007D                     u78_21:
  1167  007D  2884               	goto	i1l1415
  1168  007E                     u78_20:
  1169  007E                     i1l1411:
  1170                           
  1171                           ;interrupt.c: 69:            GP5 = 1;
  1172  007E  1685               	bsf	5,5	;volatile
  1173  007F                     i1l1413:
  1174                           
  1175                           ;interrupt.c: 70:     errorType = 2;
  1176  007F  3002               	movlw	2
  1177  0080  00A1               	movwf	??_ISR
  1178  0081  0821               	movf	??_ISR,w
  1179  0082  00AD               	movwf	_errorType
  1180                           
  1181                           ;interrupt.c: 71:            }
  1182  0083  2892               	goto	i1l1421
  1183  0084                     i1l1415:
  1184  0084  3001               	movlw	1
  1185  0085  0228               	subwf	_adcValue+1,w
  1186  0086  301D               	movlw	29
  1187  0087  1903               	skipnz
  1188  0088  0227               	subwf	_adcValue,w
  1189  0089  1C03               	skipc
  1190  008A  288C               	goto	u79_21
  1191  008B  288D               	goto	u79_20
  1192  008C                     u79_21:
  1193  008C  2892               	goto	i1l1421
  1194  008D                     u79_20:
  1195  008D                     i1l1417:
  1196                           
  1197                           ;interrupt.c: 73:            GP5 = 1;
  1198  008D  1685               	bsf	5,5	;volatile
  1199  008E                     i1l1419:
  1200                           
  1201                           ;interrupt.c: 74:     errorType = 3;
  1202  008E  3003               	movlw	3
  1203  008F  00A1               	movwf	??_ISR
  1204  0090  0821               	movf	??_ISR,w
  1205  0091  00AD               	movwf	_errorType
  1206  0092                     i1l1421:
  1207                           
  1208                           ;interrupt.c: 76:           MuxTemp();
  1209  0092  220A               	fcall	_MuxTemp
  1210                           
  1211                           ;interrupt.c: 77:         break;
  1212  0093  28EA               	goto	i1l75
  1213  0094                     i1l1423:
  1214                           
  1215                           ;interrupt.c: 81:   adcValue = (uint16_t) ((ADRESH << 8) + ADRESL);
  1216  0094  081E               	movf	30,w	;volatile
  1217  0095  00A8               	movwf	_adcValue+1
  1218  0096  1683               	bsf	3,5	;RP0=1, select bank1
  1219  0097  081E               	movf	30,w	;volatile
  1220  0098  1283               	bcf	3,5	;RP0=0, select bank0
  1221  0099  00A7               	movwf	_adcValue
  1222                           
  1223                           ;interrupt.c: 83:             if (adcValue < 200)
  1224  009A  3000               	movlw	0
  1225  009B  0228               	subwf	_adcValue+1,w
  1226  009C  30C8               	movlw	200
  1227  009D  1903               	skipnz
  1228  009E  0227               	subwf	_adcValue,w
  1229  009F  1803               	skipnc
  1230  00A0  28A2               	goto	u80_21
  1231  00A1  28A3               	goto	u80_20
  1232  00A2                     u80_21:
  1233  00A2  28A6               	goto	i1l1427
  1234  00A3                     u80_20:
  1235  00A3                     i1l1425:
  1236                           
  1237                           ;interrupt.c: 84:          {;interrupt.c: 85:         GP5 = 1;
  1238  00A3  1685               	bsf	5,5	;volatile
  1239                           
  1240                           ;interrupt.c: 86:         GP4 = 0;
  1241  00A4  1205               	bcf	5,4	;volatile
  1242                           
  1243                           ;interrupt.c: 89:     }
  1244  00A5  28D8               	goto	i1l1441
  1245  00A6                     i1l1427:
  1246  00A6  3000               	movlw	0
  1247  00A7  0228               	subwf	_adcValue+1,w
  1248  00A8  30C8               	movlw	200
  1249  00A9  1903               	skipnz
  1250  00AA  0227               	subwf	_adcValue,w
  1251  00AB  1C03               	skipc
  1252  00AC  28AE               	goto	u81_21
  1253  00AD  28AF               	goto	u81_20
  1254  00AE                     u81_21:
  1255  00AE  28BC               	goto	i1l1433
  1256  00AF                     u81_20:
  1257  00AF                     i1l1429:
  1258  00AF  3003               	movlw	3
  1259  00B0  0228               	subwf	_adcValue+1,w
  1260  00B1  3070               	movlw	112
  1261  00B2  1903               	skipnz
  1262  00B3  0227               	subwf	_adcValue,w
  1263  00B4  1803               	skipnc
  1264  00B5  28B7               	goto	u82_21
  1265  00B6  28B8               	goto	u82_20
  1266  00B7                     u82_21:
  1267  00B7  28BC               	goto	i1l1433
  1268  00B8                     u82_20:
  1269  00B8                     i1l1431:
  1270                           
  1271                           ;interrupt.c: 93:           GP4 = 0;
  1272  00B8  1205               	bcf	5,4	;volatile
  1273                           
  1274                           ;interrupt.c: 94:    errorType = 1;
  1275  00B9  01AD               	clrf	_errorType
  1276  00BA  0AAD               	incf	_errorType,f
  1277                           
  1278                           ;interrupt.c: 95:                        }
  1279  00BB  28D8               	goto	i1l1441
  1280  00BC                     i1l1433:
  1281  00BC  3003               	movlw	3
  1282  00BD  0228               	subwf	_adcValue+1,w
  1283  00BE  3070               	movlw	112
  1284  00BF  1903               	skipnz
  1285  00C0  0227               	subwf	_adcValue,w
  1286  00C1  1C03               	skipc
  1287  00C2  28C4               	goto	u83_21
  1288  00C3  28C5               	goto	u83_20
  1289  00C4                     u83_21:
  1290  00C4  28D2               	goto	i1l72
  1291  00C5                     u83_20:
  1292  00C5                     i1l1435:
  1293  00C5  3003               	movlw	3
  1294  00C6  0228               	subwf	_adcValue+1,w
  1295  00C7  30CA               	movlw	202
  1296  00C8  1903               	skipnz
  1297  00C9  0227               	subwf	_adcValue,w
  1298  00CA  1803               	skipnc
  1299  00CB  28CD               	goto	u84_21
  1300  00CC  28CE               	goto	u84_20
  1301  00CD                     u84_21:
  1302  00CD  28D2               	goto	i1l72
  1303  00CE                     u84_20:
  1304  00CE                     i1l1437:
  1305                           
  1306                           ;interrupt.c: 112:           GP4 = 1;
  1307  00CE  1605               	bsf	5,4	;volatile
  1308                           
  1309                           ;interrupt.c: 113:    errorType = 1;
  1310  00CF  01AD               	clrf	_errorType
  1311  00D0  0AAD               	incf	_errorType,f
  1312                           
  1313                           ;interrupt.c: 114:                        }
  1314  00D1  28D8               	goto	i1l1441
  1315  00D2                     i1l72:	
  1316                           ;interrupt.c: 117:              else {
  1317                           
  1318                           
  1319                           ;interrupt.c: 119:           GP4 = 1;
  1320  00D2  1605               	bsf	5,4	;volatile
  1321                           
  1322                           ;interrupt.c: 120:                  GP5 = 1;
  1323  00D3  1685               	bsf	5,5	;volatile
  1324  00D4                     i1l1439:
  1325                           
  1326                           ;interrupt.c: 121:                         errorType = 5;
  1327  00D4  3005               	movlw	5
  1328  00D5  00A1               	movwf	??_ISR
  1329  00D6  0821               	movf	??_ISR,w
  1330  00D7  00AD               	movwf	_errorType
  1331  00D8                     i1l1441:
  1332                           
  1333                           ;interrupt.c: 123:   MuxVoltage();
  1334  00D8  222E               	fcall	i1_MuxVoltage
  1335                           
  1336                           ;interrupt.c: 124:  break;
  1337  00D9  28EA               	goto	i1l75
  1338  00DA                     i1l1445:
  1339  00DA  082E               	movf	_measureType,w
  1340  00DB  00A1               	movwf	??_ISR
  1341  00DC  01A2               	clrf	??_ISR+1
  1342                           
  1343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1344                           ; Switch size 1, requested type "simple"
  1345                           ; Number of cases is 1, Range of values is 0 to 0
  1346                           ; switch strategies available:
  1347                           ; Name         Instructions Cycles
  1348                           ; simple_byte            4     3 (average)
  1349                           ; direct_byte            7     6 (fixed)
  1350                           ; jumptable            260     6 (fixed)
  1351                           ;	Chosen strategy is simple_byte
  1352  00DD  0822               	movf	??_ISR+1,w
  1353  00DE  3A00               	xorlw	0	; case 0
  1354  00DF  1903               	skipnz
  1355  00E0  28E2               	goto	i1l1523
  1356  00E1  28EA               	goto	i1l75
  1357  00E2                     i1l1523:
  1358                           
  1359                           ; Switch size 1, requested type "simple"
  1360                           ; Number of cases is 2, Range of values is 1 to 2
  1361                           ; switch strategies available:
  1362                           ; Name         Instructions Cycles
  1363                           ; simple_byte            7     4 (average)
  1364                           ; direct_byte           11     9 (fixed)
  1365                           ; jumptable            263     9 (fixed)
  1366                           ;	Chosen strategy is simple_byte
  1367  00E2  0821               	movf	??_ISR,w
  1368  00E3  3A01               	xorlw	1	; case 1
  1369  00E4  1903               	skipnz
  1370  00E5  2855               	goto	i1l1401
  1371  00E6  3A03               	xorlw	3	; case 2
  1372  00E7  1903               	skipnz
  1373  00E8  2894               	goto	i1l1423
  1374  00E9  28EA               	goto	i1l75
  1375  00EA                     i1l75:
  1376  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1377  00EB  0825               	movf	??_ISR+4,w
  1378  00EC  008A               	movwf	10
  1379  00ED  0824               	movf	??_ISR+3,w
  1380  00EE  0084               	movwf	4
  1381  00EF  0E23               	swapf	??_ISR+2,w
  1382  00F0  0083               	movwf	3
  1383  00F1  0EDE               	swapf	btemp,f
  1384  00F2  0E5E               	swapf	btemp,w
  1385  00F3  0009               	retfie
  1386  00F4                     __end_of_ISR:
  1387                           
  1388                           	psect	intentry
  1389  0004                     __pintentry:	
  1390                           ;incstack = 0
  1391                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1392                           
  1393  0004                     interrupt_function:
  1394  005E                     saved_w	set	btemp
  1395  0004  00DE               	movwf	btemp
  1396  0005  0E03               	swapf	3,w
  1397  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1398  0007  00A3               	movwf	??_ISR+2
  1399  0008  0804               	movf	4,w
  1400  0009  00A4               	movwf	??_ISR+3
  1401  000A  080A               	movf	10,w
  1402  000B  00A5               	movwf	??_ISR+4
  1403  000C  281A               	ljmp	_ISR
  1404                           
  1405                           	psect	text7
  1406  022E                     __ptext7:	
  1407 ;; *************** function i1_MuxVoltage *****************
  1408 ;; Defined at:
  1409 ;;		line 69 in file "init_periphery.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;		None
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;		None
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg, status,2, status,0
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMMON   BANK0
  1423 ;;      Params:         0       0
  1424 ;;      Locals:         0       0
  1425 ;;      Temps:          0       0
  1426 ;;      Totals:         0       0
  1427 ;;Total ram usage:        0 bytes
  1428 ;; Hardware stack levels used: 1
  1429 ;; This function calls:
  1430 ;;		Nothing
  1431 ;; This function is called by:
  1432 ;;		_ISR
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436  022E                     i1_MuxVoltage:	
  1437                           ;psect for function i1_MuxVoltage
  1438                           
  1439  022E                     i1l1357:	
  1440                           ;incstack = 0
  1441                           ; Regs used in i1_MuxVoltage: [wreg+status,2+status,0]
  1442                           
  1443                           
  1444                           ;init_periphery.c: 70:        ADCON0 = 0;
  1445  022E  1283               	bcf	3,5	;RP0=0, select bank0
  1446  022F  019F               	clrf	31	;volatile
  1447  0230                     i1l1359:
  1448                           
  1449                           ;init_periphery.c: 71:        ADON = 1;
  1450  0230  141F               	bsf	31,0	;volatile
  1451  0231                     i1l1361:
  1452                           
  1453                           ;init_periphery.c: 72:        ADFM = 1;
  1454  0231  179F               	bsf	31,7	;volatile
  1455  0232                     i1l1363:
  1456                           
  1457                           ;init_periphery.c: 73:        CHS1 = 0;
  1458  0232  119F               	bcf	31,3	;volatile
  1459  0233                     i1l1365:
  1460                           
  1461                           ;init_periphery.c: 74:        CHS0 = 1;
  1462  0233  151F               	bsf	31,2	;volatile
  1463  0234                     i1l1367:
  1464                           
  1465                           ;init_periphery.c: 75:        measureType = 1;
  1466  0234  01AE               	clrf	_measureType
  1467  0235  0AAE               	incf	_measureType,f
  1468  0236                     i1l1369:
  1469                           
  1470                           ;init_periphery.c: 76:        ADIF = 0;
  1471  0236  130C               	bcf	12,6	;volatile
  1472  0237                     i1l1371:	
  1473                           ;init_periphery.c: 77:        while (msFlag != 1);
  1474                           
  1475  0237  032C               	decf	_msFlag,w
  1476  0238  1D03               	btfss	3,2
  1477  0239  2A3B               	goto	u71_21
  1478  023A  2A3C               	goto	u71_20
  1479  023B                     u71_21:
  1480  023B  2A37               	goto	i1l1371
  1481  023C                     u71_20:
  1482  023C                     i1l1373:
  1483                           
  1484                           ;init_periphery.c: 78:        msFlag = 0;
  1485  023C  01AC               	clrf	_msFlag
  1486  023D                     i1l1375:
  1487                           
  1488                           ;init_periphery.c: 79:        GO = 1;
  1489  023D  149F               	bsf	31,1	;volatile
  1490  023E                     i1l227:
  1491  023E  0008               	return
  1492  023F                     __end_ofi1_MuxVoltage:
  1493                           
  1494                           	psect	text8
  1495  0184                     __ptext8:	
  1496 ;; *************** function _TwoShortTwoLong *****************
  1497 ;; Defined at:
  1498 ;;		line 52 in file "sounds.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg, status,2, status,0, pclath, cstack
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMMON   BANK0
  1512 ;;      Params:         0       0
  1513 ;;      Locals:         0       0
  1514 ;;      Temps:          0       0
  1515 ;;      Totals:         0       0
  1516 ;;Total ram usage:        0 bytes
  1517 ;; Hardware stack levels used: 1
  1518 ;; Hardware stack levels required when called: 1
  1519 ;; This function calls:
  1520 ;;		_ShortSound
  1521 ;;		_TimeOut
  1522 ;;		i1_LongSound
  1523 ;; This function is called by:
  1524 ;;		_ISR
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528  0184                     _TwoShortTwoLong:	
  1529                           ;psect for function _TwoShortTwoLong
  1530                           
  1531  0184                     i1l1231:	
  1532                           ;incstack = 0
  1533                           ; Regs used in _TwoShortTwoLong: [wreg+status,2+status,0+pclath+cstack]
  1534                           
  1535                           
  1536                           ;sounds.c: 54:        if (soundModeSwitch == 0){
  1537  0184  1283               	bcf	3,5	;RP0=0, select bank0
  1538  0185  082B               	movf	_soundModeSwitch,w	;volatile
  1539  0186  1D03               	btfss	3,2
  1540  0187  2989               	goto	u60_21
  1541  0188  298A               	goto	u60_20
  1542  0189                     u60_21:
  1543  0189  298B               	goto	i1l1235
  1544  018A                     u60_20:
  1545  018A                     i1l1233:
  1546                           
  1547                           ;sounds.c: 55:           ShortSound();
  1548  018A  2154               	fcall	_ShortSound
  1549  018B                     i1l1235:
  1550                           
  1551                           ;sounds.c: 57:        if (soundModeSwitch == 1){
  1552  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1553  018C  032B               	decf	_soundModeSwitch,w	;volatile
  1554  018D  1D03               	btfss	3,2
  1555  018E  2990               	goto	u61_21
  1556  018F  2991               	goto	u61_20
  1557  0190                     u61_21:
  1558  0190  2992               	goto	i1l1239
  1559  0191                     u61_20:
  1560  0191                     i1l1237:
  1561                           
  1562                           ;sounds.c: 58:           ShortSound();
  1563  0191  2154               	fcall	_ShortSound
  1564  0192                     i1l1239:
  1565                           
  1566                           ;sounds.c: 60:        if (soundModeSwitch == 2){
  1567  0192  3002               	movlw	2
  1568  0193  1283               	bcf	3,5	;RP0=0, select bank0
  1569  0194  062B               	xorwf	_soundModeSwitch,w	;volatile
  1570  0195  1D03               	btfss	3,2
  1571  0196  2998               	goto	u62_21
  1572  0197  2999               	goto	u62_20
  1573  0198                     u62_21:
  1574  0198  299A               	goto	i1l1243
  1575  0199                     u62_20:
  1576  0199                     i1l1241:
  1577                           
  1578                           ;sounds.c: 61:           LongSound();
  1579  0199  2124               	fcall	i1_LongSound
  1580  019A                     i1l1243:
  1581                           
  1582                           ;sounds.c: 63:        if (soundModeSwitch == 3){
  1583  019A  3003               	movlw	3
  1584  019B  1283               	bcf	3,5	;RP0=0, select bank0
  1585  019C  062B               	xorwf	_soundModeSwitch,w	;volatile
  1586  019D  1D03               	btfss	3,2
  1587  019E  29A0               	goto	u63_21
  1588  019F  29A1               	goto	u63_20
  1589  01A0                     u63_21:
  1590  01A0  29A2               	goto	i1l1247
  1591  01A1                     u63_20:
  1592  01A1                     i1l1245:
  1593                           
  1594                           ;sounds.c: 64:           LongSound();
  1595  01A1  2124               	fcall	i1_LongSound
  1596  01A2                     i1l1247:
  1597                           
  1598                           ;sounds.c: 66:        if (soundModeSwitch > 3) {
  1599  01A2  3004               	movlw	4
  1600  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1601  01A4  022B               	subwf	_soundModeSwitch,w	;volatile
  1602  01A5  1C03               	skipc
  1603  01A6  29A8               	goto	u64_21
  1604  01A7  29A9               	goto	u64_20
  1605  01A8                     u64_21:
  1606  01A8  29AA               	goto	i1l133
  1607  01A9                     u64_20:
  1608  01A9                     i1l1249:
  1609                           
  1610                           ;sounds.c: 67:          TimeOut();
  1611  01A9  223F               	fcall	_TimeOut
  1612  01AA                     i1l133:
  1613  01AA  0008               	return
  1614  01AB                     __end_of_TwoShortTwoLong:
  1615                           
  1616                           	psect	text9
  1617  01CC                     __ptext9:	
  1618 ;; *************** function _TwoShortOneLong *****************
  1619 ;; Defined at:
  1620 ;;		line 35 in file "sounds.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;		None
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, status,2, status,0, pclath, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMMON   BANK0
  1634 ;;      Params:         0       0
  1635 ;;      Locals:         0       0
  1636 ;;      Temps:          0       0
  1637 ;;      Totals:         0       0
  1638 ;;Total ram usage:        0 bytes
  1639 ;; Hardware stack levels used: 1
  1640 ;; Hardware stack levels required when called: 1
  1641 ;; This function calls:
  1642 ;;		_ShortSound
  1643 ;;		_TimeOut
  1644 ;;		i1_LongSound
  1645 ;; This function is called by:
  1646 ;;		_ISR
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650  01CC                     _TwoShortOneLong:	
  1651                           ;psect for function _TwoShortOneLong
  1652                           
  1653  01CC                     i1l1215:	
  1654                           ;incstack = 0
  1655                           ; Regs used in _TwoShortOneLong: [wreg+status,2+status,0+pclath+cstack]
  1656                           
  1657                           
  1658                           ;sounds.c: 37:        if (soundModeSwitch == 0){
  1659  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1660  01CD  082B               	movf	_soundModeSwitch,w	;volatile
  1661  01CE  1D03               	btfss	3,2
  1662  01CF  29D1               	goto	u56_21
  1663  01D0  29D2               	goto	u56_20
  1664  01D1                     u56_21:
  1665  01D1  29D3               	goto	i1l1219
  1666  01D2                     u56_20:
  1667  01D2                     i1l1217:
  1668                           
  1669                           ;sounds.c: 38:           ShortSound();
  1670  01D2  2154               	fcall	_ShortSound
  1671  01D3                     i1l1219:
  1672                           
  1673                           ;sounds.c: 40:        if (soundModeSwitch == 1){
  1674  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1675  01D4  032B               	decf	_soundModeSwitch,w	;volatile
  1676  01D5  1D03               	btfss	3,2
  1677  01D6  29D8               	goto	u57_21
  1678  01D7  29D9               	goto	u57_20
  1679  01D8                     u57_21:
  1680  01D8  29DA               	goto	i1l1223
  1681  01D9                     u57_20:
  1682  01D9                     i1l1221:
  1683                           
  1684                           ;sounds.c: 41:           ShortSound();
  1685  01D9  2154               	fcall	_ShortSound
  1686  01DA                     i1l1223:
  1687                           
  1688                           ;sounds.c: 43:        if (soundModeSwitch == 2){
  1689  01DA  3002               	movlw	2
  1690  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  1691  01DC  062B               	xorwf	_soundModeSwitch,w	;volatile
  1692  01DD  1D03               	btfss	3,2
  1693  01DE  29E0               	goto	u58_21
  1694  01DF  29E1               	goto	u58_20
  1695  01E0                     u58_21:
  1696  01E0  29E2               	goto	i1l1227
  1697  01E1                     u58_20:
  1698  01E1                     i1l1225:
  1699                           
  1700                           ;sounds.c: 44:           LongSound();
  1701  01E1  2124               	fcall	i1_LongSound
  1702  01E2                     i1l1227:
  1703                           
  1704                           ;sounds.c: 46:        if (soundModeSwitch > 2) {
  1705  01E2  3003               	movlw	3
  1706  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1707  01E4  022B               	subwf	_soundModeSwitch,w	;volatile
  1708  01E5  1C03               	skipc
  1709  01E6  29E8               	goto	u59_21
  1710  01E7  29E9               	goto	u59_20
  1711  01E8                     u59_21:
  1712  01E8  29EA               	goto	i1l125
  1713  01E9                     u59_20:
  1714  01E9                     i1l1229:
  1715                           
  1716                           ;sounds.c: 47:        TimeOut();
  1717  01E9  223F               	fcall	_TimeOut
  1718  01EA                     i1l125:
  1719  01EA  0008               	return
  1720  01EB                     __end_of_TwoShortOneLong:
  1721                           
  1722                           	psect	text10
  1723  0124                     __ptext10:	
  1724 ;; *************** function i1_LongSound *****************
  1725 ;; Defined at:
  1726 ;;		line 17 in file "sounds.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;		None
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;		None
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2, status,0
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMMON   BANK0
  1740 ;;      Params:         0       0
  1741 ;;      Locals:         0       0
  1742 ;;      Temps:          0       1
  1743 ;;      Totals:         0       1
  1744 ;;Total ram usage:        1 bytes
  1745 ;; Hardware stack levels used: 1
  1746 ;; This function calls:
  1747 ;;		Nothing
  1748 ;; This function is called by:
  1749 ;;		_TwoShortOneLong
  1750 ;;		_TwoShortTwoLong
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754  0124                     i1_LongSound:	
  1755                           ;psect for function i1_LongSound
  1756                           
  1757  0124                     i1l1199:	
  1758                           ;incstack = 0
  1759                           ; Regs used in i1_LongSound: [wreg+status,2+status,0]
  1760                           
  1761                           
  1762                           ;sounds.c: 18:    if(cnt1 <= 200) GP2 = 1;
  1763  0124  3000               	movlw	0
  1764  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1765  0126  022A               	subwf	_cnt1+1,w
  1766  0127  30C9               	movlw	201
  1767  0128  1903               	skipnz
  1768  0129  0229               	subwf	_cnt1,w
  1769  012A  1803               	skipnc
  1770  012B  292D               	goto	u52_21
  1771  012C  292E               	goto	u52_20
  1772  012D                     u52_21:
  1773  012D  2930               	goto	i1l1203
  1774  012E                     u52_20:
  1775  012E                     i1l1201:
  1776  012E  1505               	bsf	5,2	;volatile
  1777  012F  2953               	goto	i1l113
  1778  0130                     i1l1203:
  1779  0130  3000               	movlw	0
  1780  0131  022A               	subwf	_cnt1+1,w
  1781  0132  30C9               	movlw	201
  1782  0133  1903               	skipnz
  1783  0134  0229               	subwf	_cnt1,w
  1784  0135  1C03               	skipc
  1785  0136  2938               	goto	u53_21
  1786  0137  2939               	goto	u53_20
  1787  0138                     u53_21:
  1788  0138  2944               	goto	i1l1209
  1789  0139                     u53_20:
  1790  0139                     i1l1205:
  1791  0139  3001               	movlw	1
  1792  013A  022A               	subwf	_cnt1+1,w
  1793  013B  305F               	movlw	95
  1794  013C  1903               	skipnz
  1795  013D  0229               	subwf	_cnt1,w
  1796  013E  1803               	skipnc
  1797  013F  2941               	goto	u54_21
  1798  0140  2942               	goto	u54_20
  1799  0141                     u54_21:
  1800  0141  2944               	goto	i1l1209
  1801  0142                     u54_20:
  1802  0142                     i1l1207:
  1803  0142  1105               	bcf	5,2	;volatile
  1804  0143  2953               	goto	i1l113
  1805  0144                     i1l1209:
  1806  0144  3001               	movlw	1
  1807  0145  022A               	subwf	_cnt1+1,w
  1808  0146  305F               	movlw	95
  1809  0147  1903               	skipnz
  1810  0148  0229               	subwf	_cnt1,w
  1811  0149  1C03               	skipc
  1812  014A  294C               	goto	u55_21
  1813  014B  294D               	goto	u55_20
  1814  014C                     u55_21:
  1815  014C  2953               	goto	i1l113
  1816  014D                     u55_20:
  1817  014D                     i1l1211:
  1818                           
  1819                           ;sounds.c: 21:       cnt1 = 0;
  1820  014D  01A9               	clrf	_cnt1
  1821  014E  01AA               	clrf	_cnt1+1
  1822  014F                     i1l1213:
  1823                           
  1824                           ;sounds.c: 22:       soundModeSwitch++;
  1825  014F  3001               	movlw	1
  1826  0150  00A0               	movwf	??i1_LongSound
  1827  0151  0820               	movf	??i1_LongSound,w
  1828  0152  07AB               	addwf	_soundModeSwitch,f	;volatile
  1829  0153                     i1l113:
  1830  0153  0008               	return
  1831  0154                     __end_ofi1_LongSound:
  1832                           
  1833                           	psect	text11
  1834  01EB                     __ptext11:	
  1835 ;; *************** function _ThreeShort *****************
  1836 ;; Defined at:
  1837 ;;		line 71 in file "sounds.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;		None
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;		None
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, status,2, status,0, pclath, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMMON   BANK0
  1851 ;;      Params:         0       0
  1852 ;;      Locals:         0       0
  1853 ;;      Temps:          0       0
  1854 ;;      Totals:         0       0
  1855 ;;Total ram usage:        0 bytes
  1856 ;; Hardware stack levels used: 1
  1857 ;; Hardware stack levels required when called: 1
  1858 ;; This function calls:
  1859 ;;		_ShortSound
  1860 ;;		_TimeOut
  1861 ;; This function is called by:
  1862 ;;		_ISR
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866  01EB                     _ThreeShort:	
  1867                           ;psect for function _ThreeShort
  1868                           
  1869  01EB                     i1l1251:	
  1870                           ;incstack = 0
  1871                           ; Regs used in _ThreeShort: [wreg+status,2+status,0+pclath+cstack]
  1872                           
  1873                           
  1874                           ;sounds.c: 73:        if (soundModeSwitch == 0){
  1875  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1876  01EC  082B               	movf	_soundModeSwitch,w	;volatile
  1877  01ED  1D03               	btfss	3,2
  1878  01EE  29F0               	goto	u65_21
  1879  01EF  29F1               	goto	u65_20
  1880  01F0                     u65_21:
  1881  01F0  29F2               	goto	i1l1255
  1882  01F1                     u65_20:
  1883  01F1                     i1l1253:
  1884                           
  1885                           ;sounds.c: 74:           ShortSound();
  1886  01F1  2154               	fcall	_ShortSound
  1887  01F2                     i1l1255:
  1888                           
  1889                           ;sounds.c: 76:        if (soundModeSwitch == 1){
  1890  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1891  01F3  032B               	decf	_soundModeSwitch,w	;volatile
  1892  01F4  1D03               	btfss	3,2
  1893  01F5  29F7               	goto	u66_21
  1894  01F6  29F8               	goto	u66_20
  1895  01F7                     u66_21:
  1896  01F7  29F9               	goto	i1l1259
  1897  01F8                     u66_20:
  1898  01F8                     i1l1257:
  1899                           
  1900                           ;sounds.c: 77:           ShortSound();
  1901  01F8  2154               	fcall	_ShortSound
  1902  01F9                     i1l1259:
  1903                           
  1904                           ;sounds.c: 79:        if (soundModeSwitch == 2){
  1905  01F9  3002               	movlw	2
  1906  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1907  01FB  062B               	xorwf	_soundModeSwitch,w	;volatile
  1908  01FC  1D03               	btfss	3,2
  1909  01FD  29FF               	goto	u67_21
  1910  01FE  2A00               	goto	u67_20
  1911  01FF                     u67_21:
  1912  01FF  2A01               	goto	i1l1263
  1913  0200                     u67_20:
  1914  0200                     i1l1261:
  1915                           
  1916                           ;sounds.c: 80:           ShortSound();
  1917  0200  2154               	fcall	_ShortSound
  1918  0201                     i1l1263:
  1919                           
  1920                           ;sounds.c: 82:        if (soundModeSwitch > 2) {
  1921  0201  3003               	movlw	3
  1922  0202  1283               	bcf	3,5	;RP0=0, select bank0
  1923  0203  022B               	subwf	_soundModeSwitch,w	;volatile
  1924  0204  1C03               	skipc
  1925  0205  2A07               	goto	u68_21
  1926  0206  2A08               	goto	u68_20
  1927  0207                     u68_21:
  1928  0207  2A09               	goto	i1l140
  1929  0208                     u68_20:
  1930  0208                     i1l1265:
  1931                           
  1932                           ;sounds.c: 83:          TimeOut();
  1933  0208  223F               	fcall	_TimeOut
  1934  0209                     i1l140:
  1935  0209  0008               	return
  1936  020A                     __end_of_ThreeShort:
  1937                           
  1938                           	psect	text12
  1939  023F                     __ptext12:	
  1940 ;; *************** function _TimeOut *****************
  1941 ;; Defined at:
  1942 ;;		line 26 in file "sounds.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMMON   BANK0
  1956 ;;      Params:         0       0
  1957 ;;      Locals:         0       0
  1958 ;;      Temps:          0       0
  1959 ;;      Totals:         0       0
  1960 ;;Total ram usage:        0 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_TwoShortOneLong
  1966 ;;		_TwoShortTwoLong
  1967 ;;		_ThreeShort
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971  023F                     _TimeOut:	
  1972                           ;psect for function _TimeOut
  1973                           
  1974  023F                     i1l1193:	
  1975                           ;incstack = 0
  1976                           ; Regs used in _TimeOut: [wreg+status,2]
  1977                           
  1978                           
  1979                           ;sounds.c: 27:    if (cnt1 <= 1000) GP2 = 0;
  1980  023F  3003               	movlw	3
  1981  0240  1283               	bcf	3,5	;RP0=0, select bank0
  1982  0241  022A               	subwf	_cnt1+1,w
  1983  0242  30E9               	movlw	233
  1984  0243  1903               	skipnz
  1985  0244  0229               	subwf	_cnt1,w
  1986  0245  1803               	skipnc
  1987  0246  2A48               	goto	u51_21
  1988  0247  2A49               	goto	u51_20
  1989  0248                     u51_21:
  1990  0248  2A4B               	goto	i1l1197
  1991  0249                     u51_20:
  1992  0249                     i1l1195:
  1993  0249  1105               	bcf	5,2	;volatile
  1994  024A  2A4E               	goto	i1l118
  1995  024B                     i1l1197:
  1996                           
  1997                           ;sounds.c: 29:     cnt1 = 0;
  1998  024B  01A9               	clrf	_cnt1
  1999  024C  01AA               	clrf	_cnt1+1
  2000                           
  2001                           ;sounds.c: 30:     soundModeSwitch = 0;
  2002  024D  01AB               	clrf	_soundModeSwitch	;volatile
  2003  024E                     i1l118:
  2004  024E  0008               	return
  2005  024F                     __end_of_TimeOut:
  2006                           
  2007                           	psect	text13
  2008  0154                     __ptext13:	
  2009 ;; *************** function _ShortSound *****************
  2010 ;; Defined at:
  2011 ;;		line 8 in file "sounds.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		wreg, status,2, status,0
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMMON   BANK0
  2025 ;;      Params:         0       0
  2026 ;;      Locals:         0       0
  2027 ;;      Temps:          0       1
  2028 ;;      Totals:         0       1
  2029 ;;Total ram usage:        1 bytes
  2030 ;; Hardware stack levels used: 1
  2031 ;; This function calls:
  2032 ;;		Nothing
  2033 ;; This function is called by:
  2034 ;;		_TwoShortOneLong
  2035 ;;		_TwoShortTwoLong
  2036 ;;		_ThreeShort
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040  0154                     _ShortSound:	
  2041                           ;psect for function _ShortSound
  2042                           
  2043  0154                     i1l1161:	
  2044                           ;incstack = 0
  2045                           ; Regs used in _ShortSound: [wreg+status,2+status,0]
  2046                           
  2047                           
  2048                           ;sounds.c: 9:    if(cnt1 <= 120) GP2 = 1;
  2049  0154  3000               	movlw	0
  2050  0155  1283               	bcf	3,5	;RP0=0, select bank0
  2051  0156  022A               	subwf	_cnt1+1,w
  2052  0157  3079               	movlw	121
  2053  0158  1903               	skipnz
  2054  0159  0229               	subwf	_cnt1,w
  2055  015A  1803               	skipnc
  2056  015B  295D               	goto	u43_21
  2057  015C  295E               	goto	u43_20
  2058  015D                     u43_21:
  2059  015D  2960               	goto	i1l1165
  2060  015E                     u43_20:
  2061  015E                     i1l1163:
  2062  015E  1505               	bsf	5,2	;volatile
  2063  015F  2983               	goto	i1l105
  2064  0160                     i1l1165:
  2065  0160  3000               	movlw	0
  2066  0161  022A               	subwf	_cnt1+1,w
  2067  0162  3079               	movlw	121
  2068  0163  1903               	skipnz
  2069  0164  0229               	subwf	_cnt1,w
  2070  0165  1C03               	skipc
  2071  0166  2968               	goto	u44_21
  2072  0167  2969               	goto	u44_20
  2073  0168                     u44_21:
  2074  0168  2974               	goto	i1l1171
  2075  0169                     u44_20:
  2076  0169                     i1l1167:
  2077  0169  3000               	movlw	0
  2078  016A  022A               	subwf	_cnt1+1,w
  2079  016B  30C9               	movlw	201
  2080  016C  1903               	skipnz
  2081  016D  0229               	subwf	_cnt1,w
  2082  016E  1803               	skipnc
  2083  016F  2971               	goto	u45_21
  2084  0170  2972               	goto	u45_20
  2085  0171                     u45_21:
  2086  0171  2974               	goto	i1l1171
  2087  0172                     u45_20:
  2088  0172                     i1l1169:
  2089  0172  1105               	bcf	5,2	;volatile
  2090  0173  2983               	goto	i1l105
  2091  0174                     i1l1171:
  2092  0174  3000               	movlw	0
  2093  0175  022A               	subwf	_cnt1+1,w
  2094  0176  30C9               	movlw	201
  2095  0177  1903               	skipnz
  2096  0178  0229               	subwf	_cnt1,w
  2097  0179  1C03               	skipc
  2098  017A  297C               	goto	u46_21
  2099  017B  297D               	goto	u46_20
  2100  017C                     u46_21:
  2101  017C  2983               	goto	i1l105
  2102  017D                     u46_20:
  2103  017D                     i1l1173:
  2104                           
  2105                           ;sounds.c: 12:       cnt1 = 0;
  2106  017D  01A9               	clrf	_cnt1
  2107  017E  01AA               	clrf	_cnt1+1
  2108  017F                     i1l1175:
  2109                           
  2110                           ;sounds.c: 13:       soundModeSwitch++;
  2111  017F  3001               	movlw	1
  2112  0180  00A0               	movwf	??_ShortSound
  2113  0181  0820               	movf	??_ShortSound,w
  2114  0182  07AB               	addwf	_soundModeSwitch,f	;volatile
  2115  0183                     i1l105:
  2116  0183  0008               	return
  2117  0184                     __end_of_ShortSound:
  2118                           
  2119                           	psect	text14
  2120  020A                     __ptext14:	
  2121 ;; *************** function _MuxTemp *****************
  2122 ;; Defined at:
  2123 ;;		line 83 in file "init_periphery.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMMON   BANK0
  2137 ;;      Params:         0       0
  2138 ;;      Locals:         0       0
  2139 ;;      Temps:          0       1
  2140 ;;      Totals:         0       1
  2141 ;;Total ram usage:        1 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_ISR
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150  020A                     _MuxTemp:	
  2151                           ;psect for function _MuxTemp
  2152                           
  2153  020A                     i1l1267:	
  2154                           ;incstack = 0
  2155                           ; Regs used in _MuxTemp: [wreg+status,2+status,0]
  2156                           
  2157                           
  2158                           ;init_periphery.c: 84:        ADCON0 = 0;
  2159  020A  1283               	bcf	3,5	;RP0=0, select bank0
  2160  020B  019F               	clrf	31	;volatile
  2161  020C                     i1l1269:
  2162                           
  2163                           ;init_periphery.c: 85:        ADON = 1;
  2164  020C  141F               	bsf	31,0	;volatile
  2165  020D                     i1l1271:
  2166                           
  2167                           ;init_periphery.c: 86:        ADFM = 1;
  2168  020D  179F               	bsf	31,7	;volatile
  2169  020E                     i1l1273:
  2170                           
  2171                           ;init_periphery.c: 87:        CHS1 = 0;
  2172  020E  119F               	bcf	31,3	;volatile
  2173  020F                     i1l1275:
  2174                           
  2175                           ;init_periphery.c: 88:        CHS0 = 0;
  2176  020F  111F               	bcf	31,2	;volatile
  2177  0210                     i1l1277:
  2178                           
  2179                           ;init_periphery.c: 89:        measureType = 2;
  2180  0210  3002               	movlw	2
  2181  0211  00A0               	movwf	??_MuxTemp
  2182  0212  0820               	movf	??_MuxTemp,w
  2183  0213  00AE               	movwf	_measureType
  2184  0214                     i1l1279:
  2185                           
  2186                           ;init_periphery.c: 90:        ADIF = 0;
  2187  0214  130C               	bcf	12,6	;volatile
  2188  0215                     i1l1281:	
  2189                           ;init_periphery.c: 91:        while (msFlag != 1);
  2190                           
  2191  0215  032C               	decf	_msFlag,w
  2192  0216  1D03               	btfss	3,2
  2193  0217  2A19               	goto	u69_21
  2194  0218  2A1A               	goto	u69_20
  2195  0219                     u69_21:
  2196  0219  2A15               	goto	i1l1281
  2197  021A                     u69_20:
  2198  021A                     i1l1283:
  2199                           
  2200                           ;init_periphery.c: 92:        msFlag = 0;
  2201  021A  01AC               	clrf	_msFlag
  2202  021B                     i1l1285:
  2203                           
  2204                           ;init_periphery.c: 93:        GO = 1;
  2205  021B  149F               	bsf	31,1	;volatile
  2206  021C                     i1l233:
  2207  021C  0008               	return
  2208  021D                     __end_of_MuxTemp:
  2209  005E                     btemp	set	94	;btemp
  2210  005E                     wtemp0	set	94
  2211                           
  2212                           	psect	config
  2213                           
  2214                           ;Config register CONFIG @ 0x2007
  2215                           ;	Oscillator Selection bits
  2216                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  2217                           ;	Watchdog Timer Enable bit
  2218                           ;	WDTE = OFF, WDT disabled
  2219                           ;	Power-Up Timer Enable bit
  2220                           ;	PWRTE = OFF, PWRT disabled
  2221                           ;	GP3/MCLR pin function select
  2222                           ;	MCLRE = ON, GP3/MCLR pin function is MCLR
  2223                           ;	Brown-out Detect Enable bit
  2224                           ;	BOREN = ON, BOD enabled
  2225                           ;	Code Protection bit
  2226                           ;	CP = OFF, Program Memory code protection is disabled
  2227                           ;	Data Code Protection bit
  2228                           ;	CPD = OFF, Data memory code protection is disabled
  2229  2007                     	org	8199
  2230  2007  31F4               	dw	12788

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      7      15

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _Init_uC->_LongSound

Critical Paths under _ISR in BANK0

    _ISR->_MuxTemp
    _TwoShortTwoLong->_ShortSound
    _TwoShortTwoLong->i1_LongSound
    _TwoShortOneLong->_ShortSound
    _TwoShortOneLong->i1_LongSound
    _ThreeShort->_ShortSound

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _InitTimer0
                         _InitTimer1
                            _Init_uC
                         _MuxVoltage
 ---------------------------------------------------------------------------------
 (1) _MuxVoltage                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_uC                                              0     0      0       0
                          _LongSound
 ---------------------------------------------------------------------------------
 (2) _LongSound                                            1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0       0
                                              1 BANK0      5     5      0
                            _MuxTemp
                         _ThreeShort
                    _TwoShortOneLong
                    _TwoShortTwoLong
                       i1_MuxVoltage
 ---------------------------------------------------------------------------------
 (4) i1_MuxVoltage                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TwoShortTwoLong                                      0     0      0       0
                         _ShortSound
                            _TimeOut
                        i1_LongSound
 ---------------------------------------------------------------------------------
 (4) _TwoShortOneLong                                      0     0      0       0
                         _ShortSound
                            _TimeOut
                        i1_LongSound
 ---------------------------------------------------------------------------------
 (5) i1_LongSound                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ThreeShort                                           0     0      0       0
                         _ShortSound
                            _TimeOut
 ---------------------------------------------------------------------------------
 (5) _TimeOut                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ShortSound                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _MuxTemp                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitTimer0
   _InitTimer1
   _Init_uC
     _LongSound
   _MuxVoltage

 _ISR (ROOT)
   _MuxTemp
   _ThreeShort
     _ShortSound
     _TimeOut
   _TwoShortOneLong
     _ShortSound
     _TimeOut
     i1_LongSound
   _TwoShortTwoLong
     _ShortSound
     _TimeOut
     i1_LongSound
   i1_MuxVoltage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               3E      7       F       4       24.2%
BITBANK0            3E      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       F       6        0.0%
ABS                  0      0       F       5        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Mar 02 21:11:18 2024

                     l88 0266                       l89 0266                       _GO 00F9  
                    l113 0123                      l221 01CB                      l215 0261  
                    l218 0259                      l227 022D                      _GP2 002A  
                    _GP4 002C                      _GP5 002D                      _GIE 005F  
                    u500 011D                      u501 011C                      u700 022B  
                    _ISR 001A                      u701 022A                      u470 00FE  
                    u471 00FD                      u480 0109                      u481 0108  
                    u490 0112                      u491 0111                      fsr0 0004  
      ??_TwoShortOneLong 0000                     ?_ISR 0020        ??_TwoShortTwoLong 0000  
                   l1301 0226                     l1311 025F                     l1303 022B  
                   l1313 0260                     l1321 01AB                     l1305 022C  
                   l1307 025A                     l1315 024F                     l1331 01B5  
                   l1323 01AE                     l1309 025D                     l1317 0256  
                   l1181 0100                     l1341 01BF                     l1333 01B7  
                   l1325 01B0                     l1319 0257                     l1191 011F  
                   l1183 0109                     l1351 01C6                     l1343 01C0  
                   l1335 01B9                     l1327 01B1                     l1185 0112  
                   l1177 00F4                     l1353 01C7                     l1345 01C2  
                   l1337 01BB                     l1329 01B3                     l1187 0114  
                   l1179 00FE                     l1355 01C8                     l1347 01C3  
                   l1339 01BD                     l1291 0220                     l1189 011D  
                   l1349 01C5                     l1293 0221                     l1295 0222  
                   l1287 021D                     l1297 0223                     l1289 021F  
                   l1299 0225                     l1459 0262                     _ADIF 0066  
                   _ADFM 00FF                     _ADON 00F8                     _CHS0 00FA  
                   _CHS1 00FB                     _T0IE 005D                     _T0IF 005A  
                   _T1IE 0460                     _T1IF 0060                     _GPIO 0005  
                   _PEIE 005E                     i1l50 0050                     i1l53 004E  
                   i1l72 00D2                     i1l75 00EA                     _VCFG 00FE  
                   _TMR0 0001                     _cnt1 0029                     _main 0262  
                   btemp 005E                     start 000D          __end_of_Init_uC 01CC  
                  ??_ISR 0021          __end_of_TimeOut 024F          __end_of_MuxTemp 021D  
                  ?_main 0020                    _CMCON 0019                    _ANSEL 009F  
                  _T1CON 0010                    i1l105 0183                    i1l113 0153  
                  i1l140 0209                    i1l125 01EA                    i1l133 01AA  
                  i1l118 024E                    i1l233 021C                    i1l227 023E  
                  _TMR1H 000F                    _TMR1L 000E                    u43_20 015E  
                  u51_20 0249                    u43_21 015D                    u51_21 0248  
                  u44_20 0169                    u52_20 012E                    u60_20 018A  
                  u44_21 0168                    u52_21 012D                    u60_21 0189  
                  u45_20 0172                    u53_20 0139                    u61_20 0191  
                  u45_21 0171                    u53_21 0138                    u61_21 0190  
                  u46_20 017D                    u54_20 0142                    u62_20 0199  
                  u46_21 017C                    u54_21 0141                    u62_21 0198  
                  u55_20 014D                    u63_20 01A1                    u71_20 023C  
                  u55_21 014C                    u63_21 01A0                    u71_21 023B  
                  u56_20 01D2                    u64_20 01A9                    u80_20 00A3  
                  u72_20 001E                    u56_21 01D1                    u64_21 01A8  
                  u80_21 00A2                    u72_21 001D                    u65_20 01F1  
                  u57_20 01D9                    u81_20 00AF                    u73_20 0027  
                  u65_21 01F0                    u57_21 01D8                    u81_21 00AE  
                  u73_21 0026                    u66_20 01F8                    u58_20 01E1  
                  u82_20 00B8                    u74_20 0054                    u66_21 01F7  
                  u58_21 01E0                    u82_21 00B7                    u74_21 0053  
                  u67_20 0200                    u59_20 01E9                    u83_20 00C5  
                  u75_20 0064                    _VRCON 0099                    u67_21 01FF  
                  u59_21 01E8                    u83_21 00C4                    u75_21 0063  
                  u68_20 0208                    u84_20 00CE                    u76_20 006D  
                  u68_21 0207                    u84_21 00CD                    u76_21 006C  
                  u69_20 021A                    u77_20 0072                    u69_21 0219  
                  u77_21 0071                    u78_20 007E                    u78_21 007D  
                  u79_20 008D                    u79_21 008C                    pclath 000A  
                  status 0003                    wtemp0 005E          __initialization 000E  
             _InitTimer0 025A               _InitTimer1 024F             __end_of_main 0268  
                 ??_main 0000                   _ADCON0 001F                   _ADRESH 001E  
                 _ADRESL 009E                   i1l1201 012E                   i1l1211 014D  
                 i1l1203 0130                   i1l1213 014F                   i1l1205 0139  
                 i1l1221 01D9                   i1l1207 0142                   i1l1223 01DA  
                 i1l1215 01CC                   i1l1231 0184                   i1l1161 0154  
                 i1l1209 0144                   i1l1225 01E1                   i1l1217 01D2  
                 i1l1241 0199                   i1l1233 018A                   i1l1401 0055  
                 i1l1171 0174                   i1l1163 015E                   i1l1251 01EB  
                 i1l1227 01E2                   i1l1219 01D3                   i1l1243 019A  
                 i1l1235 018B                   i1l1411 007E                   i1l1403 0064  
                 i1l1173 017D                   i1l1165 0160                   i1l1261 0200  
                 i1l1253 01F1                   i1l1229 01E9                   i1l1245 01A1  
                 i1l1237 0191                   i1l1413 007F                   i1l1421 0092  
                 i1l1405 006D                   i1l1271 020D                   i1l1175 017F  
                 i1l1167 0169                   i1l1263 0201                   i1l1255 01F2  
                 i1l1247 01A2                   i1l1239 0192                   i1l1431 00B8  
                 i1l1423 0094                   i1l1415 0084                   i1l1407 0072  
                 i1l1281 0215                   i1l1273 020E                   i1l1169 0172  
                 i1l1193 023F                   i1l1265 0208                   i1l1257 01F8  
                 i1l1249 01A9                   i1l1361 0231                   i1l1433 00BC  
                 i1l1441 00D8                   i1l1425 00A3                   i1l1417 008D  
                 i1l1409 0075                   i1l1521 0040                   i1l1283 021A  
                 i1l1275 020F                   i1l1267 020A                   i1l1195 0249  
                 i1l1259 01F9                   i1l1371 0237                   i1l1363 0232  
                 i1l1523 00E2                   i1l1435 00C5                   i1l1427 00A6  
                 i1l1419 008E                   i1l1285 021B                   i1l1277 0210  
                 i1l1269 020C                   i1l1197 024B                   i1l1373 023C  
                 i1l1365 0233                   i1l1357 022E                   i1l1437 00CE  
                 i1l1429 00AF                   i1l1445 00DA                   i1l1381 0020  
                 i1l1279 0214                   i1l1199 0124                   i1l1375 023D  
                 i1l1367 0234                   i1l1359 0230                   i1l1439 00D4  
                 i1l1391 0034                   i1l1383 0022                   i1l1369 0236  
                 i1l1393 0036                   i1l1385 0023                   i1l1377 001A  
                 i1l1387 0027                   i1l1379 001E                   i1l1389 0032  
                 i1l1397 0038                   _TMR0IF 005A                   _TMR1IF 0060  
                 _TRISIO 0085                ??_Init_uC 0000                ??_TimeOut 0000  
              ??_MuxTemp 0020               _ThreeShort 01EB                   _msFlag 002C  
             _MuxVoltage 021D               _ShortSound 0154                   saved_w 005E  
           ?i1_LongSound 0020  __end_of__initialization 0018              ?_InitTimer0 0020  
            ?_InitTimer1 0020           __pcstackCOMMON 0000             __pidataBANK0 0268  
        _TwoShortOneLong 01CC          _TwoShortTwoLong 0184        __end_of_LongSound 0124  
             __pbssBANK0 0027               __pmaintext 0262               __pintentry 0004  
            ?_ThreeShort 0020              ?_MuxVoltage 0020              ?_ShortSound 0020  
                _TRISIO0 0428                  _TRISIO1 0429                  _TRISIO2 042A  
                _TRISIO4 042C                  _TRISIO5 042D  __end_of_TwoShortOneLong 01EB  
                _Init_uC 01AB                  _TimeOut 023F                  _MuxTemp 020A  
__end_of_TwoShortTwoLong 01AB                  __ptext1 021D                  __ptext2 01AB  
                __ptext3 00F4                  __ptext4 024F                  __ptext5 025A  
                __ptext6 001A                  __ptext7 022E                  __ptext8 0184  
                __ptext9 01CC     end_of_initialization 0018            ?i1_MuxVoltage 0020  
        _soundModeSwitch 002B         ?_TwoShortOneLong 0020             ??_InitTimer0 0000  
           ??_InitTimer1 0000         ?_TwoShortTwoLong 0020      start_initialization 000E  
            __end_of_ISR 00F4       __end_of_InitTimer0 0262       __end_of_InitTimer1 025A  
         ??i1_MuxVoltage 0000                _LongSound 00F4             ??_ThreeShort 0000  
            __pdataBANK0 002D             ??_MuxVoltage 0000             ??_ShortSound 0020  
              ___latbits 0000            __pcstackBANK0 0020               ?_LongSound 0020  
     __end_of_ThreeShort 020A       __end_of_MuxVoltage 022E                 ?_Init_uC 0020  
     __end_of_ShortSound 0184                 ?_TimeOut 0020                 ?_MuxTemp 0020  
              _errorType 002D        interrupt_function 0004     __end_ofi1_MuxVoltage 023F  
          ??i1_LongSound 0020              ??_LongSound 0026              _measureType 002E  
               _adcValue 0027                 __ptext10 0124                 __ptext11 01EB  
               __ptext12 023F                 __ptext13 0154                 __ptext14 020A  
    __end_ofi1_LongSound 0154                 intlevel1 0000               _OPTION_REG 0081  
            i1_LongSound 0124             i1_MuxVoltage 022E  
