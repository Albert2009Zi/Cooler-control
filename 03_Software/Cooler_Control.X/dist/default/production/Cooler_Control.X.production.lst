

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Oct 23 21:33:42 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x5E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 29/04/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC12F675 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0019                     	;# 
    71  001E                     	;# 
    72  001F                     	;# 
    73  0081                     	;# 
    74  0085                     	;# 
    75  008C                     	;# 
    76  008E                     	;# 
    77  0090                     	;# 
    78  0095                     	;# 
    79  0096                     	;# 
    80  0096                     	;# 
    81  0099                     	;# 
    82  009A                     	;# 
    83  009A                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009E                     	;# 
    88  009F                     	;# 
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0019                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  008C                     	;# 
   108  008E                     	;# 
   109  0090                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0096                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000E                     	;# 
   131  000E                     	;# 
   132  000F                     	;# 
   133  0010                     	;# 
   134  0019                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  0081                     	;# 
   138  0085                     	;# 
   139  008C                     	;# 
   140  008E                     	;# 
   141  0090                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0096                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  009F                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0019                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  008C                     	;# 
   172  008E                     	;# 
   173  0090                     	;# 
   174  0095                     	;# 
   175  0096                     	;# 
   176  0096                     	;# 
   177  0099                     	;# 
   178  009A                     	;# 
   179  009A                     	;# 
   180  009B                     	;# 
   181  009C                     	;# 
   182  009D                     	;# 
   183  009E                     	;# 
   184  009F                     	;# 
   185  0000                     	;# 
   186  0001                     	;# 
   187  0002                     	;# 
   188  0003                     	;# 
   189  0004                     	;# 
   190  0005                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000E                     	;# 
   195  000E                     	;# 
   196  000F                     	;# 
   197  0010                     	;# 
   198  0019                     	;# 
   199  001E                     	;# 
   200  001F                     	;# 
   201  0081                     	;# 
   202  0085                     	;# 
   203  008C                     	;# 
   204  008E                     	;# 
   205  0090                     	;# 
   206  0095                     	;# 
   207  0096                     	;# 
   208  0096                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009A                     	;# 
   212  009B                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009E                     	;# 
   216  009F                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0019                     	;# 
   231  001E                     	;# 
   232  001F                     	;# 
   233  0081                     	;# 
   234  0085                     	;# 
   235  008C                     	;# 
   236  008E                     	;# 
   237  0090                     	;# 
   238  0095                     	;# 
   239  0096                     	;# 
   240  0096                     	;# 
   241  0099                     	;# 
   242  009A                     	;# 
   243  009A                     	;# 
   244  009B                     	;# 
   245  009C                     	;# 
   246  009D                     	;# 
   247  009E                     	;# 
   248  009F                     	;# 
   249  000B                     _INTCONbits	set	11
   250  0001                     _TMR0	set	1
   251  001E                     _ADRESH	set	30
   252  001F                     _ADCON0	set	31
   253  0005                     _GPIO	set	5
   254  0019                     _CMCON	set	25
   255  005D                     _T0IE	set	93
   256  005A                     _T0IF	set	90
   257  00FA                     _CHS0	set	250
   258  00FB                     _CHS1	set	251
   259  0066                     _ADIF	set	102
   260  00F9                     _GO	set	249
   261  00FF                     _ADFM	set	255
   262  005F                     _GIE	set	95
   263  00FE                     _VCFG	set	254
   264  00F8                     _ADON	set	248
   265  002C                     _GP4	set	44
   266  002D                     _GP5	set	45
   267  002A                     _GP2	set	42
   268  0081                     _OPTION_REG	set	129
   269  009E                     _ADRESL	set	158
   270  009F                     _ANSEL	set	159
   271  0085                     _TRISIO	set	133
   272  0099                     _VRCON	set	153
   273  0429                     _TRISIO1	set	1065
   274  0428                     _TRISIO0	set	1064
   275  042C                     _TRISIO4	set	1068
   276  042D                     _TRISIO5	set	1069
   277  042A                     _TRISIO2	set	1066
   278                           
   279                           	psect	cinit
   280  000C                     start_initialization:	
   281                           ; #config settings
   282                           
   283  000C                     __initialization:
   284                           
   285                           ; Clear objects allocated to BANK0
   286  000C  1283               	bcf	3,5	;RP0=0, select bank0
   287  000D  01AA               	clrf	__pbssBANK0& (0+127)
   288  000E  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   289  000F  01AC               	clrf	(__pbssBANK0+2)& (0+127)
   290  0010  01AD               	clrf	(__pbssBANK0+3)& (0+127)
   291  0011  01AE               	clrf	(__pbssBANK0+4)& (0+127)
   292  0012  01AF               	clrf	(__pbssBANK0+5)& (0+127)
   293  0013                     end_of_initialization:	
   294                           ;End of C runtime variable initialization code
   295                           
   296  0013                     __end_of__initialization:
   297  0013  0183               	clrf	3
   298  0014  29C9               	ljmp	_main	;jump to C main() function
   299                           
   300                           	psect	bssBANK0
   301  002A                     __pbssBANK0:
   302  002A                     _pulsePerTakt:
   303  002A                     	ds	2
   304  002C                     _adcValue:
   305  002C                     	ds	2
   306  002E                     _pwmValue:
   307  002E                     	ds	2
   308                           
   309                           	psect	cstackCOMMON
   310  0000                     __pcstackCOMMON:
   311  0000                     ??_Pin6VoltageControl:
   312  0000                     ??_Pin7ThermoControl:	
   313                           ; 1 bytes @ 0x0
   314                           
   315                           
   316                           	psect	cstackBANK0
   317  0020                     __pcstackBANK0:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0020                     ?_LongSound:
   321  0020                     ?_ThreeLongOneShort:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0020                     ?_Init_uC:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0020                     ?_Pin6VoltageControl:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0020                     ?_Pin7ThermoControl:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0020                     ?_ISR:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0020                     ??_ISR:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0020                     ?_InitTimer0:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0020                     ?_main:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0020                     ?_ShortSound:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0020                     ?_MeasureVoltage:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0020                     ?_MeasureTemp:	
   352                           ; 2 bytes @ 0x0
   353                           
   354                           
   355                           ; 2 bytes @ 0x0
   356  0020                     	ds	2
   357  0022                     ??_LongSound:
   358  0022                     ??_MeasureVoltage:	
   359                           ; 1 bytes @ 0x2
   360                           
   361  0022                     ??_MeasureTemp:	
   362                           ; 1 bytes @ 0x2
   363                           
   364  0022                     ??_InitTimer0:	
   365                           ; 1 bytes @ 0x2
   366                           
   367  0022                     ??_ShortSound:	
   368                           ; 1 bytes @ 0x2
   369                           
   370                           
   371                           ; 1 bytes @ 0x2
   372  0022                     	ds	2
   373  0024                     ??_ThreeLongOneShort:
   374  0024                     ??_Init_uC:	
   375                           ; 1 bytes @ 0x4
   376                           
   377                           
   378                           ; 1 bytes @ 0x4
   379  0024                     	ds	3
   380  0027                     ??_main:
   381                           
   382                           ; 1 bytes @ 0x7
   383  0027                     	ds	3
   384                           
   385                           	psect	maintext
   386  01C9                     __pmaintext:	
   387 ;;
   388 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   389 ;;
   390 ;; *************** function _main *****************
   391 ;; Defined at:
   392 ;;		line 60 in file "main.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;		None
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   401 ;; Tracked objects:
   402 ;;		On entry : B00/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMMON   BANK0
   406 ;;      Params:         0       0
   407 ;;      Locals:         0       0
   408 ;;      Temps:          0       3
   409 ;;      Totals:         0       3
   410 ;;Total ram usage:        3 bytes
   411 ;; Hardware stack levels required when called: 4
   412 ;; This function calls:
   413 ;;		_InitTimer0
   414 ;;		_Init_uC
   415 ;;		_Pin6VoltageControl
   416 ;;		_Pin7ThermoControl
   417 ;; This function is called by:
   418 ;;		Startup code after reset
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422  01C9                     _main:	
   423                           ;psect for function _main
   424                           
   425  01C9                     l1099:	
   426                           ;incstack = 0
   427                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   428                           
   429  01C9  21F1               	fcall	_InitTimer0
   430  01CA  20D5               	fcall	_Init_uC
   431  01CB                     l1101:
   432  01CB  178B               	bsf	11,7	;volatile
   433  01CC                     l1103:
   434  01CC  300D               	movlw	13
   435  01CD  1283               	bcf	3,5	;RP0=0, select bank0
   436  01CE  00A9               	movwf	??_main+2
   437  01CF  30AF               	movlw	175
   438  01D0  00A8               	movwf	??_main+1
   439  01D1  30B6               	movlw	182
   440  01D2  00A7               	movwf	??_main
   441  01D3                     u377:
   442  01D3  0BA7               	decfsz	??_main,f
   443  01D4  29D3               	goto	u377
   444  01D5  0BA8               	decfsz	??_main+1,f
   445  01D6  29D3               	goto	u377
   446  01D7  0BA9               	decfsz	??_main+2,f
   447  01D8  29D3               	goto	u377
   448  01D9  0000               	nop
   449  01DA                     l1105:
   450  01DA  2157               	fcall	_Pin6VoltageControl
   451  01DB                     l1107:
   452  01DB  2015               	fcall	_Pin7ThermoControl
   453  01DC  29DA               	goto	l1105
   454  01DD  280B               	ljmp	start
   455  01DE                     __end_of_main:
   456                           
   457                           	psect	text1
   458  0015                     __ptext1:	
   459 ;; *************** function _Pin7ThermoControl *****************
   460 ;; Defined at:
   461 ;;		line 62 in file "ADC.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMMON   BANK0
   475 ;;      Params:         0       0
   476 ;;      Locals:         0       0
   477 ;;      Temps:          0       0
   478 ;;      Totals:         0       0
   479 ;;Total ram usage:        0 bytes
   480 ;; Hardware stack levels used: 1
   481 ;; Hardware stack levels required when called: 3
   482 ;; This function calls:
   483 ;;		_MeasureTemp
   484 ;;		_ThreeLongOneShort
   485 ;; This function is called by:
   486 ;;		_main
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490  0015                     _Pin7ThermoControl:	
   491                           ;psect for function _Pin7ThermoControl
   492                           
   493  0015                     l1039:	
   494                           ;incstack = 0
   495                           ; Regs used in _Pin7ThermoControl: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   496                           
   497                           
   498                           ;ADC.c: 64:        MeasureTemp();
   499  0015  217B               	fcall	_MeasureTemp
   500  0016                     l1041:
   501                           
   502                           ;ADC.c: 66:              if (adcValue < 200)
   503  0016  1283               	bcf	3,5	;RP0=0, select bank0
   504  0017  082D               	movf	_adcValue+1,w
   505  0018  3A80               	xorlw	128
   506  0019  00DF               	movwf	btemp+1
   507  001A  3080               	movlw	128
   508  001B  025F               	subwf	btemp+1,w
   509  001C  1D03               	skipz
   510  001D  2820               	goto	u235
   511  001E  30C8               	movlw	200
   512  001F  022C               	subwf	_adcValue,w
   513  0020                     u235:
   514  0020  1803               	skipnc
   515  0021  2823               	goto	u231
   516  0022  2824               	goto	u230
   517  0023                     u231:
   518  0023  2839               	goto	l1053
   519  0024                     u230:
   520  0024                     l1043:
   521                           
   522                           ;ADC.c: 67:          {;ADC.c: 68:         GP5 = 1;
   523  0024  1283               	bcf	3,5	;RP0=0, select bank0
   524  0025  1685               	bsf	5,5	;volatile
   525  0026                     l1045:
   526                           
   527                           ;ADC.c: 69:               pwmValue = 0;
   528  0026  01AE               	clrf	_pwmValue
   529  0027  01AF               	clrf	_pwmValue+1
   530  0028                     l1047:
   531                           
   532                           ;ADC.c: 71:         MeasureTemp();
   533  0028  217B               	fcall	_MeasureTemp
   534  0029                     l1049:
   535                           
   536                           ;ADC.c: 72:         ThreeLongOneShort();
   537  0029  21DE               	fcall	_ThreeLongOneShort
   538  002A                     l1051:
   539                           
   540                           ;ADC.c: 73:        }
   541  002A  1283               	bcf	3,5	;RP0=0, select bank0
   542  002B  082D               	movf	_adcValue+1,w
   543  002C  3A80               	xorlw	128
   544  002D  00DF               	movwf	btemp+1
   545  002E  3080               	movlw	128
   546  002F  025F               	subwf	btemp+1,w
   547  0030  1D03               	skipz
   548  0031  2834               	goto	u245
   549  0032  30C8               	movlw	200
   550  0033  022C               	subwf	_adcValue,w
   551  0034                     u245:
   552  0034  1C03               	skipc
   553  0035  2837               	goto	u241
   554  0036  2838               	goto	u240
   555  0037                     u241:
   556  0037  2828               	goto	l1047
   557  0038                     u240:
   558  0038  28D4               	goto	l89
   559  0039                     l1053:
   560  0039  1283               	bcf	3,5	;RP0=0, select bank0
   561  003A  082D               	movf	_adcValue+1,w
   562  003B  3A80               	xorlw	128
   563  003C  00DF               	movwf	btemp+1
   564  003D  3080               	movlw	128
   565  003E  025F               	subwf	btemp+1,w
   566  003F  1D03               	skipz
   567  0040  2843               	goto	u255
   568  0041  30C8               	movlw	200
   569  0042  022C               	subwf	_adcValue,w
   570  0043                     u255:
   571  0043  1C03               	skipc
   572  0044  2846               	goto	u251
   573  0045  2847               	goto	u250
   574  0046                     u251:
   575  0046  2859               	goto	l1059
   576  0047                     u250:
   577  0047                     l1055:
   578  0047  1283               	bcf	3,5	;RP0=0, select bank0
   579  0048  082D               	movf	_adcValue+1,w
   580  0049  3A80               	xorlw	128
   581  004A  00DF               	movwf	btemp+1
   582  004B  3083               	movlw	131
   583  004C  025F               	subwf	btemp+1,w
   584  004D  1D03               	skipz
   585  004E  2851               	goto	u265
   586  004F  3070               	movlw	112
   587  0050  022C               	subwf	_adcValue,w
   588  0051                     u265:
   589  0051  1803               	skipnc
   590  0052  2854               	goto	u261
   591  0053  2855               	goto	u260
   592  0054                     u261:
   593  0054  2859               	goto	l1059
   594  0055                     u260:
   595  0055                     l1057:
   596                           
   597                           ;ADC.c: 80:                         pwmValue = 0;
   598  0055  1283               	bcf	3,5	;RP0=0, select bank0
   599  0056  01AE               	clrf	_pwmValue
   600  0057  01AF               	clrf	_pwmValue+1
   601                           
   602                           ;ADC.c: 81:                        }
   603  0058  28D4               	goto	l89
   604  0059                     l1059:
   605  0059  1283               	bcf	3,5	;RP0=0, select bank0
   606  005A  082D               	movf	_adcValue+1,w
   607  005B  3A80               	xorlw	128
   608  005C  00DF               	movwf	btemp+1
   609  005D  3083               	movlw	131
   610  005E  025F               	subwf	btemp+1,w
   611  005F  1D03               	skipz
   612  0060  2863               	goto	u275
   613  0061  3070               	movlw	112
   614  0062  022C               	subwf	_adcValue,w
   615  0063                     u275:
   616  0063  1C03               	skipc
   617  0064  2866               	goto	u271
   618  0065  2867               	goto	u270
   619  0066                     u271:
   620  0066  287B               	goto	l1065
   621  0067                     u270:
   622  0067                     l1061:
   623  0067  1283               	bcf	3,5	;RP0=0, select bank0
   624  0068  082D               	movf	_adcValue+1,w
   625  0069  3A80               	xorlw	128
   626  006A  00DF               	movwf	btemp+1
   627  006B  3083               	movlw	131
   628  006C  025F               	subwf	btemp+1,w
   629  006D  1D03               	skipz
   630  006E  2871               	goto	u285
   631  006F  308E               	movlw	142
   632  0070  022C               	subwf	_adcValue,w
   633  0071                     u285:
   634  0071  1803               	skipnc
   635  0072  2874               	goto	u281
   636  0073  2875               	goto	u280
   637  0074                     u281:
   638  0074  287B               	goto	l1065
   639  0075                     u280:
   640  0075                     l1063:
   641                           
   642                           ;ADC.c: 84:                         pwmValue = 30;
   643  0075  301E               	movlw	30
   644  0076  1283               	bcf	3,5	;RP0=0, select bank0
   645  0077  00AE               	movwf	_pwmValue
   646  0078  3000               	movlw	0
   647  0079  00AF               	movwf	_pwmValue+1
   648                           
   649                           ;ADC.c: 85:                        }
   650  007A  28D4               	goto	l89
   651  007B                     l1065:
   652  007B  1283               	bcf	3,5	;RP0=0, select bank0
   653  007C  082D               	movf	_adcValue+1,w
   654  007D  3A80               	xorlw	128
   655  007E  00DF               	movwf	btemp+1
   656  007F  3083               	movlw	131
   657  0080  025F               	subwf	btemp+1,w
   658  0081  1D03               	skipz
   659  0082  2885               	goto	u295
   660  0083  308E               	movlw	142
   661  0084  022C               	subwf	_adcValue,w
   662  0085                     u295:
   663  0085  1C03               	skipc
   664  0086  2888               	goto	u291
   665  0087  2889               	goto	u290
   666  0088                     u291:
   667  0088  289D               	goto	l1071
   668  0089                     u290:
   669  0089                     l1067:
   670  0089  1283               	bcf	3,5	;RP0=0, select bank0
   671  008A  082D               	movf	_adcValue+1,w
   672  008B  3A80               	xorlw	128
   673  008C  00DF               	movwf	btemp+1
   674  008D  3083               	movlw	131
   675  008E  025F               	subwf	btemp+1,w
   676  008F  1D03               	skipz
   677  0090  2893               	goto	u305
   678  0091  30AC               	movlw	172
   679  0092  022C               	subwf	_adcValue,w
   680  0093                     u305:
   681  0093  1803               	skipnc
   682  0094  2896               	goto	u301
   683  0095  2897               	goto	u300
   684  0096                     u301:
   685  0096  289D               	goto	l1071
   686  0097                     u300:
   687  0097                     l1069:
   688                           
   689                           ;ADC.c: 88:                         pwmValue = 45;
   690  0097  302D               	movlw	45
   691  0098  1283               	bcf	3,5	;RP0=0, select bank0
   692  0099  00AE               	movwf	_pwmValue
   693  009A  3000               	movlw	0
   694  009B  00AF               	movwf	_pwmValue+1
   695                           
   696                           ;ADC.c: 89:                        }
   697  009C  28D4               	goto	l89
   698  009D                     l1071:
   699  009D  1283               	bcf	3,5	;RP0=0, select bank0
   700  009E  082D               	movf	_adcValue+1,w
   701  009F  3A80               	xorlw	128
   702  00A0  00DF               	movwf	btemp+1
   703  00A1  3083               	movlw	131
   704  00A2  025F               	subwf	btemp+1,w
   705  00A3  1D03               	skipz
   706  00A4  28A7               	goto	u315
   707  00A5  30AC               	movlw	172
   708  00A6  022C               	subwf	_adcValue,w
   709  00A7                     u315:
   710  00A7  1C03               	skipc
   711  00A8  28AA               	goto	u311
   712  00A9  28AB               	goto	u310
   713  00AA                     u311:
   714  00AA  28BF               	goto	l85
   715  00AB                     u310:
   716  00AB                     l1073:
   717  00AB  1283               	bcf	3,5	;RP0=0, select bank0
   718  00AC  082D               	movf	_adcValue+1,w
   719  00AD  3A80               	xorlw	128
   720  00AE  00DF               	movwf	btemp+1
   721  00AF  3083               	movlw	131
   722  00B0  025F               	subwf	btemp+1,w
   723  00B1  1D03               	skipz
   724  00B2  28B5               	goto	u325
   725  00B3  30CA               	movlw	202
   726  00B4  022C               	subwf	_adcValue,w
   727  00B5                     u325:
   728  00B5  1803               	skipnc
   729  00B6  28B8               	goto	u321
   730  00B7  28B9               	goto	u320
   731  00B8                     u321:
   732  00B8  28BF               	goto	l85
   733  00B9                     u320:
   734  00B9                     l1075:
   735                           
   736                           ;ADC.c: 92:                         pwmValue = 55;
   737  00B9  3037               	movlw	55
   738  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   739  00BB  00AE               	movwf	_pwmValue
   740  00BC  3000               	movlw	0
   741  00BD  00AF               	movwf	_pwmValue+1
   742                           
   743                           ;ADC.c: 93:                        }
   744  00BE  28D4               	goto	l89
   745  00BF                     l85:	
   746                           ;ADC.c: 94:              else {
   747                           
   748                           
   749                           ;ADC.c: 95:                  GP5 = 1;
   750  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   751  00C0  1685               	bsf	5,5	;volatile
   752  00C1                     l1077:
   753                           
   754                           ;ADC.c: 96:                         pwmValue = 85;
   755  00C1  3055               	movlw	85
   756  00C2  00AE               	movwf	_pwmValue
   757  00C3  3000               	movlw	0
   758  00C4  00AF               	movwf	_pwmValue+1
   759  00C5                     l1079:
   760                           
   761                           ;ADC.c: 98:                         MeasureTemp();
   762  00C5  217B               	fcall	_MeasureTemp
   763  00C6                     l1081:
   764                           
   765                           ;ADC.c: 99:         }
   766  00C6  1283               	bcf	3,5	;RP0=0, select bank0
   767  00C7  082D               	movf	_adcValue+1,w
   768  00C8  3A80               	xorlw	128
   769  00C9  00DF               	movwf	btemp+1
   770  00CA  3083               	movlw	131
   771  00CB  025F               	subwf	btemp+1,w
   772  00CC  1D03               	skipz
   773  00CD  28D0               	goto	u335
   774  00CE  30CA               	movlw	202
   775  00CF  022C               	subwf	_adcValue,w
   776  00D0                     u335:
   777  00D0  1803               	skipnc
   778  00D1  28D3               	goto	u331
   779  00D2  28D4               	goto	u330
   780  00D3                     u331:
   781  00D3  28C5               	goto	l1079
   782  00D4                     u330:
   783  00D4                     l89:
   784  00D4  0008               	return
   785  00D5                     __end_of_Pin7ThermoControl:
   786                           
   787                           	psect	text2
   788  01DE                     __ptext2:	
   789 ;; *************** function _ThreeLongOneShort *****************
   790 ;; Defined at:
   791 ;;		line 42 in file "sounds.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;		None
   794 ;; Auto vars:     Size  Location     Type
   795 ;;		None
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, status,2, status,0, pclath, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMMON   BANK0
   805 ;;      Params:         0       0
   806 ;;      Locals:         0       0
   807 ;;      Temps:          0       3
   808 ;;      Totals:         0       3
   809 ;;Total ram usage:        3 bytes
   810 ;; Hardware stack levels used: 1
   811 ;; Hardware stack levels required when called: 2
   812 ;; This function calls:
   813 ;;		_LongSound
   814 ;;		_ShortSound
   815 ;; This function is called by:
   816 ;;		_Pin7ThermoControl
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820  01DE                     _ThreeLongOneShort:	
   821                           ;psect for function _ThreeLongOneShort
   822                           
   823  01DE                     l985:	
   824                           ;incstack = 0
   825                           ; Regs used in _ThreeLongOneShort: [wreg+status,2+status,0+pclath+cstack]
   826                           
   827                           
   828                           ;sounds.c: 43:    LongSound();
   829  01DE  21B3               	fcall	_LongSound
   830                           
   831                           ;sounds.c: 44:    LongSound();
   832  01DF  21B3               	fcall	_LongSound
   833                           
   834                           ;sounds.c: 45:    LongSound();
   835  01E0  21B3               	fcall	_LongSound
   836                           
   837                           ;sounds.c: 46:    ShortSound();
   838  01E1  219D               	fcall	_ShortSound
   839  01E2                     l987:
   840                           
   841                           ;sounds.c: 47:    _delay((unsigned long)((700)*(4000000/4000.0)));
   842  01E2  3004               	movlw	4
   843  01E3  1283               	bcf	3,5	;RP0=0, select bank0
   844  01E4  00A6               	movwf	??_ThreeLongOneShort+2
   845  01E5  308E               	movlw	142
   846  01E6  00A5               	movwf	??_ThreeLongOneShort+1
   847  01E7  3012               	movlw	18
   848  01E8  00A4               	movwf	??_ThreeLongOneShort
   849  01E9                     u387:
   850  01E9  0BA4               	decfsz	??_ThreeLongOneShort,f
   851  01EA  29E9               	goto	u387
   852  01EB  0BA5               	decfsz	??_ThreeLongOneShort+1,f
   853  01EC  29E9               	goto	u387
   854  01ED  0BA6               	decfsz	??_ThreeLongOneShort+2,f
   855  01EE  29E9               	goto	u387
   856  01EF  0000               	nop
   857  01F0                     l169:
   858  01F0  0008               	return
   859  01F1                     __end_of_ThreeLongOneShort:
   860                           
   861                           	psect	text3
   862  019D                     __ptext3:	
   863 ;; *************** function _ShortSound *****************
   864 ;; Defined at:
   865 ;;		line 13 in file "sounds.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;		None
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMMON   BANK0
   879 ;;      Params:         0       0
   880 ;;      Locals:         0       0
   881 ;;      Temps:          0       2
   882 ;;      Totals:         0       2
   883 ;;Total ram usage:        2 bytes
   884 ;; Hardware stack levels used: 1
   885 ;; Hardware stack levels required when called: 1
   886 ;; This function calls:
   887 ;;		Nothing
   888 ;; This function is called by:
   889 ;;		_ThreeLongOneShort
   890 ;;		_TwoShortOneLong
   891 ;;		_TwoShortTwoLong
   892 ;;		_ThreeShort
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896  019D                     _ShortSound:	
   897                           ;psect for function _ShortSound
   898                           
   899  019D                     l947:	
   900                           ;incstack = 0
   901                           ; Regs used in _ShortSound: [wreg]
   902                           
   903                           
   904                           ;sounds.c: 14:    GP2 = 1;
   905  019D  1283               	bcf	3,5	;RP0=0, select bank0
   906  019E  1505               	bsf	5,2	;volatile
   907  019F                     l949:
   908                           
   909                           ;sounds.c: 15:     _delay((unsigned long)((60)*(4000000/4000.0)));
   910  019F  304E               	movlw	78
   911  01A0  00A3               	movwf	??_ShortSound+1
   912  01A1  30EB               	movlw	235
   913  01A2  00A2               	movwf	??_ShortSound
   914  01A3                     u397:
   915  01A3  0BA2               	decfsz	??_ShortSound,f
   916  01A4  29A3               	goto	u397
   917  01A5  0BA3               	decfsz	??_ShortSound+1,f
   918  01A6  29A3               	goto	u397
   919  01A7                     l951:
   920                           
   921                           ;sounds.c: 16:    GP2 = 0;
   922  01A7  1283               	bcf	3,5	;RP0=0, select bank0
   923  01A8  1105               	bcf	5,2	;volatile
   924                           
   925                           ;sounds.c: 17:     _delay((unsigned long)((80)*(4000000/4000.0)));
   926  01A9  3068               	movlw	104
   927  01AA  00A3               	movwf	??_ShortSound+1
   928  01AB  30E4               	movlw	228
   929  01AC  00A2               	movwf	??_ShortSound
   930  01AD                     u407:
   931  01AD  0BA2               	decfsz	??_ShortSound,f
   932  01AE  29AD               	goto	u407
   933  01AF  0BA3               	decfsz	??_ShortSound+1,f
   934  01B0  29AD               	goto	u407
   935  01B1  0000               	nop
   936  01B2                     l157:
   937  01B2  0008               	return
   938  01B3                     __end_of_ShortSound:
   939                           
   940                           	psect	text4
   941  017B                     __ptext4:	
   942 ;; *************** function _MeasureTemp *****************
   943 ;; Defined at:
   944 ;;		line 104 in file "ADC.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;		None
   949 ;; Return value:  Size  Location     Type
   950 ;;                  2   40[None  ] int 
   951 ;; Registers used:
   952 ;;		wreg, status,2
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMMON   BANK0
   958 ;;      Params:         0       0
   959 ;;      Locals:         0       0
   960 ;;      Temps:          0       2
   961 ;;      Totals:         0       2
   962 ;;Total ram usage:        2 bytes
   963 ;; Hardware stack levels used: 1
   964 ;; Hardware stack levels required when called: 1
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		_Pin7ThermoControl
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972  017B                     _MeasureTemp:	
   973                           ;psect for function _MeasureTemp
   974                           
   975  017B                     l971:	
   976                           ;incstack = 0
   977                           ; Regs used in _MeasureTemp: [wreg+status,2]
   978                           
   979                           
   980                           ;ADC.c: 106:        ADCON0 = 0x00;
   981  017B  1283               	bcf	3,5	;RP0=0, select bank0
   982  017C  019F               	clrf	31	;volatile
   983  017D                     l973:
   984                           
   985                           ;ADC.c: 107:        ADFM = 1;
   986  017D  179F               	bsf	31,7	;volatile
   987  017E                     l975:
   988                           
   989                           ;ADC.c: 108:        ADON = 1;
   990  017E  141F               	bsf	31,0	;volatile
   991  017F                     l977:
   992                           
   993                           ;ADC.c: 110:        _delay((unsigned long)((5)*(4000000/4000.0)));
   994  017F  3007               	movlw	7
   995  0180  00A3               	movwf	??_MeasureTemp+1
   996  0181  307D               	movlw	125
   997  0182  00A2               	movwf	??_MeasureTemp
   998  0183                     u417:
   999  0183  0BA2               	decfsz	??_MeasureTemp,f
  1000  0184  2983               	goto	u417
  1001  0185  0BA3               	decfsz	??_MeasureTemp+1,f
  1002  0186  2983               	goto	u417
  1003  0187                     l979:
  1004                           
  1005                           ;ADC.c: 111:        GO = 1;
  1006  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1007  0188  149F               	bsf	31,1	;volatile
  1008  0189                     l92:	
  1009                           ;ADC.c: 112:        while(!ADIF);
  1010                           
  1011  0189  1F0C               	btfss	12,6	;volatile
  1012  018A  298C               	goto	u201
  1013  018B  298D               	goto	u200
  1014  018C                     u201:
  1015  018C  2989               	goto	l92
  1016  018D                     u200:
  1017  018D                     l981:
  1018                           
  1019                           ;ADC.c: 113:        _delay((unsigned long)((5)*(4000000/4000.0)));
  1020  018D  3007               	movlw	7
  1021  018E  00A3               	movwf	??_MeasureTemp+1
  1022  018F  307D               	movlw	125
  1023  0190  00A2               	movwf	??_MeasureTemp
  1024  0191                     u427:
  1025  0191  0BA2               	decfsz	??_MeasureTemp,f
  1026  0192  2991               	goto	u427
  1027  0193  0BA3               	decfsz	??_MeasureTemp+1,f
  1028  0194  2991               	goto	u427
  1029                           
  1030                           ;ADC.c: 115:        adcValue = (int) ((ADRESH << 8) + ADRESL);
  1031  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1032  0196  081E               	movf	30,w	;volatile
  1033  0197  00AD               	movwf	_adcValue+1
  1034  0198  1683               	bsf	3,5	;RP0=1, select bank1
  1035  0199  081E               	movf	30,w	;volatile
  1036  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1037  019B  00AC               	movwf	_adcValue
  1038  019C                     l95:
  1039  019C  0008               	return
  1040  019D                     __end_of_MeasureTemp:
  1041                           
  1042                           	psect	text5
  1043  0157                     __ptext5:	
  1044 ;; *************** function _Pin6VoltageControl *****************
  1045 ;; Defined at:
  1046 ;;		line 53 in file "ADC.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0
  1060 ;;      Params:         0       0
  1061 ;;      Locals:         0       0
  1062 ;;      Temps:          0       0
  1063 ;;      Totals:         0       0
  1064 ;;Total ram usage:        0 bytes
  1065 ;; Hardware stack levels used: 1
  1066 ;; Hardware stack levels required when called: 2
  1067 ;; This function calls:
  1068 ;;		_MeasureVoltage
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074  0157                     _Pin6VoltageControl:	
  1075                           ;psect for function _Pin6VoltageControl
  1076                           
  1077  0157                     l1029:	
  1078                           ;incstack = 0
  1079                           ; Regs used in _Pin6VoltageControl: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1080                           
  1081                           
  1082                           ;ADC.c: 55:    MeasureVoltage();
  1083  0157  2131               	fcall	_MeasureVoltage
  1084  0158                     l1031:
  1085                           
  1086                           ;ADC.c: 57:     if (adcValue <= 190) GP5 = 1;
  1087  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1088  0159  082D               	movf	_adcValue+1,w
  1089  015A  3A80               	xorlw	128
  1090  015B  00DF               	movwf	btemp+1
  1091  015C  3080               	movlw	128
  1092  015D  025F               	subwf	btemp+1,w
  1093  015E  1D03               	skipz
  1094  015F  2962               	goto	u215
  1095  0160  30BF               	movlw	191
  1096  0161  022C               	subwf	_adcValue,w
  1097  0162                     u215:
  1098  0162  1803               	skipnc
  1099  0163  2965               	goto	u211
  1100  0164  2966               	goto	u210
  1101  0165                     u211:
  1102  0165  2969               	goto	l1035
  1103  0166                     u210:
  1104  0166                     l1033:
  1105  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1106  0167  1685               	bsf	5,5	;volatile
  1107  0168  297A               	goto	l72
  1108  0169                     l1035:
  1109  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1110  016A  082D               	movf	_adcValue+1,w
  1111  016B  3A80               	xorlw	128
  1112  016C  00DF               	movwf	btemp+1
  1113  016D  3081               	movlw	129
  1114  016E  025F               	subwf	btemp+1,w
  1115  016F  1D03               	skipz
  1116  0170  2973               	goto	u225
  1117  0171  3016               	movlw	22
  1118  0172  022C               	subwf	_adcValue,w
  1119  0173                     u225:
  1120  0173  1C03               	skipc
  1121  0174  2976               	goto	u221
  1122  0175  2977               	goto	u220
  1123  0176                     u221:
  1124  0176  2978               	goto	l70
  1125  0177                     u220:
  1126  0177  2966               	goto	l1033
  1127  0178                     l70:	
  1128                           ;ADC.c: 59:     else GP5 = 0;
  1129                           
  1130  0178  1283               	bcf	3,5	;RP0=0, select bank0
  1131  0179  1285               	bcf	5,5	;volatile
  1132  017A                     l72:
  1133  017A  0008               	return
  1134  017B                     __end_of_Pin6VoltageControl:
  1135                           
  1136                           	psect	text6
  1137  0131                     __ptext6:	
  1138 ;; *************** function _MeasureVoltage *****************
  1139 ;; Defined at:
  1140 ;;		line 121 in file "ADC.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;		None
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  2   38[None  ] int 
  1147 ;; Registers used:
  1148 ;;		wreg, status,2
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0
  1154 ;;      Params:         0       0
  1155 ;;      Locals:         0       0
  1156 ;;      Temps:          0       2
  1157 ;;      Totals:         0       2
  1158 ;;Total ram usage:        2 bytes
  1159 ;; Hardware stack levels used: 1
  1160 ;; Hardware stack levels required when called: 1
  1161 ;; This function calls:
  1162 ;;		Nothing
  1163 ;; This function is called by:
  1164 ;;		_Pin6VoltageControl
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168  0131                     _MeasureVoltage:	
  1169                           ;psect for function _MeasureVoltage
  1170                           
  1171  0131                     l953:	
  1172                           ;incstack = 0
  1173                           ; Regs used in _MeasureVoltage: [wreg+status,2]
  1174                           
  1175                           
  1176                           ;ADC.c: 123:     ADCON0 = 0x00;
  1177  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1178  0132  019F               	clrf	31	;volatile
  1179  0133                     l955:
  1180                           
  1181                           ;ADC.c: 124:     ADFM = 1;
  1182  0133  179F               	bsf	31,7	;volatile
  1183  0134                     l957:
  1184                           
  1185                           ;ADC.c: 125:     CHS1 = 0;
  1186  0134  119F               	bcf	31,3	;volatile
  1187  0135                     l959:
  1188                           
  1189                           ;ADC.c: 126:     CHS0 = 1;
  1190  0135  151F               	bsf	31,2	;volatile
  1191  0136                     l961:
  1192                           
  1193                           ;ADC.c: 127:     ADON = 1;
  1194  0136  141F               	bsf	31,0	;volatile
  1195  0137                     l963:
  1196                           
  1197                           ;ADC.c: 129:      _delay((unsigned long)((10)*(4000000/4000.0)));
  1198  0137  300D               	movlw	13
  1199  0138  00A3               	movwf	??_MeasureVoltage+1
  1200  0139  30FB               	movlw	251
  1201  013A  00A2               	movwf	??_MeasureVoltage
  1202  013B                     u437:
  1203  013B  0BA2               	decfsz	??_MeasureVoltage,f
  1204  013C  293B               	goto	u437
  1205  013D  0BA3               	decfsz	??_MeasureVoltage+1,f
  1206  013E  293B               	goto	u437
  1207  013F  2940               	nop2
  1208  0140                     l965:
  1209                           
  1210                           ;ADC.c: 131:        GO = 1;
  1211  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1212  0141  149F               	bsf	31,1	;volatile
  1213  0142                     l98:	
  1214                           ;ADC.c: 132:        while(!ADIF);
  1215                           
  1216  0142  1F0C               	btfss	12,6	;volatile
  1217  0143  2945               	goto	u191
  1218  0144  2946               	goto	u190
  1219  0145                     u191:
  1220  0145  2942               	goto	l98
  1221  0146                     u190:
  1222  0146                     l967:
  1223                           
  1224                           ;ADC.c: 133:      _delay((unsigned long)((10)*(4000000/4000.0)));
  1225  0146  300D               	movlw	13
  1226  0147  00A3               	movwf	??_MeasureVoltage+1
  1227  0148  30FB               	movlw	251
  1228  0149  00A2               	movwf	??_MeasureVoltage
  1229  014A                     u447:
  1230  014A  0BA2               	decfsz	??_MeasureVoltage,f
  1231  014B  294A               	goto	u447
  1232  014C  0BA3               	decfsz	??_MeasureVoltage+1,f
  1233  014D  294A               	goto	u447
  1234  014E  294F               	nop2
  1235                           
  1236                           ;ADC.c: 135:        adcValue = (int) ((ADRESH<<8)+ADRESL);
  1237  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0150  081E               	movf	30,w	;volatile
  1239  0151  00AD               	movwf	_adcValue+1
  1240  0152  1683               	bsf	3,5	;RP0=1, select bank1
  1241  0153  081E               	movf	30,w	;volatile
  1242  0154  1283               	bcf	3,5	;RP0=0, select bank0
  1243  0155  00AC               	movwf	_adcValue
  1244  0156                     l101:
  1245  0156  0008               	return
  1246  0157                     __end_of_MeasureVoltage:
  1247                           
  1248                           	psect	text7
  1249  00D5                     __ptext7:	
  1250 ;; *************** function _Init_uC *****************
  1251 ;; Defined at:
  1252 ;;		line 11 in file "ADC.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0, pclath, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMMON   BANK0
  1266 ;;      Params:         0       0
  1267 ;;      Locals:         0       0
  1268 ;;      Temps:          0       3
  1269 ;;      Totals:         0       3
  1270 ;;Total ram usage:        3 bytes
  1271 ;; Hardware stack levels used: 1
  1272 ;; Hardware stack levels required when called: 2
  1273 ;; This function calls:
  1274 ;;		_LongSound
  1275 ;; This function is called by:
  1276 ;;		_main
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280  00D5                     _Init_uC:	
  1281                           ;psect for function _Init_uC
  1282                           
  1283  00D5                     l989:	
  1284                           ;incstack = 0
  1285                           ; Regs used in _Init_uC: [wreg+status,2+status,0+pclath+cstack]
  1286                           
  1287                           
  1288                           ;ADC.c: 12:  CMCON = 0x07;
  1289  00D5  3007               	movlw	7
  1290  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1291  00D7  0099               	movwf	25	;volatile
  1292  00D8                     l991:
  1293                           
  1294                           ;ADC.c: 13:     VRCON = 0x00;
  1295  00D8  1683               	bsf	3,5	;RP0=1, select bank1
  1296  00D9  0199               	clrf	25	;volatile
  1297  00DA                     l993:
  1298                           
  1299                           ;ADC.c: 16:     TRISIO = 0;
  1300  00DA  0185               	clrf	5	;volatile
  1301  00DB                     l995:
  1302                           
  1303                           ;ADC.c: 17:     GPIO = 0;
  1304  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1305  00DC  0185               	clrf	5	;volatile
  1306  00DD                     l997:
  1307                           
  1308                           ;ADC.c: 20:     TRISIO2 = 0;
  1309  00DD  1683               	bsf	3,5	;RP0=1, select bank1
  1310  00DE  1105               	bcf	5,2	;volatile
  1311  00DF                     l999:
  1312                           
  1313                           ;ADC.c: 21:     GP2 = 0;
  1314  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1315  00E0  1105               	bcf	5,2	;volatile
  1316  00E1                     l1001:
  1317                           
  1318                           ;ADC.c: 24:     TRISIO5 = 0;
  1319  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  1320  00E2  1285               	bcf	5,5	;volatile
  1321  00E3                     l1003:
  1322                           
  1323                           ;ADC.c: 25:     GP5 = 1;
  1324  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1325  00E4  1685               	bsf	5,5	;volatile
  1326  00E5                     l1005:
  1327                           
  1328                           ;ADC.c: 27:     pwmValue = 0;
  1329  00E5  01AE               	clrf	_pwmValue
  1330  00E6  01AF               	clrf	_pwmValue+1
  1331  00E7                     l1007:
  1332                           
  1333                           ;ADC.c: 28:     adcValue = 0;
  1334  00E7  01AC               	clrf	_adcValue
  1335  00E8  01AD               	clrf	_adcValue+1
  1336  00E9                     l1009:
  1337                           
  1338                           ;ADC.c: 32:     TRISIO4 = 0;
  1339  00E9  1683               	bsf	3,5	;RP0=1, select bank1
  1340  00EA  1205               	bcf	5,4	;volatile
  1341  00EB                     l1011:
  1342                           
  1343                           ;ADC.c: 33:     GP4 = 0;
  1344  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1345  00EC  1205               	bcf	5,4	;volatile
  1346  00ED                     l1013:
  1347                           
  1348                           ;ADC.c: 37:     ADON = 1;
  1349  00ED  141F               	bsf	31,0	;volatile
  1350  00EE                     l1015:
  1351                           
  1352                           ;ADC.c: 39:     VCFG = 1;
  1353  00EE  171F               	bsf	31,6	;volatile
  1354  00EF                     l1017:
  1355                           
  1356                           ;ADC.c: 40:     TRISIO0 = 1;
  1357  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  1358  00F0  1405               	bsf	5,0	;volatile
  1359  00F1                     l1019:
  1360                           
  1361                           ;ADC.c: 41:     TRISIO1 = 1;
  1362  00F1  1485               	bsf	5,1	;volatile
  1363  00F2                     l1021:
  1364                           
  1365                           ;ADC.c: 43:     ANSEL = 0b00110011;
  1366  00F2  3033               	movlw	51
  1367  00F3  009F               	movwf	31	;volatile
  1368  00F4                     l1023:
  1369                           
  1370                           ;ADC.c: 45:     GIE = 1;
  1371  00F4  178B               	bsf	11,7	;volatile
  1372  00F5                     l1025:
  1373                           
  1374                           ;ADC.c: 47:     LongSound();
  1375  00F5  21B3               	fcall	_LongSound
  1376  00F6                     l1027:
  1377                           
  1378                           ;ADC.c: 48:     _delay((unsigned long)((700)*(4000000/4000.0)));
  1379  00F6  3004               	movlw	4
  1380  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1381  00F8  00A6               	movwf	??_Init_uC+2
  1382  00F9  308E               	movlw	142
  1383  00FA  00A5               	movwf	??_Init_uC+1
  1384  00FB  3012               	movlw	18
  1385  00FC  00A4               	movwf	??_Init_uC
  1386  00FD                     u457:
  1387  00FD  0BA4               	decfsz	??_Init_uC,f
  1388  00FE  28FD               	goto	u457
  1389  00FF  0BA5               	decfsz	??_Init_uC+1,f
  1390  0100  28FD               	goto	u457
  1391  0101  0BA6               	decfsz	??_Init_uC+2,f
  1392  0102  28FD               	goto	u457
  1393  0103  0000               	nop
  1394  0104                     l65:
  1395  0104  0008               	return
  1396  0105                     __end_of_Init_uC:
  1397                           
  1398                           	psect	text8
  1399  01B3                     __ptext8:	
  1400 ;; *************** function _LongSound *****************
  1401 ;; Defined at:
  1402 ;;		line 6 in file "sounds.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0
  1416 ;;      Params:         0       0
  1417 ;;      Locals:         0       0
  1418 ;;      Temps:          0       2
  1419 ;;      Totals:         0       2
  1420 ;;Total ram usage:        2 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; Hardware stack levels required when called: 1
  1423 ;; This function calls:
  1424 ;;		Nothing
  1425 ;; This function is called by:
  1426 ;;		_Init_uC
  1427 ;;		_ThreeLongOneShort
  1428 ;;		_TwoShortOneLong
  1429 ;;		_TwoShortTwoLong
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433  01B3                     _LongSound:	
  1434                           ;psect for function _LongSound
  1435                           
  1436  01B3                     l941:	
  1437                           ;incstack = 0
  1438                           ; Regs used in _LongSound: [wreg]
  1439                           
  1440                           
  1441                           ;sounds.c: 7:    GP2 = 1;
  1442  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1443  01B4  1505               	bsf	5,2	;volatile
  1444  01B5                     l943:
  1445                           
  1446                           ;sounds.c: 8:     _delay((unsigned long)((150)*(4000000/4000.0)));
  1447  01B5  30C3               	movlw	195
  1448  01B6  00A3               	movwf	??_LongSound+1
  1449  01B7  30CD               	movlw	205
  1450  01B8  00A2               	movwf	??_LongSound
  1451  01B9                     u467:
  1452  01B9  0BA2               	decfsz	??_LongSound,f
  1453  01BA  29B9               	goto	u467
  1454  01BB  0BA3               	decfsz	??_LongSound+1,f
  1455  01BC  29B9               	goto	u467
  1456  01BD                     l945:
  1457                           
  1458                           ;sounds.c: 9:    GP2 = 0;
  1459  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1460  01BE  1105               	bcf	5,2	;volatile
  1461                           
  1462                           ;sounds.c: 10:     _delay((unsigned long)((80)*(4000000/4000.0)));
  1463  01BF  3068               	movlw	104
  1464  01C0  00A3               	movwf	??_LongSound+1
  1465  01C1  30E4               	movlw	228
  1466  01C2  00A2               	movwf	??_LongSound
  1467  01C3                     u477:
  1468  01C3  0BA2               	decfsz	??_LongSound,f
  1469  01C4  29C3               	goto	u477
  1470  01C5  0BA3               	decfsz	??_LongSound+1,f
  1471  01C6  29C3               	goto	u477
  1472  01C7  0000               	nop
  1473  01C8                     l154:
  1474  01C8  0008               	return
  1475  01C9                     __end_of_LongSound:
  1476                           
  1477                           	psect	text9
  1478  01F1                     __ptext9:	
  1479 ;; *************** function _InitTimer0 *****************
  1480 ;; Defined at:
  1481 ;;		line 4 in file "timer0.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0
  1495 ;;      Params:         0       0
  1496 ;;      Locals:         0       0
  1497 ;;      Temps:          0       1
  1498 ;;      Totals:         0       1
  1499 ;;Total ram usage:        1 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 1
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_main
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509  01F1                     _InitTimer0:	
  1510                           ;psect for function _InitTimer0
  1511                           
  1512  01F1                     l1083:	
  1513                           ;incstack = 0
  1514                           ; Regs used in _InitTimer0: [wreg+status,2+status,0]
  1515                           
  1516                           
  1517                           ;timer0.c: 7:  OPTION_REG &= 0xC0;
  1518  01F1  30C0               	movlw	192
  1519  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1520  01F3  00A2               	movwf	??_InitTimer0
  1521  01F4  0822               	movf	??_InitTimer0,w
  1522  01F5  1683               	bsf	3,5	;RP0=1, select bank1
  1523  01F6  0581               	andwf	1,f	;volatile
  1524  01F7                     l1085:
  1525                           
  1526                           ;timer0.c: 8:  T0IE = 1;
  1527  01F7  168B               	bsf	11,5	;volatile
  1528  01F8                     l127:
  1529  01F8  0008               	return
  1530  01F9                     __end_of_InitTimer0:
  1531                           
  1532                           	psect	text10
  1533  0105                     __ptext10:	
  1534 ;; *************** function _ISR *****************
  1535 ;; Defined at:
  1536 ;;		line 7 in file "interrupt.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, status,2
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMMON   BANK0
  1550 ;;      Params:         0       0
  1551 ;;      Locals:         0       0
  1552 ;;      Temps:          0       2
  1553 ;;      Totals:         0       2
  1554 ;;Total ram usage:        2 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; This function calls:
  1557 ;;		Nothing
  1558 ;; This function is called by:
  1559 ;;		Interrupt level 1
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563  0105                     _ISR:	
  1564                           ;psect for function _ISR
  1565                           
  1566  0105                     i1l1087:
  1567                           
  1568                           ;interrupt.c: 9:       TMR0 = 200;
  1569  0105  30C8               	movlw	200
  1570  0106  0081               	movwf	1	;volatile
  1571                           
  1572                           ;interrupt.c: 10:       pulsePerTakt++;
  1573  0107  3001               	movlw	1
  1574  0108  07AA               	addwf	_pulsePerTakt,f
  1575  0109  1803               	skipnc
  1576  010A  0AAB               	incf	_pulsePerTakt+1,f
  1577  010B  3000               	movlw	0
  1578  010C  07AB               	addwf	_pulsePerTakt+1,f
  1579  010D                     i1l1089:
  1580                           
  1581                           ;interrupt.c: 11:    if(T0IF)
  1582  010D  1D0B               	btfss	11,2	;volatile
  1583  010E  2910               	goto	u34_21
  1584  010F  2911               	goto	u34_20
  1585  0110                     u34_21:
  1586  0110  291F               	goto	i1l1095
  1587  0111                     u34_20:
  1588  0111                     i1l1091:
  1589                           
  1590                           ;interrupt.c: 12:     {;interrupt.c: 13:         if (pulsePerTakt < pwmValue)
  1591  0111  082F               	movf	_pwmValue+1,w
  1592  0112  022B               	subwf	_pulsePerTakt+1,w
  1593  0113  1D03               	skipz
  1594  0114  2917               	goto	u35_25
  1595  0115  082E               	movf	_pwmValue,w
  1596  0116  022A               	subwf	_pulsePerTakt,w
  1597  0117                     u35_25:
  1598  0117  1803               	skipnc
  1599  0118  291A               	goto	u35_21
  1600  0119  291B               	goto	u35_20
  1601  011A                     u35_21:
  1602  011A  291D               	goto	i1l117
  1603  011B                     u35_20:
  1604  011B                     i1l1093:
  1605                           
  1606                           ;interrupt.c: 14:          {GP4 = 1;}
  1607  011B  1605               	bsf	5,4	;volatile
  1608  011C  291E               	goto	i1l118
  1609  011D                     i1l117:	
  1610                           ;interrupt.c: 15:         else
  1611                           
  1612                           
  1613                           ;interrupt.c: 16:    {GP4 = 0;}
  1614  011D  1205               	bcf	5,4	;volatile
  1615  011E                     i1l118:
  1616                           
  1617                           ;interrupt.c: 17:   T0IF = 0;
  1618  011E  110B               	bcf	11,2	;volatile
  1619  011F                     i1l1095:
  1620                           
  1621                           ;interrupt.c: 19:       if (pulsePerTakt > 100)
  1622  011F  3000               	movlw	0
  1623  0120  022B               	subwf	_pulsePerTakt+1,w
  1624  0121  3065               	movlw	101
  1625  0122  1903               	skipnz
  1626  0123  022A               	subwf	_pulsePerTakt,w
  1627  0124  1C03               	skipc
  1628  0125  2927               	goto	u36_21
  1629  0126  2928               	goto	u36_20
  1630  0127                     u36_21:
  1631  0127  292A               	goto	i1l120
  1632  0128                     u36_20:
  1633  0128                     i1l1097:
  1634                           
  1635                           ;interrupt.c: 20:        {;interrupt.c: 21:          pulsePerTakt = 0;
  1636  0128  01AA               	clrf	_pulsePerTakt
  1637  0129  01AB               	clrf	_pulsePerTakt+1
  1638  012A                     i1l120:
  1639  012A  0821               	movf	??_ISR+1,w
  1640  012B  008A               	movwf	10
  1641  012C  0E20               	swapf	??_ISR,w
  1642  012D  0083               	movwf	3
  1643  012E  0EDE               	swapf	btemp,f
  1644  012F  0E5E               	swapf	btemp,w
  1645  0130  0009               	retfie
  1646  0131                     __end_of_ISR:
  1647  005E                     btemp	set	94	;btemp
  1648  005E                     wtemp0	set	94
  1649                           
  1650                           	psect	intentry
  1651  0004                     __pintentry:	
  1652                           ;incstack = 0
  1653                           ; Regs used in _ISR: [wreg+status,2]
  1654                           
  1655  0004                     interrupt_function:
  1656  005E                     saved_w	set	btemp
  1657  0004  00DE               	movwf	btemp
  1658  0005  0E03               	swapf	3,w
  1659  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1660  0007  00A0               	movwf	??_ISR
  1661  0008  080A               	movf	10,w
  1662  0009  00A1               	movwf	??_ISR+1
  1663  000A  2905               	ljmp	_ISR
  1664                           
  1665                           	psect	config
  1666                           
  1667                           ;Config register CONFIG @ 0x2007
  1668                           ;	Oscillator Selection bits
  1669                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  1670                           ;	Watchdog Timer Enable bit
  1671                           ;	WDTE = OFF, WDT disabled
  1672                           ;	Power-Up Timer Enable bit
  1673                           ;	PWRTE = OFF, PWRT disabled
  1674                           ;	GP3/MCLR pin function select
  1675                           ;	MCLRE = ON, GP3/MCLR pin function is MCLR
  1676                           ;	Brown-out Detect Enable bit
  1677                           ;	BOREN = ON, BOD enabled
  1678                           ;	Code Protection bit
  1679                           ;	CP = OFF, Program Memory code protection is disabled
  1680                           ;	Data Code Protection bit
  1681                           ;	CPD = OFF, Data memory code protection is disabled
  1682  2007                     	org	8199
  1683  2007  31F4               	dw	12788

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     10      16

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Init_uC
    _Pin7ThermoControl->_ThreeLongOneShort
    _ThreeLongOneShort->_LongSound
    _ThreeLongOneShort->_ShortSound
    _Pin6VoltageControl->_MeasureVoltage
    _Init_uC->_LongSound

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              7 BANK0      3     3      0
                         _InitTimer0
                            _Init_uC
                 _Pin6VoltageControl
                  _Pin7ThermoControl
 ---------------------------------------------------------------------------------
 (1) _Pin7ThermoControl                                    0     0      0       0
                        _MeasureTemp
                  _ThreeLongOneShort
 ---------------------------------------------------------------------------------
 (2) _ThreeLongOneShort                                    3     3      0       0
                                              4 BANK0      3     3      0
                          _LongSound
                         _ShortSound
 ---------------------------------------------------------------------------------
 (3) _ShortSound                                           2     2      0       0
                                              2 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _MeasureTemp                                          2     2      0       0
                                              2 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Pin6VoltageControl                                   0     0      0       0
                     _MeasureVoltage
 ---------------------------------------------------------------------------------
 (2) _MeasureVoltage                                       2     2      0       0
                                              2 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Init_uC                                              3     3      0       0
                                              4 BANK0      3     3      0
                          _LongSound
 ---------------------------------------------------------------------------------
 (3) _LongSound                                            2     2      0       0
                                              2 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitTimer0
   _Init_uC
     _LongSound
   _Pin6VoltageControl
     _MeasureVoltage
   _Pin7ThermoControl
     _MeasureTemp
     _ThreeLongOneShort
       _LongSound
       _ShortSound

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      A      10       4       25.8%
ABS                  0      0      10       5        0.0%
DATA                 0      0      10       6        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Oct 23 21:33:42 2023

                        l70 0178                          l72 017A                          l65 0104  
                        l92 0189                          l85 00BF                          l95 019C  
                        l89 00D4                          _GO 00F9                          l98 0142  
              _pulsePerTakt 002A                         l101 0156                         l127 01F8  
                       l154 01C8                         l157 01B2                         l169 01F0  
                       l941 01B3                         l943 01B5                         l951 01A7  
                       l945 01BD                         l961 0136                         l953 0131  
                       l963 0137                         l955 0133                         l971 017B  
                       l947 019D                         l965 0140                         l957 0134  
                       l981 018D                         l973 017D                         l949 019F  
                       _GP2 002A                         l991 00D8                         l967 0146  
                       l959 0135                         l975 017E                         _GP4 002C  
                       l993 00DA                         l977 017F                         l985 01DE  
                       _GP5 002D                         l995 00DB                         l979 0187  
                       l987 01E2                         _GIE 005F                         l997 00DD  
                       l989 00D5                         l999 00DF                         u200 018D  
                       u201 018C                         u210 0166                         u211 0165  
                       u220 0177                         u300 0097                         u221 0176  
                       u301 0096                         u310 00AB                         u230 0024  
                       u215 0162                         u311 00AA                         u231 0023  
                       u320 00B9                         u240 0038                         u225 0173  
                       u321 00B8                         u305 0093                         u241 0037  
                       u330 00D4                         u250 0047                         u331 00D3  
                       u315 00A7                         u251 0046                         u235 0020  
                       u260 0055                         u325 00B5                         u261 0054  
                       u245 0034                         u190 0146                         u270 0067  
                       u191 0145                         u407 01AD                         u335 00D0  
                       u271 0066                         u255 0043                         u280 0075  
                       u417 0183                         u281 0074                         u265 0051  
                       u290 0089                         u427 0191                         u291 0088  
                       u275 0063                         _ISR 0105                         u437 013B  
                       u285 0071                         u447 014A                         u295 0085  
                       u457 00FD                         u377 01D3                         u467 01B9  
                       u387 01E9                         u477 01C3                         u397 01A3  
                      ?_ISR 0020                        l1001 00E1                        l1011 00EB  
                      l1003 00E3                        l1021 00F2                        l1013 00ED  
                      l1005 00E5                        l1101 01CB                        l1023 00F4  
                      l1015 00EE                        l1007 00E7                        l1031 0158  
                      l1103 01CC                        l1025 00F5                        l1017 00EF  
                      l1009 00E9                        l1033 0166                        l1041 0016  
                      l1105 01DA                        l1027 00F6                        l1019 00F1  
                      l1035 0169                        l1051 002A                        l1043 0024  
                      l1107 01DB                        l1029 0157                        l1061 0067  
                      l1045 0026                        l1053 0039                        l1071 009D  
                      l1063 0075                        l1055 0047                        l1047 0028  
                      l1039 0015                        l1081 00C6                        l1073 00AB  
                      l1065 007B                        l1057 0055                        l1049 0029  
                      l1083 01F1                        l1075 00B9                        l1067 0089  
                      l1059 0059                        l1085 01F7                        l1077 00C1  
                      l1069 0097                        l1079 00C5                        l1099 01C9  
                      _ADIF 0066                        _ADFM 00FF                        _ADON 00F8  
                      _CHS0 00FA                        _CHS1 00FB                        _T0IE 005D  
                      _T0IF 005A                        _GPIO 0005                        _VCFG 00FE  
                      _TMR0 0001                        _main 01C9                        btemp 005E  
                      start 000B               ??_MeasureTemp 0022             __end_of_Init_uC 0105  
                     ??_ISR 0020                       ?_main 0020                       _CMCON 0019  
                     _ANSEL 009F                       i1l120 012A                       i1l117 011D  
                     i1l118 011E                       u34_20 0111                       u34_21 0110  
                     u35_20 011B                       u35_21 011A                       u35_25 0117  
                     u36_20 0128                       u36_21 0127                       _VRCON 0099  
                     pclath 000A                       status 0003              _MeasureVoltage 0131  
                     wtemp0 005E  __end_of_Pin6VoltageControl 017B             __initialization 000C  
                _InitTimer0 01F1                __end_of_main 01DE         __end_of_MeasureTemp 019D  
                    ??_main 0027                      _ADCON0 001F                      _ADRESH 001E  
                    _ADRESL 009E      __end_of_MeasureVoltage 0157                      i1l1091 0111  
                    i1l1093 011B                      i1l1095 011F                      i1l1087 0105  
                    i1l1097 0128                      i1l1089 010D                      _TRISIO 0085  
                 ??_Init_uC 0024                  _ShortSound 019D                      saved_w 005E  
           ?_MeasureVoltage 0020     __end_of__initialization 0013                 _MeasureTemp 017B  
               ?_InitTimer0 0020              __pcstackCOMMON 0000           __end_of_LongSound 01C9  
                __pbssBANK0 002A                  __pmaintext 01C9                  __pintentry 0004  
               ?_ShortSound 0020                     _TRISIO0 0428                     _TRISIO1 0429  
                   _TRISIO2 042A                     _TRISIO4 042C                     _TRISIO5 042D  
                   _Init_uC 00D5           _Pin7ThermoControl 0015          ?_Pin7ThermoControl 0020  
       ??_Pin7ThermoControl 0000                     __ptext1 0015                     __ptext2 01DE  
                   __ptext3 019D                     __ptext4 017B                     __ptext5 0157  
                   __ptext6 0131                     __ptext7 00D5                     __ptext8 01B3  
                   __ptext9 01F1          _Pin6VoltageControl 0157         ?_Pin6VoltageControl 0020  
      end_of_initialization 0013   __end_of_Pin7ThermoControl 00D5        ??_Pin6VoltageControl 0000  
          ??_MeasureVoltage 0022                ?_MeasureTemp 0020                ??_InitTimer0 0022  
       start_initialization 000C                 __end_of_ISR 0131          __end_of_InitTimer0 01F9  
                 _LongSound 01B3                ??_ShortSound 0022                   ___latbits 0000  
             __pcstackBANK0 0020                  ?_LongSound 0020                    ?_Init_uC 0020  
        __end_of_ShortSound 01B3           interrupt_function 0004           _ThreeLongOneShort 01DE  
               ??_LongSound 0022          ?_ThreeLongOneShort 0020         ??_ThreeLongOneShort 0024  
                  _adcValue 002C   __end_of_ThreeLongOneShort 01F1                    __ptext10 0105  
                  _pwmValue 002E                  _INTCONbits 000B                    intlevel1 0000  
                _OPTION_REG 0081  
