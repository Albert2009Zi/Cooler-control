

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Nov 30 19:17:29 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x5E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 29/04/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC12F675 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0019                     	;# 
    66  001E                     	;# 
    67  001F                     	;# 
    68  0081                     	;# 
    69  0085                     	;# 
    70  008C                     	;# 
    71  008E                     	;# 
    72  0090                     	;# 
    73  0095                     	;# 
    74  0096                     	;# 
    75  0096                     	;# 
    76  0099                     	;# 
    77  009A                     	;# 
    78  009A                     	;# 
    79  009B                     	;# 
    80  009C                     	;# 
    81  009D                     	;# 
    82  009E                     	;# 
    83  009F                     	;# 
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0019                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  008C                     	;# 
   103  008E                     	;# 
   104  0090                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0096                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0019                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  0081                     	;# 
   133  0085                     	;# 
   134  008C                     	;# 
   135  008E                     	;# 
   136  0090                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0096                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0019                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  008C                     	;# 
   167  008E                     	;# 
   168  0090                     	;# 
   169  0095                     	;# 
   170  0096                     	;# 
   171  0096                     	;# 
   172  0099                     	;# 
   173  009A                     	;# 
   174  009A                     	;# 
   175  009B                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  009F                     	;# 
   180  0000                     	;# 
   181  0001                     	;# 
   182  0002                     	;# 
   183  0003                     	;# 
   184  0004                     	;# 
   185  0005                     	;# 
   186  000A                     	;# 
   187  000B                     	;# 
   188  000C                     	;# 
   189  000E                     	;# 
   190  000E                     	;# 
   191  000F                     	;# 
   192  0010                     	;# 
   193  0019                     	;# 
   194  001E                     	;# 
   195  001F                     	;# 
   196  0081                     	;# 
   197  0085                     	;# 
   198  008C                     	;# 
   199  008E                     	;# 
   200  0090                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0096                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0019                     	;# 
   226  001E                     	;# 
   227  001F                     	;# 
   228  0081                     	;# 
   229  0085                     	;# 
   230  008C                     	;# 
   231  008E                     	;# 
   232  0090                     	;# 
   233  0095                     	;# 
   234  0096                     	;# 
   235  0096                     	;# 
   236  0099                     	;# 
   237  009A                     	;# 
   238  009A                     	;# 
   239  009B                     	;# 
   240  009C                     	;# 
   241  009D                     	;# 
   242  009E                     	;# 
   243  009F                     	;# 
   244  001F                     _ADCON0	set	31
   245  0005                     _GPIO	set	5
   246  0019                     _CMCON	set	25
   247  000B                     _INTCONbits	set	11
   248  001E                     _ADRESH	set	30
   249  00FA                     _CHS0	set	250
   250  00FB                     _CHS1	set	251
   251  00FF                     _ADFM	set	255
   252  005F                     _GIE	set	95
   253  00FE                     _VCFG	set	254
   254  00F8                     _ADON	set	248
   255  002A                     _GP2	set	42
   256  00F9                     _GO	set	249
   257  002D                     _GP5	set	45
   258  0066                     _ADIF	set	102
   259  002C                     _GP4	set	44
   260  005A                     _T0IF	set	90
   261  005D                     _T0IE	set	93
   262  009F                     _ANSEL	set	159
   263  0085                     _TRISIO	set	133
   264  0099                     _VRCON	set	153
   265  0081                     _OPTION_REG	set	129
   266  009E                     _ADRESL	set	158
   267  0429                     _TRISIO1	set	1065
   268  0428                     _TRISIO0	set	1064
   269  042C                     _TRISIO4	set	1068
   270  042D                     _TRISIO5	set	1069
   271  042A                     _TRISIO2	set	1066
   272                           
   273                           	psect	cinit
   274  000C                     start_initialization:	
   275                           ; #config settings
   276                           
   277  000C                     __initialization:
   278                           
   279                           ; Clear objects allocated to BANK0
   280  000C  1283               	bcf	3,5	;RP0=0, select bank0
   281  000D  01A8               	clrf	__pbssBANK0& (0+127)
   282  000E  01A9               	clrf	(__pbssBANK0+1)& (0+127)
   283  000F  01AA               	clrf	(__pbssBANK0+2)& (0+127)
   284  0010  01AB               	clrf	(__pbssBANK0+3)& (0+127)
   285  0011  01AC               	clrf	(__pbssBANK0+4)& (0+127)
   286  0012                     end_of_initialization:	
   287                           ;End of C runtime variable initialization code
   288                           
   289  0012                     __end_of__initialization:
   290  0012  0183               	clrf	3
   291  0013  28C6               	ljmp	_main	;jump to C main() function
   292                           
   293                           	psect	bssBANK0
   294  0028                     __pbssBANK0:
   295  0028                     _adcValue:
   296  0028                     	ds	2
   297  002A                     _errorFlag:
   298  002A                     	ds	1
   299  002B                     _pulsePerTakt:
   300  002B                     	ds	1
   301  002C                     _pwmValue:
   302  002C                     	ds	1
   303                           
   304                           	psect	cstackCOMMON
   305  0000                     __pcstackCOMMON:
   306  0000                     ??_MuxVoltage:
   307  0000                     ??_main:	
   308                           ; 1 bytes @ 0x0
   309                           
   310                           
   311                           	psect	cstackBANK0
   312  0020                     __pcstackBANK0:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0020                     ?_Init_uC:
   316  0020                     ?_MuxVoltage:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0020                     ?_ISR:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0020                     ??_ISR:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0020                     ?_InitTimer0:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0020                     ?_main:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0020                     ?_LongSound:	
   332                           ; 1 bytes @ 0x0
   333                           
   334                           
   335                           ; 1 bytes @ 0x0
   336  0020                     	ds	3
   337  0023                     ??_InitTimer0:
   338  0023                     ??_LongSound:	
   339                           ; 1 bytes @ 0x3
   340                           
   341                           
   342                           ; 1 bytes @ 0x3
   343  0023                     	ds	2
   344  0025                     ??_Init_uC:
   345                           
   346                           ; 1 bytes @ 0x5
   347  0025                     	ds	3
   348                           
   349                           	psect	maintext
   350  00C6                     __pmaintext:	
   351 ;;
   352 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   353 ;;
   354 ;; *************** function _main *****************
   355 ;; Defined at:
   356 ;;		line 63 in file "main.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;		None
   361 ;; Return value:  Size  Location     Type
   362 ;;                  1    wreg      void 
   363 ;; Registers used:
   364 ;;		wreg, status,2, status,0, pclath, cstack
   365 ;; Tracked objects:
   366 ;;		On entry : B00/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMMON   BANK0
   370 ;;      Params:         0       0
   371 ;;      Locals:         0       0
   372 ;;      Temps:          0       0
   373 ;;      Totals:         0       0
   374 ;;Total ram usage:        0 bytes
   375 ;; Hardware stack levels required when called: 3
   376 ;; This function calls:
   377 ;;		_InitTimer0
   378 ;;		_Init_uC
   379 ;;		_MuxVoltage
   380 ;; This function is called by:
   381 ;;		Startup code after reset
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385  00C6                     _main:	
   386                           ;psect for function _main
   387                           
   388  00C6                     l1129:	
   389                           ;incstack = 0
   390                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   391                           
   392  00C6  20BE               	fcall	_InitTimer0
   393  00C7  2073               	fcall	_Init_uC
   394  00C8                     l1131:
   395  00C8  178B               	bsf	11,7	;volatile
   396  00C9                     l1133:
   397  00C9  20B6               	fcall	_MuxVoltage
   398  00CA                     l63:
   399  00CA                     l64:
   400  00CA  28CA               	goto	l63
   401  00CB  280B               	ljmp	start
   402  00CC                     __end_of_main:
   403                           
   404                           	psect	text1
   405  00B6                     __ptext1:	
   406 ;; *************** function _MuxVoltage *****************
   407 ;; Defined at:
   408 ;;		line 158 in file "ADC.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;		None
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		status,2
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMMON   BANK0
   422 ;;      Params:         0       0
   423 ;;      Locals:         0       0
   424 ;;      Temps:          0       0
   425 ;;      Totals:         0       0
   426 ;;Total ram usage:        0 bytes
   427 ;; Hardware stack levels used: 1
   428 ;; Hardware stack levels required when called: 1
   429 ;; This function calls:
   430 ;;		Nothing
   431 ;; This function is called by:
   432 ;;		_main
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436  00B6                     _MuxVoltage:	
   437                           ;psect for function _MuxVoltage
   438                           
   439  00B6                     l1067:	
   440                           ;incstack = 0
   441                           ; Regs used in _MuxVoltage: [status,2]
   442                           
   443                           
   444                           ;ADC.c: 159:        ADCON0 = 0x00;
   445  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   446  00B7  019F               	clrf	31	;volatile
   447  00B8                     l1069:
   448                           
   449                           ;ADC.c: 160:        ADFM = 1;
   450  00B8  179F               	bsf	31,7	;volatile
   451  00B9                     l1071:
   452                           
   453                           ;ADC.c: 161:        CHS1 = 0;
   454  00B9  119F               	bcf	31,3	;volatile
   455  00BA                     l1073:
   456                           
   457                           ;ADC.c: 162:        CHS0 = 1;
   458  00BA  151F               	bsf	31,2	;volatile
   459  00BB                     l1075:
   460                           
   461                           ;ADC.c: 163:        ADON = 1;
   462  00BB  141F               	bsf	31,0	;volatile
   463  00BC                     l1077:
   464                           
   465                           ;ADC.c: 165:        GO = 1;
   466  00BC  149F               	bsf	31,1	;volatile
   467  00BD                     l203:
   468  00BD  0008               	return
   469  00BE                     __end_of_MuxVoltage:
   470                           
   471                           	psect	text2
   472  0073                     __ptext2:	
   473 ;; *************** function _Init_uC *****************
   474 ;; Defined at:
   475 ;;		line 12 in file "ADC.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;		None
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      void 
   482 ;; Registers used:
   483 ;;		wreg, status,2, status,0, pclath, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMMON   BANK0
   489 ;;      Params:         0       0
   490 ;;      Locals:         0       0
   491 ;;      Temps:          0       3
   492 ;;      Totals:         0       3
   493 ;;Total ram usage:        3 bytes
   494 ;; Hardware stack levels used: 1
   495 ;; Hardware stack levels required when called: 2
   496 ;; This function calls:
   497 ;;		_LongSound
   498 ;; This function is called by:
   499 ;;		_main
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503  0073                     _Init_uC:	
   504                           ;psect for function _Init_uC
   505                           
   506  0073                     l1029:	
   507                           ;incstack = 0
   508                           ; Regs used in _Init_uC: [wreg+status,2+status,0+pclath+cstack]
   509                           
   510                           
   511                           ;ADC.c: 13:  CMCON = 0x07;
   512  0073  3007               	movlw	7
   513  0074  1283               	bcf	3,5	;RP0=0, select bank0
   514  0075  0099               	movwf	25	;volatile
   515  0076                     l1031:
   516                           
   517                           ;ADC.c: 14:     VRCON = 0x00;
   518  0076  1683               	bsf	3,5	;RP0=1, select bank1
   519  0077  0199               	clrf	25	;volatile
   520  0078                     l1033:
   521                           
   522                           ;ADC.c: 17:     TRISIO = 0;
   523  0078  0185               	clrf	5	;volatile
   524  0079                     l1035:
   525                           
   526                           ;ADC.c: 18:     GPIO = 0;
   527  0079  1283               	bcf	3,5	;RP0=0, select bank0
   528  007A  0185               	clrf	5	;volatile
   529  007B                     l1037:
   530                           
   531                           ;ADC.c: 21:     TRISIO2 = 0;
   532  007B  1683               	bsf	3,5	;RP0=1, select bank1
   533  007C  1105               	bcf	5,2	;volatile
   534  007D                     l1039:
   535                           
   536                           ;ADC.c: 22:     GP2 = 0;
   537  007D  1283               	bcf	3,5	;RP0=0, select bank0
   538  007E  1105               	bcf	5,2	;volatile
   539  007F                     l1041:
   540                           
   541                           ;ADC.c: 25:     TRISIO5 = 0;
   542  007F  1683               	bsf	3,5	;RP0=1, select bank1
   543  0080  1285               	bcf	5,5	;volatile
   544  0081                     l1043:
   545                           
   546                           ;ADC.c: 26:     GP5 = 1;
   547  0081  1283               	bcf	3,5	;RP0=0, select bank0
   548  0082  1685               	bsf	5,5	;volatile
   549  0083                     l1045:
   550                           
   551                           ;ADC.c: 27:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   552  0083  3006               	movlw	6
   553  0084  00A7               	movwf	??_Init_uC+2
   554  0085  3013               	movlw	19
   555  0086  00A6               	movwf	??_Init_uC+1
   556  0087  30AD               	movlw	173
   557  0088  00A5               	movwf	??_Init_uC
   558  0089                     u357:
   559  0089  0BA5               	decfsz	??_Init_uC,f
   560  008A  2889               	goto	u357
   561  008B  0BA6               	decfsz	??_Init_uC+1,f
   562  008C  2889               	goto	u357
   563  008D  0BA7               	decfsz	??_Init_uC+2,f
   564  008E  2889               	goto	u357
   565  008F  2890               	nop2
   566  0090                     l1047:
   567                           
   568                           ;ADC.c: 28:     GP5 = 0;
   569  0090  1283               	bcf	3,5	;RP0=0, select bank0
   570  0091  1285               	bcf	5,5	;volatile
   571  0092                     l1049:
   572                           
   573                           ;ADC.c: 31:     TRISIO4 = 0;
   574  0092  1683               	bsf	3,5	;RP0=1, select bank1
   575  0093  1205               	bcf	5,4	;volatile
   576  0094                     l1051:
   577                           
   578                           ;ADC.c: 32:     GP4 = 0;
   579  0094  1283               	bcf	3,5	;RP0=0, select bank0
   580  0095  1205               	bcf	5,4	;volatile
   581  0096                     l1053:
   582                           
   583                           ;ADC.c: 36:     ADON = 1;
   584  0096  141F               	bsf	31,0	;volatile
   585  0097                     l1055:
   586                           
   587                           ;ADC.c: 38:     VCFG = 1;
   588  0097  171F               	bsf	31,6	;volatile
   589  0098                     l1057:
   590                           
   591                           ;ADC.c: 39:     TRISIO0 = 1;
   592  0098  1683               	bsf	3,5	;RP0=1, select bank1
   593  0099  1405               	bsf	5,0	;volatile
   594  009A                     l1059:
   595                           
   596                           ;ADC.c: 40:     TRISIO1 = 1;
   597  009A  1485               	bsf	5,1	;volatile
   598  009B                     l1061:
   599                           
   600                           ;ADC.c: 42:     ANSEL = 0b00110011;
   601  009B  3033               	movlw	51
   602  009C  009F               	movwf	31	;volatile
   603  009D                     l1063:
   604                           
   605                           ;ADC.c: 45:     GIE = 1;
   606  009D  178B               	bsf	11,7	;volatile
   607  009E                     l1065:
   608                           
   609                           ;ADC.c: 47:     LongSound();
   610  009E  20A0               	fcall	_LongSound
   611  009F                     l161:
   612  009F  0008               	return
   613  00A0                     __end_of_Init_uC:
   614                           
   615                           	psect	text3
   616  00A0                     __ptext3:	
   617 ;; *************** function _LongSound *****************
   618 ;; Defined at:
   619 ;;		line 6 in file "sounds.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0
   633 ;;      Params:         0       0
   634 ;;      Locals:         0       0
   635 ;;      Temps:          0       2
   636 ;;      Totals:         0       2
   637 ;;Total ram usage:        2 bytes
   638 ;; Hardware stack levels used: 1
   639 ;; Hardware stack levels required when called: 1
   640 ;; This function calls:
   641 ;;		Nothing
   642 ;; This function is called by:
   643 ;;		_Init_uC
   644 ;;		_TwoShortOneLong
   645 ;;		_TwoShortTwoLong
   646 ;;		_ThreeLongOneShort
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650  00A0                     _LongSound:	
   651                           ;psect for function _LongSound
   652                           
   653  00A0                     l1013:	
   654                           ;incstack = 0
   655                           ; Regs used in _LongSound: [wreg]
   656                           
   657                           
   658                           ;sounds.c: 7:    GP2 = 1;
   659  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   660  00A1  1505               	bsf	5,2	;volatile
   661  00A2                     l1015:
   662                           
   663                           ;sounds.c: 8:     _delay((unsigned long)((150)*(4000000/4000.0)));
   664  00A2  30C3               	movlw	195
   665  00A3  00A4               	movwf	??_LongSound+1
   666  00A4  30CD               	movlw	205
   667  00A5  00A3               	movwf	??_LongSound
   668  00A6                     u367:
   669  00A6  0BA3               	decfsz	??_LongSound,f
   670  00A7  28A6               	goto	u367
   671  00A8  0BA4               	decfsz	??_LongSound+1,f
   672  00A9  28A6               	goto	u367
   673  00AA                     l1017:
   674                           
   675                           ;sounds.c: 9:    GP2 = 0;
   676  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   677  00AB  1105               	bcf	5,2	;volatile
   678                           
   679                           ;sounds.c: 10:     _delay((unsigned long)((80)*(4000000/4000.0)));
   680  00AC  3068               	movlw	104
   681  00AD  00A4               	movwf	??_LongSound+1
   682  00AE  30E4               	movlw	228
   683  00AF  00A3               	movwf	??_LongSound
   684  00B0                     u377:
   685  00B0  0BA3               	decfsz	??_LongSound,f
   686  00B1  28B0               	goto	u377
   687  00B2  0BA4               	decfsz	??_LongSound+1,f
   688  00B3  28B0               	goto	u377
   689  00B4  0000               	nop
   690  00B5                     l73:
   691  00B5  0008               	return
   692  00B6                     __end_of_LongSound:
   693                           
   694                           	psect	text4
   695  00BE                     __ptext4:	
   696 ;; *************** function _InitTimer0 *****************
   697 ;; Defined at:
   698 ;;		line 4 in file "timer0.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;		None
   701 ;; Auto vars:     Size  Location     Type
   702 ;;		None
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      void 
   705 ;; Registers used:
   706 ;;		wreg, status,2, status,0
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMMON   BANK0
   712 ;;      Params:         0       0
   713 ;;      Locals:         0       0
   714 ;;      Temps:          0       1
   715 ;;      Totals:         0       1
   716 ;;Total ram usage:        1 bytes
   717 ;; Hardware stack levels used: 1
   718 ;; Hardware stack levels required when called: 1
   719 ;; This function calls:
   720 ;;		Nothing
   721 ;; This function is called by:
   722 ;;		_main
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726  00BE                     _InitTimer0:	
   727                           ;psect for function _InitTimer0
   728                           
   729  00BE                     l1025:	
   730                           ;incstack = 0
   731                           ; Regs used in _InitTimer0: [wreg+status,2+status,0]
   732                           
   733                           
   734                           ;timer0.c: 7:  OPTION_REG &= 0xC0;
   735  00BE  30C0               	movlw	192
   736  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   737  00C0  00A3               	movwf	??_InitTimer0
   738  00C1  0823               	movf	??_InitTimer0,w
   739  00C2  1683               	bsf	3,5	;RP0=1, select bank1
   740  00C3  0581               	andwf	1,f	;volatile
   741  00C4                     l1027:
   742                           
   743                           ;timer0.c: 8:  T0IE = 1;
   744  00C4  168B               	bsf	11,5	;volatile
   745  00C5                     l46:
   746  00C5  0008               	return
   747  00C6                     __end_of_InitTimer0:
   748                           
   749                           	psect	text5
   750  0014                     __ptext5:	
   751 ;; *************** function _ISR *****************
   752 ;; Defined at:
   753 ;;		line 11 in file "interrupt.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;		None
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg, status,2, status,0
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMMON   BANK0
   767 ;;      Params:         0       0
   768 ;;      Locals:         0       0
   769 ;;      Temps:          0       3
   770 ;;      Totals:         0       3
   771 ;;Total ram usage:        3 bytes
   772 ;; Hardware stack levels used: 1
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		Interrupt level 1
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780  0014                     _ISR:	
   781                           ;psect for function _ISR
   782                           
   783  0014                     i1l1095:
   784                           
   785                           ;interrupt.c: 27:      if (T0IE && T0IF){
   786  0014  1E8B               	btfss	11,5	;volatile
   787  0015  2817               	goto	u8_21
   788  0016  2818               	goto	u8_20
   789  0017                     u8_21:
   790  0017  2831               	goto	i1l1109
   791  0018                     u8_20:
   792  0018                     i1l1097:
   793  0018  1D0B               	btfss	11,2	;volatile
   794  0019  281B               	goto	u9_21
   795  001A  281C               	goto	u9_20
   796  001B                     u9_21:
   797  001B  2831               	goto	i1l1109
   798  001C                     u9_20:
   799  001C                     i1l1099:
   800                           
   801                           ;interrupt.c: 28:      pulsePerTakt++;
   802  001C  3001               	movlw	1
   803  001D  00A0               	movwf	??_ISR
   804  001E  0820               	movf	??_ISR,w
   805  001F  07AB               	addwf	_pulsePerTakt,f
   806  0020                     i1l1101:
   807                           
   808                           ;interrupt.c: 31:         if (pulsePerTakt < pwmValue) GP4 = 1;
   809  0020  082C               	movf	_pwmValue,w
   810  0021  022B               	subwf	_pulsePerTakt,w
   811  0022  1803               	skipnc
   812  0023  2825               	goto	u10_21
   813  0024  2826               	goto	u10_20
   814  0025                     u10_21:
   815  0025  2828               	goto	i1l30
   816  0026                     u10_20:
   817  0026                     i1l1103:
   818  0026  1605               	bsf	5,4	;volatile
   819  0027  2829               	goto	i1l31
   820  0028                     i1l30:	
   821                           ;interrupt.c: 32:          else GP4 = 0;
   822                           
   823  0028  1205               	bcf	5,4	;volatile
   824  0029                     i1l31:
   825                           
   826                           ;interrupt.c: 33:    T0IF = 0;
   827  0029  110B               	bcf	11,2	;volatile
   828  002A                     i1l1105:
   829                           
   830                           ;interrupt.c: 34:       if (pulsePerTakt > 100) pulsePerTakt = 0;
   831  002A  3065               	movlw	101
   832  002B  022B               	subwf	_pulsePerTakt,w
   833  002C  1C03               	skipc
   834  002D  282F               	goto	u11_21
   835  002E  2830               	goto	u11_20
   836  002F                     u11_21:
   837  002F  2831               	goto	i1l1109
   838  0030                     u11_20:
   839  0030                     i1l1107:
   840  0030  01AB               	clrf	_pulsePerTakt
   841  0031                     i1l1109:
   842                           
   843                           ;interrupt.c: 39:      if (ADIF == 1){
   844  0031  1F0C               	btfss	12,6	;volatile
   845  0032  2834               	goto	u12_21
   846  0033  2835               	goto	u12_20
   847  0034                     u12_21:
   848  0034  286C               	goto	i1l39
   849  0035                     u12_20:
   850  0035                     i1l1111:
   851                           
   852                           ;interrupt.c: 42:      adcValue = (uint16_t) ((ADRESH << 8) + ADRESL);
   853  0035  081E               	movf	30,w	;volatile
   854  0036  00A9               	movwf	_adcValue+1
   855  0037  1683               	bsf	3,5	;RP0=1, select bank1
   856  0038  081E               	movf	30,w	;volatile
   857  0039  1283               	bcf	3,5	;RP0=0, select bank0
   858  003A  00A8               	movwf	_adcValue
   859                           
   860                           ;interrupt.c: 44:      if ((adcValue > 190) && (adcValue < 285)){
   861  003B  3000               	movlw	0
   862  003C  0229               	subwf	_adcValue+1,w
   863  003D  30BF               	movlw	191
   864  003E  1903               	skipnz
   865  003F  0228               	subwf	_adcValue,w
   866  0040  1C03               	skipc
   867  0041  2843               	goto	u13_21
   868  0042  2844               	goto	u13_20
   869  0043                     u13_21:
   870  0043  284F               	goto	i1l1117
   871  0044                     u13_20:
   872  0044                     i1l1113:
   873  0044  3001               	movlw	1
   874  0045  0229               	subwf	_adcValue+1,w
   875  0046  301D               	movlw	29
   876  0047  1903               	skipnz
   877  0048  0228               	subwf	_adcValue,w
   878  0049  1803               	skipnc
   879  004A  284C               	goto	u14_21
   880  004B  284D               	goto	u14_20
   881  004C                     u14_21:
   882  004C  284F               	goto	i1l1117
   883  004D                     u14_20:
   884  004D                     i1l1115:
   885                           
   886                           ;interrupt.c: 45:          GP5 = 0;
   887  004D  1285               	bcf	5,5	;volatile
   888                           
   889                           ;interrupt.c: 46:        }
   890  004E  2864               	goto	i1l35
   891  004F                     i1l1117:
   892  004F  3000               	movlw	0
   893  0050  0229               	subwf	_adcValue+1,w
   894  0051  30BF               	movlw	191
   895  0052  1903               	skipnz
   896  0053  0228               	subwf	_adcValue,w
   897  0054  1803               	skipnc
   898  0055  2857               	goto	u15_21
   899  0056  2858               	goto	u15_20
   900  0057                     u15_21:
   901  0057  285A               	goto	i1l1121
   902  0058                     u15_20:
   903  0058                     i1l1119:
   904                           
   905                           ;interrupt.c: 48:          GP5 = 1;
   906  0058  1685               	bsf	5,5	;volatile
   907                           
   908                           ;interrupt.c: 50:        }
   909  0059  2864               	goto	i1l35
   910  005A                     i1l1121:
   911  005A  3001               	movlw	1
   912  005B  0229               	subwf	_adcValue+1,w
   913  005C  301D               	movlw	29
   914  005D  1903               	skipnz
   915  005E  0228               	subwf	_adcValue,w
   916  005F  1C03               	skipc
   917  0060  2862               	goto	u16_21
   918  0061  2863               	goto	u16_20
   919  0062                     u16_21:
   920  0062  2864               	goto	i1l35
   921  0063                     u16_20:
   922  0063  2858               	goto	i1l1119
   923  0064                     i1l35:
   924                           
   925                           ;interrupt.c: 56:        ADIF = 0;
   926  0064  130C               	bcf	12,6	;volatile
   927  0065                     i1l1125:
   928                           
   929                           ;interrupt.c: 57:        _delay((unsigned long)((30)*(4000000/4000000.0)));
   930  0065  3009               	movlw	9
   931  0066  00A0               	movwf	??_ISR
   932  0067                     u38_27:
   933  0067  0BA0               	decfsz	??_ISR,f
   934  0068  2867               	goto	u38_27
   935  0069  286A               	nop2
   936  006A                     i1l1127:
   937                           
   938                           ;interrupt.c: 58:        GO = 1;
   939  006A  1283               	bcf	3,5	;RP0=0, select bank0
   940  006B  149F               	bsf	31,1	;volatile
   941  006C                     i1l39:
   942  006C  0822               	movf	??_ISR+2,w
   943  006D  008A               	movwf	10
   944  006E  0E21               	swapf	??_ISR+1,w
   945  006F  0083               	movwf	3
   946  0070  0EDE               	swapf	btemp,f
   947  0071  0E5E               	swapf	btemp,w
   948  0072  0009               	retfie
   949  0073                     __end_of_ISR:
   950  005E                     btemp	set	94	;btemp
   951  005E                     wtemp0	set	94
   952                           
   953                           	psect	intentry
   954  0004                     __pintentry:	
   955                           ;incstack = 0
   956                           ; Regs used in _ISR: [wreg+status,2+status,0]
   957                           
   958  0004                     interrupt_function:
   959  005E                     saved_w	set	btemp
   960  0004  00DE               	movwf	btemp
   961  0005  0E03               	swapf	3,w
   962  0006  1283               	bcf	3,5	;RP0=0, select bank0
   963  0007  00A1               	movwf	??_ISR+1
   964  0008  080A               	movf	10,w
   965  0009  00A2               	movwf	??_ISR+2
   966  000A  2814               	ljmp	_ISR
   967                           
   968                           	psect	config
   969                           
   970                           ;Config register CONFIG @ 0x2007
   971                           ;	Oscillator Selection bits
   972                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
   973                           ;	Watchdog Timer Enable bit
   974                           ;	WDTE = OFF, WDT disabled
   975                           ;	Power-Up Timer Enable bit
   976                           ;	PWRTE = OFF, PWRT disabled
   977                           ;	GP3/MCLR pin function select
   978                           ;	MCLRE = ON, GP3/MCLR pin function is MCLR
   979                           ;	Brown-out Detect Enable bit
   980                           ;	BOREN = ON, BOD enabled
   981                           ;	Code Protection bit
   982                           ;	CP = OFF, Program Memory code protection is disabled
   983                           ;	Data Code Protection bit
   984                           ;	CPD = OFF, Data memory code protection is disabled
   985  2007                     	org	8199
   986  2007  31F4               	dw	12788

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      8      13

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Init_uC
    _Init_uC->_LongSound

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _InitTimer0
                            _Init_uC
                         _MuxVoltage
 ---------------------------------------------------------------------------------
 (1) _MuxVoltage                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_uC                                              3     3      0       0
                                              5 BANK0      3     3      0
                          _LongSound
 ---------------------------------------------------------------------------------
 (2) _LongSound                                            2     2      0       0
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           1     1      0       0
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitTimer0
   _Init_uC
     _LongSound
   _MuxVoltage

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      8       D       4       21.0%
ABS                  0      0       D       5        0.0%
DATA                 0      0       D       6        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Nov 30 19:17:29 2023

                     l46 00C5                       l63 00CA                       l64 00CA  
                     l73 00B5                       _GO 00F9             _pulsePerTakt 002B  
                    l203 00BD                      l161 009F                      _GP2 002A  
                    _GP4 002C                      _GP5 002D                      _GIE 005F  
                    _ISR 0014                      u357 0089                      u367 00A6  
                    u377 00B0                     ?_ISR 0020                     l1013 00A0  
                   l1015 00A2                     l1031 0076                     l1025 00BE  
                   l1017 00AA                     l1041 007F                     l1033 0078  
                   l1027 00C4                     l1051 0094                     l1043 0081  
                   l1035 0079                     l1131 00C8                     l1061 009B  
                   l1053 0096                     l1045 0083                     l1037 007B  
                   l1029 0073                     l1133 00C9                     l1063 009D  
                   l1055 0097                     l1047 0090                     l1039 007D  
                   l1071 00B9                     l1065 009E                     l1057 0098  
                   l1049 0092                     l1073 00BA                     l1129 00C6  
                   l1059 009A                     l1075 00BB                     l1067 00B6  
                   l1077 00BC                     l1069 00B8                     _ADIF 0066  
                   _ADFM 00FF                     _ADON 00F8                     _CHS0 00FA  
                   _CHS1 00FB                     _T0IE 005D                     _T0IF 005A  
                   _GPIO 0005                     i1l30 0028                     i1l31 0029  
                   i1l35 0064                     i1l39 006C                     _VCFG 00FE  
                   u8_20 0018                     u8_21 0017                     u9_20 001C  
                   u9_21 001B                     _main 00C6                     btemp 005E  
                   start 000B          __end_of_Init_uC 00A0                    ??_ISR 0020  
                  ?_main 0020                    _CMCON 0019                    _ANSEL 009F  
                  u10_20 0026                    u10_21 0025                    u11_20 0030  
                  u11_21 002F                    u12_20 0035                    u12_21 0034  
                  u13_20 0044                    u13_21 0043                    u14_20 004D  
                  u14_21 004C                    u15_20 0058                    u15_21 0057  
                  u16_20 0063                    u16_21 0062                    u38_27 0067  
                  _VRCON 0099                    pclath 000A                    status 0003  
                  wtemp0 005E          __initialization 000C               _InitTimer0 00BE  
           __end_of_main 00CC                   ??_main 0000                   _ADCON0 001F  
                 _ADRESH 001E                   _ADRESL 009E                   i1l1101 0020  
                 i1l1111 0035                   i1l1103 0026                   i1l1121 005A  
                 i1l1113 0044                   i1l1105 002A                   i1l1115 004D  
                 i1l1107 0030                   i1l1125 0065                   i1l1117 004F  
                 i1l1109 0031                   i1l1127 006A                   i1l1119 0058  
                 i1l1095 0014                   i1l1097 0018                   i1l1099 001C  
                 _TRISIO 0085                ??_Init_uC 0025               _MuxVoltage 00B6  
                 saved_w 005E  __end_of__initialization 0012              ?_InitTimer0 0020  
         __pcstackCOMMON 0000        __end_of_LongSound 00B6               __pbssBANK0 0028  
             __pmaintext 00C6               __pintentry 0004              ?_MuxVoltage 0020  
                _TRISIO0 0428                  _TRISIO1 0429                  _TRISIO2 042A  
                _TRISIO4 042C                  _TRISIO5 042D                  _Init_uC 0073  
                __ptext1 00B6                  __ptext2 0073                  __ptext3 00A0  
                __ptext4 00BE                  __ptext5 0014     end_of_initialization 0012  
           ??_InitTimer0 0023      start_initialization 000C              __end_of_ISR 0073  
     __end_of_InitTimer0 00C6                _LongSound 00A0             ??_MuxVoltage 0000  
              ___latbits 0000            __pcstackBANK0 0020               ?_LongSound 0020  
     __end_of_MuxVoltage 00BE                 ?_Init_uC 0020                _errorFlag 002A  
      interrupt_function 0004              ??_LongSound 0023                 _adcValue 0028  
               _pwmValue 002C               _INTCONbits 000B                 intlevel1 0000  
             _OPTION_REG 0081  
