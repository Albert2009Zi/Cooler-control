

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Feb 10 20:07:34 2025

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x5E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 29/04/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC12F675 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0019                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  008C                     	;# 
    82  008E                     	;# 
    83  0090                     	;# 
    84  0095                     	;# 
    85  0096                     	;# 
    86  0096                     	;# 
    87  0099                     	;# 
    88  009A                     	;# 
    89  009A                     	;# 
    90  009B                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009E                     	;# 
    94  009F                     	;# 
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0019                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  008C                     	;# 
   114  008E                     	;# 
   115  0090                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0096                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000E                     	;# 
   137  000E                     	;# 
   138  000F                     	;# 
   139  0010                     	;# 
   140  0019                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  008C                     	;# 
   146  008E                     	;# 
   147  0090                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0096                     	;# 
   151  0099                     	;# 
   152  009A                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  000A                     	;# 
   166  000B                     	;# 
   167  000C                     	;# 
   168  000E                     	;# 
   169  000E                     	;# 
   170  000F                     	;# 
   171  0010                     	;# 
   172  0019                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  008C                     	;# 
   178  008E                     	;# 
   179  0090                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0096                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  000A                     	;# 
   198  000B                     	;# 
   199  000C                     	;# 
   200  000E                     	;# 
   201  000E                     	;# 
   202  000F                     	;# 
   203  0010                     	;# 
   204  0019                     	;# 
   205  001E                     	;# 
   206  001F                     	;# 
   207  0081                     	;# 
   208  0085                     	;# 
   209  008C                     	;# 
   210  008E                     	;# 
   211  0090                     	;# 
   212  0095                     	;# 
   213  0096                     	;# 
   214  0096                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009A                     	;# 
   218  009B                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223                           
   224                           	psect	idataBANK0
   225  01BB                     __pidataBANK0:
   226                           
   227                           ;initializer for _measureType
   228  01BB  3401               	retlw	1
   229  0005                     _GPIO	set	5
   230  0019                     _CMCON	set	25
   231  0010                     _T1CON	set	16
   232  001E                     _ADRESH	set	30
   233  000E                     _TMR1L	set	14
   234  000F                     _TMR1H	set	15
   235  0001                     _TMR0	set	1
   236  001F                     _ADCON0	set	31
   237  005F                     _GIE	set	95
   238  005E                     _PEIE	set	94
   239  00FE                     _VCFG	set	254
   240  005D                     _TMR0IE	set	93
   241  002C                     _GP4	set	44
   242  002A                     _GP2	set	42
   243  002D                     _GP5	set	45
   244  0060                     _TMR1IF	set	96
   245  005A                     _TMR0IF	set	90
   246  00F9                     _GO	set	249
   247  0066                     _ADIF	set	102
   248  00FA                     _CHS0	set	250
   249  00FB                     _CHS1	set	251
   250  00FF                     _ADFM	set	255
   251  00F8                     _ADON	set	248
   252  009F                     _ANSEL	set	159
   253  0085                     _TRISIO	set	133
   254  0099                     _VRCON	set	153
   255  0081                     _OPTION_REG	set	129
   256  009E                     _ADRESL	set	158
   257  0429                     _TRISIO1	set	1065
   258  0428                     _TRISIO0	set	1064
   259  042C                     _TRISIO4	set	1068
   260  042D                     _TRISIO5	set	1069
   261  042A                     _TRISIO2	set	1066
   262  0460                     _TMR1IE	set	1120
   263                           
   264                           	psect	cinit
   265  000C                     start_initialization:	
   266                           ; #config settings
   267                           
   268  000C                     __initialization:
   269                           
   270                           ; Initialize objects allocated to BANK0
   271  000C  21BB               	fcall	__pidataBANK0	;fetch initializer
   272  000D  00B1               	movwf	__pdataBANK0& (0+127)
   273                           
   274                           ; Clear objects allocated to BANK0
   275  000E  01AB               	clrf	__pbssBANK0& (0+127)
   276  000F  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   277  0010  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   278  0011  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   279  0012  01AF               	clrf	(__pbssBANK0+4)& (0+127)
   280  0013  01B0               	clrf	(__pbssBANK0+5)& (0+127)
   281  0014                     end_of_initialization:	
   282                           ;End of C runtime variable initialization code
   283                           
   284  0014                     __end_of__initialization:
   285  0014  0183               	clrf	3
   286  0015  292E               	ljmp	_main	;jump to C main() function
   287                           
   288                           	psect	bssBANK0
   289  002B                     __pbssBANK0:
   290  002B                     _adcValue:
   291  002B                     	ds	2
   292  002D                     _cnt1:
   293  002D                     	ds	2
   294  002F                     _cnt0:
   295  002F                     	ds	1
   296  0030                     _errorType:
   297  0030                     	ds	1
   298                           
   299                           	psect	dataBANK0
   300  0031                     __pdataBANK0:
   301  0031                     _measureType:
   302  0031                     	ds	1
   303                           
   304                           	psect	cstackCOMMON
   305  0000                     __pcstackCOMMON:
   306  0000                     ??_InitTimer0:
   307  0000                     ??_InitTimer1:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0000                     ??_Init_uC:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0000                     ??_TwoShortOneLong:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0000                     ??_TwoShortTwoLong:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0000                     ??_ThreeShort:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0000                     ??_TimeOut:	
   323                           ; 1 bytes @ 0x0
   324                           
   325                           
   326                           	psect	cstackBANK0
   327  0020                     __pcstackBANK0:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0020                     ?_InitTimer0:
   331  0020                     ?_InitTimer1:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0020                     ?_Init_uC:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0020                     ?_DataProcessing:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0020                     ?_TwoShortOneLong:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0020                     ?_TwoShortTwoLong:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0020                     ?_ThreeShort:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0020                     ?_MuxVoltage:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0020                     ?_MuxTemp:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0020                     ?_ISR:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0020                     ??_ISR:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0020                     ?_ADCProcessing:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0020                     ?_main:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0020                     ?_ShortSound:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0020                     ?_LongSound:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0020                     ?_TimeOut:	
   374                           ; 1 bytes @ 0x0
   375                           
   376                           
   377                           ; 1 bytes @ 0x0
   378  0020                     	ds	3
   379  0023                     ??_MuxVoltage:
   380  0023                     ??_MuxTemp:	
   381                           ; 1 bytes @ 0x3
   382                           
   383  0023                     ??_ShortSound:	
   384                           ; 1 bytes @ 0x3
   385                           
   386  0023                     ??_LongSound:	
   387                           ; 1 bytes @ 0x3
   388                           
   389                           
   390                           ; 1 bytes @ 0x3
   391  0023                     	ds	1
   392  0024                     ??_ADCProcessing:
   393                           
   394                           ; 1 bytes @ 0x4
   395  0024                     	ds	2
   396  0026                     ??_DataProcessing:
   397                           
   398                           ; 1 bytes @ 0x6
   399  0026                     	ds	2
   400  0028                     ??_main:
   401                           
   402                           ; 1 bytes @ 0x8
   403  0028                     	ds	3
   404                           
   405                           	psect	maintext
   406  012E                     __pmaintext:	
   407 ;;
   408 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   409 ;;
   410 ;; *************** function _main *****************
   411 ;; Defined at:
   412 ;;		line 70 in file "main.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : B00/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0
   426 ;;      Params:         0       0
   427 ;;      Locals:         0       0
   428 ;;      Temps:          0       3
   429 ;;      Totals:         0       3
   430 ;;Total ram usage:        3 bytes
   431 ;; Hardware stack levels required when called: 4
   432 ;; This function calls:
   433 ;;		_ADCProcessing
   434 ;;		_DataProcessing
   435 ;;		_InitTimer0
   436 ;;		_InitTimer1
   437 ;;		_Init_uC
   438 ;; This function is called by:
   439 ;;		Startup code after reset
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443  012E                     _main:	
   444                           ;psect for function _main
   445                           
   446  012E                     l1333:	
   447                           ;incstack = 0
   448                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   449                           
   450  012E  21A3               	fcall	_InitTimer0
   451  012F  218F               	fcall	_InitTimer1
   452  0130  20AB               	fcall	_Init_uC
   453  0131                     l1335:
   454  0131  300D               	movlw	13
   455  0132  1283               	bcf	3,5	;RP0=0, select bank0
   456  0133  00AA               	movwf	??_main+2
   457  0134  30AF               	movlw	175
   458  0135  00A9               	movwf	??_main+1
   459  0136  30B6               	movlw	182
   460  0137  00A8               	movwf	??_main
   461  0138                     u277:
   462  0138  0BA8               	decfsz	??_main,f
   463  0139  2938               	goto	u277
   464  013A  0BA9               	decfsz	??_main+1,f
   465  013B  2938               	goto	u277
   466  013C  0BAA               	decfsz	??_main+2,f
   467  013D  2938               	goto	u277
   468  013E  0000               	nop
   469  013F                     l1337:
   470  013F  1283               	bcf	3,5	;RP0=0, select bank0
   471  0140  01B0               	clrf	_errorType
   472  0141  0AB0               	incf	_errorType,f
   473  0142                     l1339:
   474  0142  2016               	fcall	_ADCProcessing
   475  0143                     l1341:
   476  0143  20F4               	fcall	_DataProcessing
   477  0144  2942               	goto	l1339
   478  0145  280B               	ljmp	start
   479  0146                     __end_of_main:
   480                           
   481                           	psect	text1
   482  00AB                     __ptext1:	
   483 ;; *************** function _Init_uC *****************
   484 ;; Defined at:
   485 ;;		line 31 in file "init_periphery.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, status,2, status,0, pclath, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMMON   BANK0
   499 ;;      Params:         0       0
   500 ;;      Locals:         0       0
   501 ;;      Temps:          0       0
   502 ;;      Totals:         0       0
   503 ;;Total ram usage:        0 bytes
   504 ;; Hardware stack levels used: 1
   505 ;; Hardware stack levels required when called: 2
   506 ;; This function calls:
   507 ;;		_LongSound
   508 ;; This function is called by:
   509 ;;		_main
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513  00AB                     _Init_uC:	
   514                           ;psect for function _Init_uC
   515                           
   516  00AB                     l1187:	
   517                           ;incstack = 0
   518                           ; Regs used in _Init_uC: [wreg+status,2+status,0+pclath+cstack]
   519                           
   520                           
   521                           ;init_periphery.c: 32:     CMCON = 0x07;
   522  00AB  3007               	movlw	7
   523  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   524  00AD  0099               	movwf	25	;volatile
   525  00AE                     l1189:
   526                           
   527                           ;init_periphery.c: 33:     VRCON = 0x00;
   528  00AE  1683               	bsf	3,5	;RP0=1, select bank1
   529  00AF  0199               	clrf	25	;volatile
   530  00B0                     l1191:
   531                           
   532                           ;init_periphery.c: 36:     TRISIO = 0;
   533  00B0  0185               	clrf	5	;volatile
   534  00B1                     l1193:
   535                           
   536                           ;init_periphery.c: 37:     GPIO = 0;
   537  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   538  00B2  0185               	clrf	5	;volatile
   539  00B3                     l1195:
   540                           
   541                           ;init_periphery.c: 40:     TRISIO2 = 0;
   542  00B3  1683               	bsf	3,5	;RP0=1, select bank1
   543  00B4  1105               	bcf	5,2	;volatile
   544  00B5                     l1197:
   545                           
   546                           ;init_periphery.c: 41:     GP2 = 0;
   547  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   548  00B6  1105               	bcf	5,2	;volatile
   549  00B7                     l1199:
   550                           
   551                           ;init_periphery.c: 44:     TRISIO5 = 0;
   552  00B7  1683               	bsf	3,5	;RP0=1, select bank1
   553  00B8  1285               	bcf	5,5	;volatile
   554  00B9                     l1201:
   555                           
   556                           ;init_periphery.c: 45:     GP5 = 1;
   557  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   558  00BA  1685               	bsf	5,5	;volatile
   559  00BB                     l1203:
   560                           
   561                           ;init_periphery.c: 48:     TRISIO4 = 0;
   562  00BB  1683               	bsf	3,5	;RP0=1, select bank1
   563  00BC  1205               	bcf	5,4	;volatile
   564  00BD                     l1205:
   565                           
   566                           ;init_periphery.c: 49:     GP4 = 0;
   567  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   568  00BE  1205               	bcf	5,4	;volatile
   569  00BF                     l1207:
   570                           
   571                           ;init_periphery.c: 52:     VCFG = 1;
   572  00BF  171F               	bsf	31,6	;volatile
   573  00C0                     l1209:
   574                           
   575                           ;init_periphery.c: 53:     TRISIO0 = 1;
   576  00C0  1683               	bsf	3,5	;RP0=1, select bank1
   577  00C1  1405               	bsf	5,0	;volatile
   578  00C2                     l1211:
   579                           
   580                           ;init_periphery.c: 54:     TRISIO1 = 1;
   581  00C2  1485               	bsf	5,1	;volatile
   582  00C3                     l1213:
   583                           
   584                           ;init_periphery.c: 56:     ANSEL = 0b00110011;
   585  00C3  3033               	movlw	51
   586  00C4  009F               	movwf	31	;volatile
   587  00C5                     l1215:
   588                           
   589                           ;init_periphery.c: 58:     PEIE = 1;
   590  00C5  170B               	bsf	11,6	;volatile
   591  00C6                     l1217:
   592                           
   593                           ;init_periphery.c: 59:     GIE = 1;
   594  00C6  178B               	bsf	11,7	;volatile
   595  00C7                     l1219:
   596                           
   597                           ;init_periphery.c: 61:     LongSound();
   598  00C7  2113               	fcall	_LongSound
   599  00C8                     l1221:
   600                           
   601                           ;init_periphery.c: 63:     ADCON0 = 0;
   602  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   603  00C9  019F               	clrf	31	;volatile
   604  00CA                     l1223:
   605                           
   606                           ;init_periphery.c: 64:     ADON = 1;
   607  00CA  141F               	bsf	31,0	;volatile
   608  00CB                     l1225:
   609                           
   610                           ;init_periphery.c: 65:     ADFM = 1;
   611  00CB  179F               	bsf	31,7	;volatile
   612  00CC                     l1227:
   613                           
   614                           ;init_periphery.c: 66:     CHS1 = 0;
   615  00CC  119F               	bcf	31,3	;volatile
   616  00CD                     l1229:
   617                           
   618                           ;init_periphery.c: 67:     CHS0 = 1;
   619  00CD  151F               	bsf	31,2	;volatile
   620  00CE                     l1231:
   621                           
   622                           ;init_periphery.c: 68:     measureType = 1;
   623  00CE  01B1               	clrf	_measureType
   624  00CF  0AB1               	incf	_measureType,f
   625  00D0                     l1233:
   626                           
   627                           ;init_periphery.c: 69:     ADIF = 0;
   628  00D0  130C               	bcf	12,6	;volatile
   629  00D1                     l1235:
   630                           
   631                           ;init_periphery.c: 70:     GO = 1;
   632  00D1  149F               	bsf	31,1	;volatile
   633  00D2                     l221:
   634  00D2  0008               	return
   635  00D3                     __end_of_Init_uC:
   636                           
   637                           	psect	text2
   638  018F                     __ptext2:	
   639 ;; *************** function _InitTimer1 *****************
   640 ;; Defined at:
   641 ;;		line 19 in file "init_periphery.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		wreg
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMMON   BANK0
   655 ;;      Params:         0       0
   656 ;;      Locals:         0       0
   657 ;;      Temps:          0       0
   658 ;;      Totals:         0       0
   659 ;;Total ram usage:        0 bytes
   660 ;; Hardware stack levels used: 1
   661 ;; Hardware stack levels required when called: 1
   662 ;; This function calls:
   663 ;;		Nothing
   664 ;; This function is called by:
   665 ;;		_main
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669  018F                     _InitTimer1:	
   670                           ;psect for function _InitTimer1
   671                           
   672  018F                     l1181:	
   673                           ;incstack = 0
   674                           ; Regs used in _InitTimer1: [wreg]
   675                           
   676                           
   677                           ;init_periphery.c: 21:          TMR1H = 0xFC;
   678  018F  30FC               	movlw	252
   679  0190  1283               	bcf	3,5	;RP0=0, select bank0
   680  0191  008F               	movwf	15	;volatile
   681                           
   682                           ;init_periphery.c: 22:   TMR1L = 0x17;
   683  0192  3017               	movlw	23
   684  0193  008E               	movwf	14	;volatile
   685                           
   686                           ;init_periphery.c: 24:   T1CON = 0x01;
   687  0194  3001               	movlw	1
   688  0195  0090               	movwf	16	;volatile
   689  0196                     l1183:
   690                           
   691                           ;init_periphery.c: 26:   TMR1IF = 0;
   692  0196  100C               	bcf	12,0	;volatile
   693  0197                     l1185:
   694                           
   695                           ;init_periphery.c: 27:   TMR1IE = 1;
   696  0197  1683               	bsf	3,5	;RP0=1, select bank1
   697  0198  140C               	bsf	12,0	;volatile
   698  0199                     l218:
   699  0199  0008               	return
   700  019A                     __end_of_InitTimer1:
   701                           
   702                           	psect	text3
   703  01A3                     __ptext3:	
   704 ;; *************** function _InitTimer0 *****************
   705 ;; Defined at:
   706 ;;		line 10 in file "init_periphery.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;		None
   709 ;; Auto vars:     Size  Location     Type
   710 ;;		None
   711 ;; Return value:  Size  Location     Type
   712 ;;                  1    wreg      void 
   713 ;; Registers used:
   714 ;;		wreg, status,2
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMMON   BANK0
   720 ;;      Params:         0       0
   721 ;;      Locals:         0       0
   722 ;;      Temps:          0       0
   723 ;;      Totals:         0       0
   724 ;;Total ram usage:        0 bytes
   725 ;; Hardware stack levels used: 1
   726 ;; Hardware stack levels required when called: 1
   727 ;; This function calls:
   728 ;;		Nothing
   729 ;; This function is called by:
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734  01A3                     _InitTimer0:	
   735                           ;psect for function _InitTimer0
   736                           
   737  01A3                     l1173:	
   738                           ;incstack = 0
   739                           ; Regs used in _InitTimer0: [wreg+status,2]
   740                           
   741                           
   742                           ;init_periphery.c: 12:     OPTION_REG = 0b11000001;
   743  01A3  30C1               	movlw	193
   744  01A4  1683               	bsf	3,5	;RP0=1, select bank1
   745  01A5  0081               	movwf	1	;volatile
   746  01A6                     l1175:
   747                           
   748                           ;init_periphery.c: 13:     TMR0 = 0;
   749  01A6  1283               	bcf	3,5	;RP0=0, select bank0
   750  01A7  0181               	clrf	1	;volatile
   751  01A8                     l1177:
   752                           
   753                           ;init_periphery.c: 14:     TMR0IF = 0;
   754  01A8  110B               	bcf	11,2	;volatile
   755  01A9                     l1179:
   756                           
   757                           ;init_periphery.c: 15:     TMR0IE = 1;
   758  01A9  168B               	bsf	11,5	;volatile
   759  01AA                     l215:
   760  01AA  0008               	return
   761  01AB                     __end_of_InitTimer0:
   762                           
   763                           	psect	text4
   764  00F4                     __ptext4:	
   765 ;; *************** function _DataProcessing *****************
   766 ;; Defined at:
   767 ;;		line 84 in file "main.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0
   781 ;;      Params:         0       0
   782 ;;      Locals:         0       0
   783 ;;      Temps:          0       2
   784 ;;      Totals:         0       2
   785 ;;Total ram usage:        2 bytes
   786 ;; Hardware stack levels used: 1
   787 ;; Hardware stack levels required when called: 3
   788 ;; This function calls:
   789 ;;		_ThreeShort
   790 ;;		_TwoShortOneLong
   791 ;;		_TwoShortTwoLong
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797  00F4                     _DataProcessing:	
   798                           ;psect for function _DataProcessing
   799                           
   800  00F4                     l1317:	
   801                           ;incstack = 0
   802                           ; Regs used in _DataProcessing: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   803                           
   804  00F4  28FB               	goto	l1327
   805  00F5                     l1319:
   806  00F5  21AB               	fcall	_TwoShortOneLong
   807  00F6  2912               	goto	l117
   808  00F7                     l1321:
   809  00F7  219A               	fcall	_TwoShortTwoLong
   810  00F8  2912               	goto	l117
   811  00F9                     l1323:
   812  00F9  21B3               	fcall	_ThreeShort
   813  00FA  2912               	goto	l117
   814  00FB                     l1327:
   815  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   816  00FC  0830               	movf	_errorType,w
   817  00FD  00A6               	movwf	??_DataProcessing
   818  00FE  01A7               	clrf	??_DataProcessing+1
   819                           
   820                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   821                           ; Switch size 1, requested type "simple"
   822                           ; Number of cases is 1, Range of values is 0 to 0
   823                           ; switch strategies available:
   824                           ; Name         Instructions Cycles
   825                           ; simple_byte            4     3 (average)
   826                           ; direct_byte            7     6 (fixed)
   827                           ; jumptable            260     6 (fixed)
   828                           ;	Chosen strategy is simple_byte
   829  00FF  0827               	movf	??_DataProcessing+1,w
   830  0100  3A00               	xorlw	0	; case 0
   831  0101  1903               	skipnz
   832  0102  2904               	goto	l1383
   833  0103  2912               	goto	l117
   834  0104                     l1383:
   835                           
   836                           ; Switch size 1, requested type "simple"
   837                           ; Number of cases is 4, Range of values is 1 to 5
   838                           ; switch strategies available:
   839                           ; Name         Instructions Cycles
   840                           ; simple_byte           13     7 (average)
   841                           ; direct_byte           14     9 (fixed)
   842                           ; jumptable            263     9 (fixed)
   843                           ;	Chosen strategy is simple_byte
   844  0104  0826               	movf	??_DataProcessing,w
   845  0105  3A01               	xorlw	1	; case 1
   846  0106  1903               	skipnz
   847  0107  2912               	goto	l117
   848  0108  3A03               	xorlw	3	; case 2
   849  0109  1903               	skipnz
   850  010A  28F5               	goto	l1319
   851  010B  3A01               	xorlw	1	; case 3
   852  010C  1903               	skipnz
   853  010D  28F7               	goto	l1321
   854  010E  3A06               	xorlw	6	; case 5
   855  010F  1903               	skipnz
   856  0110  28F9               	goto	l1323
   857  0111  2912               	goto	l117
   858  0112                     l117:
   859  0112  0008               	return
   860  0113                     __end_of_DataProcessing:
   861                           
   862                           	psect	text5
   863  019A                     __ptext5:	
   864 ;; *************** function _TwoShortTwoLong *****************
   865 ;; Defined at:
   866 ;;		line 36 in file "sounds.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, status,2, status,0, pclath, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMMON   BANK0
   880 ;;      Params:         0       0
   881 ;;      Locals:         0       0
   882 ;;      Temps:          0       0
   883 ;;      Totals:         0       0
   884 ;;Total ram usage:        0 bytes
   885 ;; Hardware stack levels used: 1
   886 ;; Hardware stack levels required when called: 2
   887 ;; This function calls:
   888 ;;		_LongSound
   889 ;;		_ShortSound
   890 ;;		_TimeOut
   891 ;; This function is called by:
   892 ;;		_DataProcessing
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896  019A                     _TwoShortTwoLong:	
   897                           ;psect for function _TwoShortTwoLong
   898                           
   899  019A                     l1109:	
   900                           ;incstack = 0
   901                           ; Regs used in _TwoShortTwoLong: [wreg+status,2+status,0+pclath+cstack]
   902                           
   903                           
   904                           ;sounds.c: 38:    ShortSound();
   905  019A  2146               	fcall	_ShortSound
   906                           
   907                           ;sounds.c: 39:    ShortSound();
   908  019B  2146               	fcall	_ShortSound
   909                           
   910                           ;sounds.c: 40:    LongSound();
   911  019C  2113               	fcall	_LongSound
   912                           
   913                           ;sounds.c: 41:    LongSound();
   914  019D  2113               	fcall	_LongSound
   915  019E                     l1111:
   916                           
   917                           ;sounds.c: 42:    cnt1 = 0;
   918  019E  1283               	bcf	3,5	;RP0=0, select bank0
   919  019F  01AD               	clrf	_cnt1
   920  01A0  01AE               	clrf	_cnt1+1
   921  01A1                     l1113:
   922                           
   923                           ;sounds.c: 43:    TimeOut();
   924  01A1  2180               	fcall	_TimeOut
   925  01A2                     l141:
   926  01A2  0008               	return
   927  01A3                     __end_of_TwoShortTwoLong:
   928                           
   929                           	psect	text6
   930  01AB                     __ptext6:	
   931 ;; *************** function _TwoShortOneLong *****************
   932 ;; Defined at:
   933 ;;		line 28 in file "sounds.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;		None
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg, status,2, status,0, pclath, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMMON   BANK0
   947 ;;      Params:         0       0
   948 ;;      Locals:         0       0
   949 ;;      Temps:          0       0
   950 ;;      Totals:         0       0
   951 ;;Total ram usage:        0 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; Hardware stack levels required when called: 2
   954 ;; This function calls:
   955 ;;		_LongSound
   956 ;;		_ShortSound
   957 ;;		_TimeOut
   958 ;; This function is called by:
   959 ;;		_DataProcessing
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963  01AB                     _TwoShortOneLong:	
   964                           ;psect for function _TwoShortOneLong
   965                           
   966  01AB                     l1103:	
   967                           ;incstack = 0
   968                           ; Regs used in _TwoShortOneLong: [wreg+status,2+status,0+pclath+cstack]
   969                           
   970                           
   971                           ;sounds.c: 29:    ShortSound();
   972  01AB  2146               	fcall	_ShortSound
   973                           
   974                           ;sounds.c: 30:    ShortSound();
   975  01AC  2146               	fcall	_ShortSound
   976                           
   977                           ;sounds.c: 31:    LongSound();
   978  01AD  2113               	fcall	_LongSound
   979  01AE                     l1105:
   980                           
   981                           ;sounds.c: 32:    cnt1 = 0;
   982  01AE  1283               	bcf	3,5	;RP0=0, select bank0
   983  01AF  01AD               	clrf	_cnt1
   984  01B0  01AE               	clrf	_cnt1+1
   985  01B1                     l1107:
   986                           
   987                           ;sounds.c: 33:    TimeOut();
   988  01B1  2180               	fcall	_TimeOut
   989  01B2                     l138:
   990  01B2  0008               	return
   991  01B3                     __end_of_TwoShortOneLong:
   992                           
   993                           	psect	text7
   994  0113                     __ptext7:	
   995 ;; *************** function _LongSound *****************
   996 ;; Defined at:
   997 ;;		line 15 in file "sounds.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0
  1011 ;;      Params:         0       0
  1012 ;;      Locals:         0       0
  1013 ;;      Temps:          0       3
  1014 ;;      Totals:         0       3
  1015 ;;Total ram usage:        3 bytes
  1016 ;; Hardware stack levels used: 1
  1017 ;; Hardware stack levels required when called: 1
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_TwoShortOneLong
  1022 ;;		_TwoShortTwoLong
  1023 ;;		_Init_uC
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027  0113                     _LongSound:	
  1028                           ;psect for function _LongSound
  1029                           
  1030  0113                     l1055:	
  1031                           ;incstack = 0
  1032                           ; Regs used in _LongSound: [wreg]
  1033                           
  1034                           
  1035                           ;sounds.c: 16:        GP2 = 1;
  1036  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1037  0114  1505               	bsf	5,2	;volatile
  1038  0115                     l1057:
  1039                           
  1040                           ;sounds.c: 17:     _delay((unsigned long)((200)*(4000000/4000.0)));
  1041  0115  3002               	movlw	2
  1042  0116  00A5               	movwf	??_LongSound+2
  1043  0117  3004               	movlw	4
  1044  0118  00A4               	movwf	??_LongSound+1
  1045  0119  30BA               	movlw	186
  1046  011A  00A3               	movwf	??_LongSound
  1047  011B                     u287:
  1048  011B  0BA3               	decfsz	??_LongSound,f
  1049  011C  291B               	goto	u287
  1050  011D  0BA4               	decfsz	??_LongSound+1,f
  1051  011E  291B               	goto	u287
  1052  011F  0BA5               	decfsz	??_LongSound+2,f
  1053  0120  291B               	goto	u287
  1054  0121  0000               	nop
  1055  0122                     l1059:
  1056                           
  1057                           ;sounds.c: 18:        GP2 = 0;
  1058  0122  1283               	bcf	3,5	;RP0=0, select bank0
  1059  0123  1105               	bcf	5,2	;volatile
  1060                           
  1061                           ;sounds.c: 19:     _delay((unsigned long)((80)*(4000000/4000.0)));
  1062  0124  3068               	movlw	104
  1063  0125  00A4               	movwf	??_LongSound+1
  1064  0126  30E4               	movlw	228
  1065  0127  00A3               	movwf	??_LongSound
  1066  0128                     u297:
  1067  0128  0BA3               	decfsz	??_LongSound,f
  1068  0129  2928               	goto	u297
  1069  012A  0BA4               	decfsz	??_LongSound+1,f
  1070  012B  2928               	goto	u297
  1071  012C  0000               	nop
  1072  012D                     l129:
  1073  012D  0008               	return
  1074  012E                     __end_of_LongSound:
  1075                           
  1076                           	psect	text8
  1077  01B3                     __ptext8:	
  1078 ;; *************** function _ThreeShort *****************
  1079 ;; Defined at:
  1080 ;;		line 46 in file "sounds.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;		None
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;		None
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  1    wreg      void 
  1087 ;; Registers used:
  1088 ;;		wreg, status,2, status,0, pclath, cstack
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMMON   BANK0
  1094 ;;      Params:         0       0
  1095 ;;      Locals:         0       0
  1096 ;;      Temps:          0       0
  1097 ;;      Totals:         0       0
  1098 ;;Total ram usage:        0 bytes
  1099 ;; Hardware stack levels used: 1
  1100 ;; Hardware stack levels required when called: 2
  1101 ;; This function calls:
  1102 ;;		_ShortSound
  1103 ;;		_TimeOut
  1104 ;; This function is called by:
  1105 ;;		_DataProcessing
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109  01B3                     _ThreeShort:	
  1110                           ;psect for function _ThreeShort
  1111                           
  1112  01B3                     l1115:	
  1113                           ;incstack = 0
  1114                           ; Regs used in _ThreeShort: [wreg+status,2+status,0+pclath+cstack]
  1115                           
  1116                           
  1117                           ;sounds.c: 47:    ShortSound();
  1118  01B3  2146               	fcall	_ShortSound
  1119                           
  1120                           ;sounds.c: 48:    ShortSound();
  1121  01B4  2146               	fcall	_ShortSound
  1122                           
  1123                           ;sounds.c: 49:    ShortSound();
  1124  01B5  2146               	fcall	_ShortSound
  1125  01B6                     l1117:
  1126                           
  1127                           ;sounds.c: 50:    cnt1 = 0;
  1128  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1129  01B7  01AD               	clrf	_cnt1
  1130  01B8  01AE               	clrf	_cnt1+1
  1131  01B9                     l1119:
  1132                           
  1133                           ;sounds.c: 51:    TimeOut();
  1134  01B9  2180               	fcall	_TimeOut
  1135  01BA                     l144:
  1136  01BA  0008               	return
  1137  01BB                     __end_of_ThreeShort:
  1138                           
  1139                           	psect	text9
  1140  0180                     __ptext9:	
  1141 ;; *************** function _TimeOut *****************
  1142 ;; Defined at:
  1143 ;;		line 22 in file "sounds.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, status,2
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMMON   BANK0
  1157 ;;      Params:         0       0
  1158 ;;      Locals:         0       0
  1159 ;;      Temps:          0       0
  1160 ;;      Totals:         0       0
  1161 ;;Total ram usage:        0 bytes
  1162 ;; Hardware stack levels used: 1
  1163 ;; Hardware stack levels required when called: 1
  1164 ;; This function calls:
  1165 ;;		Nothing
  1166 ;; This function is called by:
  1167 ;;		_TwoShortOneLong
  1168 ;;		_TwoShortTwoLong
  1169 ;;		_ThreeShort
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173  0180                     _TimeOut:	
  1174                           ;psect for function _TimeOut
  1175                           
  1176  0180                     l1061:	
  1177                           ;incstack = 0
  1178                           ; Regs used in _TimeOut: [wreg+status,2]
  1179                           
  1180                           
  1181                           ;sounds.c: 23:    while (cnt1 <= 1000) GP2 = 0;
  1182  0180  2982               	goto	l1063
  1183  0181                     l133:
  1184  0181  1105               	bcf	5,2	;volatile
  1185  0182                     l1063:
  1186  0182  3003               	movlw	3
  1187  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1188  0184  022E               	subwf	_cnt1+1,w
  1189  0185  30E9               	movlw	233
  1190  0186  1903               	skipnz
  1191  0187  022D               	subwf	_cnt1,w
  1192  0188  1C03               	skipc
  1193  0189  298B               	goto	u141
  1194  018A  298C               	goto	u140
  1195  018B                     u141:
  1196  018B  2981               	goto	l133
  1197  018C                     u140:
  1198  018C                     l1065:
  1199                           
  1200                           ;sounds.c: 24:     cnt1 = 0;
  1201  018C  01AD               	clrf	_cnt1
  1202  018D  01AE               	clrf	_cnt1+1
  1203  018E                     l135:
  1204  018E  0008               	return
  1205  018F                     __end_of_TimeOut:
  1206                           
  1207                           	psect	text10
  1208  0146                     __ptext10:	
  1209 ;; *************** function _ShortSound *****************
  1210 ;; Defined at:
  1211 ;;		line 8 in file "sounds.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;		None
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;		None
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMMON   BANK0
  1225 ;;      Params:         0       0
  1226 ;;      Locals:         0       0
  1227 ;;      Temps:          0       2
  1228 ;;      Totals:         0       2
  1229 ;;Total ram usage:        2 bytes
  1230 ;; Hardware stack levels used: 1
  1231 ;; Hardware stack levels required when called: 1
  1232 ;; This function calls:
  1233 ;;		Nothing
  1234 ;; This function is called by:
  1235 ;;		_TwoShortOneLong
  1236 ;;		_TwoShortTwoLong
  1237 ;;		_ThreeShort
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241  0146                     _ShortSound:	
  1242                           ;psect for function _ShortSound
  1243                           
  1244  0146                     l1049:	
  1245                           ;incstack = 0
  1246                           ; Regs used in _ShortSound: [wreg]
  1247                           
  1248                           
  1249                           ;sounds.c: 9:     GP2 = 1;
  1250  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0147  1505               	bsf	5,2	;volatile
  1252  0148                     l1051:
  1253                           
  1254                           ;sounds.c: 10:     _delay((unsigned long)((120)*(4000000/4000.0)));
  1255  0148  309C               	movlw	156
  1256  0149  00A4               	movwf	??_ShortSound+1
  1257  014A  30D7               	movlw	215
  1258  014B  00A3               	movwf	??_ShortSound
  1259  014C                     u307:
  1260  014C  0BA3               	decfsz	??_ShortSound,f
  1261  014D  294C               	goto	u307
  1262  014E  0BA4               	decfsz	??_ShortSound+1,f
  1263  014F  294C               	goto	u307
  1264  0150                     l1053:
  1265                           
  1266                           ;sounds.c: 11:     GP2 = 0;
  1267  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1268  0151  1105               	bcf	5,2	;volatile
  1269                           
  1270                           ;sounds.c: 12:     _delay((unsigned long)((80)*(4000000/4000.0)));
  1271  0152  3068               	movlw	104
  1272  0153  00A4               	movwf	??_ShortSound+1
  1273  0154  30E4               	movlw	228
  1274  0155  00A3               	movwf	??_ShortSound
  1275  0156                     u317:
  1276  0156  0BA3               	decfsz	??_ShortSound,f
  1277  0157  2956               	goto	u317
  1278  0158  0BA4               	decfsz	??_ShortSound+1,f
  1279  0159  2956               	goto	u317
  1280  015A  0000               	nop
  1281  015B                     l126:
  1282  015B  0008               	return
  1283  015C                     __end_of_ShortSound:
  1284                           
  1285                           	psect	text11
  1286  0016                     __ptext11:	
  1287 ;; *************** function _ADCProcessing *****************
  1288 ;; Defined at:
  1289 ;;		line 69 in file "interrupt.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMMON   BANK0
  1303 ;;      Params:         0       0
  1304 ;;      Locals:         0       0
  1305 ;;      Temps:          0       2
  1306 ;;      Totals:         0       2
  1307 ;;Total ram usage:        2 bytes
  1308 ;; Hardware stack levels used: 1
  1309 ;; Hardware stack levels required when called: 2
  1310 ;; This function calls:
  1311 ;;		_MuxTemp
  1312 ;;		_MuxVoltage
  1313 ;; This function is called by:
  1314 ;;		_main
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318  0016                     _ADCProcessing:	
  1319                           ;psect for function _ADCProcessing
  1320                           
  1321  0016                     l1121:	
  1322                           ;incstack = 0
  1323                           ; Regs used in _ADCProcessing: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1324                           
  1325                           
  1326                           ;interrupt.c: 71:     if (ADIF == 1){
  1327  0016  1283               	bcf	3,5	;RP0=0, select bank0
  1328  0017  1F0C               	btfss	12,6	;volatile
  1329  0018  281A               	goto	u151
  1330  0019  281B               	goto	u150
  1331  001A                     u151:
  1332  001A  28AA               	goto	l79
  1333  001B                     u150:
  1334  001B                     l1123:
  1335                           
  1336                           ;interrupt.c: 72:      adcValue = (uint16_t) ((ADRESH << 8) + ADRESL);
  1337  001B  081E               	movf	30,w	;volatile
  1338  001C  00AC               	movwf	_adcValue+1
  1339  001D  1683               	bsf	3,5	;RP0=1, select bank1
  1340  001E  081E               	movf	30,w	;volatile
  1341  001F  1283               	bcf	3,5	;RP0=0, select bank0
  1342  0020  00AB               	movwf	_adcValue
  1343                           
  1344                           ;interrupt.c: 74:      switch (measureType){
  1345  0021  289A               	goto	l1167
  1346  0022                     l1125:
  1347                           
  1348                           ;interrupt.c: 78:  if ((adcValue > 184) && (adcValue < 288)){
  1349  0022  3000               	movlw	0
  1350  0023  022C               	subwf	_adcValue+1,w
  1351  0024  30B9               	movlw	185
  1352  0025  1903               	skipnz
  1353  0026  022B               	subwf	_adcValue,w
  1354  0027  1C03               	skipc
  1355  0028  282A               	goto	u161
  1356  0029  282B               	goto	u160
  1357  002A                     u161:
  1358  002A  2839               	goto	l1131
  1359  002B                     u160:
  1360  002B                     l1127:
  1361  002B  3001               	movlw	1
  1362  002C  022C               	subwf	_adcValue+1,w
  1363  002D  3020               	movlw	32
  1364  002E  1903               	skipnz
  1365  002F  022B               	subwf	_adcValue,w
  1366  0030  1803               	skipnc
  1367  0031  2833               	goto	u171
  1368  0032  2834               	goto	u170
  1369  0033                     u171:
  1370  0033  2839               	goto	l1131
  1371  0034                     u170:
  1372  0034                     l1129:
  1373                           
  1374                           ;interrupt.c: 82:            GP5 = 0;
  1375  0034  1285               	bcf	5,5	;volatile
  1376                           
  1377                           ;interrupt.c: 83:         GP2 = 0;
  1378  0035  1105               	bcf	5,2	;volatile
  1379                           
  1380                           ;interrupt.c: 84:            errorType = 1;
  1381  0036  01B0               	clrf	_errorType
  1382  0037  0AB0               	incf	_errorType,f
  1383                           
  1384                           ;interrupt.c: 85:            }
  1385  0038  2856               	goto	l1143
  1386  0039                     l1131:
  1387  0039  3000               	movlw	0
  1388  003A  022C               	subwf	_adcValue+1,w
  1389  003B  30B9               	movlw	185
  1390  003C  1903               	skipnz
  1391  003D  022B               	subwf	_adcValue,w
  1392  003E  1803               	skipnc
  1393  003F  2841               	goto	u181
  1394  0040  2842               	goto	u180
  1395  0041                     u181:
  1396  0041  2848               	goto	l1137
  1397  0042                     u180:
  1398  0042                     l1133:
  1399                           
  1400                           ;interrupt.c: 92:         GP5 = 1;
  1401  0042  1685               	bsf	5,5	;volatile
  1402  0043                     l1135:
  1403                           
  1404                           ;interrupt.c: 93:      errorType = 2;
  1405  0043  3002               	movlw	2
  1406  0044  00A4               	movwf	??_ADCProcessing
  1407  0045  0824               	movf	??_ADCProcessing,w
  1408  0046  00B0               	movwf	_errorType
  1409                           
  1410                           ;interrupt.c: 94:          }
  1411  0047  2856               	goto	l1143
  1412  0048                     l1137:
  1413  0048  3001               	movlw	1
  1414  0049  022C               	subwf	_adcValue+1,w
  1415  004A  3020               	movlw	32
  1416  004B  1903               	skipnz
  1417  004C  022B               	subwf	_adcValue,w
  1418  004D  1C03               	skipc
  1419  004E  2850               	goto	u191
  1420  004F  2851               	goto	u190
  1421  0050                     u191:
  1422  0050  2856               	goto	l1143
  1423  0051                     u190:
  1424  0051                     l1139:
  1425                           
  1426                           ;interrupt.c: 101:            GP5 = 1;
  1427  0051  1685               	bsf	5,5	;volatile
  1428  0052                     l1141:
  1429                           
  1430                           ;interrupt.c: 102:         errorType = 3;
  1431  0052  3003               	movlw	3
  1432  0053  00A4               	movwf	??_ADCProcessing
  1433  0054  0824               	movf	??_ADCProcessing,w
  1434  0055  00B0               	movwf	_errorType
  1435  0056                     l1143:
  1436                           
  1437                           ;interrupt.c: 105:           MuxTemp();
  1438  0056  215C               	fcall	_MuxTemp
  1439                           
  1440                           ;interrupt.c: 106:         break;
  1441  0057  28AA               	goto	l79
  1442  0058                     l1145:
  1443                           
  1444                           ;interrupt.c: 111:       if (adcValue < 200){
  1445  0058  3000               	movlw	0
  1446  0059  022C               	subwf	_adcValue+1,w
  1447  005A  30C8               	movlw	200
  1448  005B  1903               	skipnz
  1449  005C  022B               	subwf	_adcValue,w
  1450  005D  1803               	skipnc
  1451  005E  2860               	goto	u201
  1452  005F  2861               	goto	u200
  1453  0060                     u201:
  1454  0060  2866               	goto	l1149
  1455  0061                     u200:
  1456  0061                     l1147:
  1457                           
  1458                           ;interrupt.c: 112:         GP5 = 1;
  1459  0061  1685               	bsf	5,5	;volatile
  1460                           
  1461                           ;interrupt.c: 113:         GP4 = 0;
  1462  0062  1205               	bcf	5,4	;volatile
  1463                           
  1464                           ;interrupt.c: 114:               errorType = 1;
  1465  0063  01B0               	clrf	_errorType
  1466  0064  0AB0               	incf	_errorType,f
  1467                           
  1468                           ;interrupt.c: 115:     }
  1469  0065  2898               	goto	l1163
  1470  0066                     l1149:
  1471  0066  3000               	movlw	0
  1472  0067  022C               	subwf	_adcValue+1,w
  1473  0068  30C8               	movlw	200
  1474  0069  1903               	skipnz
  1475  006A  022B               	subwf	_adcValue,w
  1476  006B  1C03               	skipc
  1477  006C  286E               	goto	u211
  1478  006D  286F               	goto	u210
  1479  006E                     u211:
  1480  006E  287C               	goto	l1155
  1481  006F                     u210:
  1482  006F                     l1151:
  1483  006F  3003               	movlw	3
  1484  0070  022C               	subwf	_adcValue+1,w
  1485  0071  30A2               	movlw	162
  1486  0072  1903               	skipnz
  1487  0073  022B               	subwf	_adcValue,w
  1488  0074  1803               	skipnc
  1489  0075  2877               	goto	u221
  1490  0076  2878               	goto	u220
  1491  0077                     u221:
  1492  0077  287C               	goto	l1155
  1493  0078                     u220:
  1494  0078                     l1153:
  1495                           
  1496                           ;interrupt.c: 118:           GP4 = 0;
  1497  0078  1205               	bcf	5,4	;volatile
  1498                           
  1499                           ;interrupt.c: 119:        errorType = 1;
  1500  0079  01B0               	clrf	_errorType
  1501  007A  0AB0               	incf	_errorType,f
  1502                           
  1503                           ;interrupt.c: 120:                        }
  1504  007B  2898               	goto	l1163
  1505  007C                     l1155:
  1506  007C  3003               	movlw	3
  1507  007D  022C               	subwf	_adcValue+1,w
  1508  007E  30A2               	movlw	162
  1509  007F  1903               	skipnz
  1510  0080  022B               	subwf	_adcValue,w
  1511  0081  1C03               	skipc
  1512  0082  2884               	goto	u231
  1513  0083  2885               	goto	u230
  1514  0084                     u231:
  1515  0084  2892               	goto	l76
  1516  0085                     u230:
  1517  0085                     l1157:
  1518  0085  3003               	movlw	3
  1519  0086  022C               	subwf	_adcValue+1,w
  1520  0087  30CA               	movlw	202
  1521  0088  1903               	skipnz
  1522  0089  022B               	subwf	_adcValue,w
  1523  008A  1803               	skipnc
  1524  008B  288D               	goto	u241
  1525  008C  288E               	goto	u240
  1526  008D                     u241:
  1527  008D  2892               	goto	l76
  1528  008E                     u240:
  1529  008E                     l1159:
  1530                           
  1531                           ;interrupt.c: 123:           GP4 = 1;
  1532  008E  1605               	bsf	5,4	;volatile
  1533                           
  1534                           ;interrupt.c: 124:        errorType = 1;
  1535  008F  01B0               	clrf	_errorType
  1536  0090  0AB0               	incf	_errorType,f
  1537                           
  1538                           ;interrupt.c: 125:                        }
  1539  0091  2898               	goto	l1163
  1540  0092                     l76:	
  1541                           ;interrupt.c: 126:              else {
  1542                           
  1543                           
  1544                           ;interrupt.c: 127:           GP4 = 1;
  1545  0092  1605               	bsf	5,4	;volatile
  1546                           
  1547                           ;interrupt.c: 128:              GP5 = 1;
  1548  0093  1685               	bsf	5,5	;volatile
  1549  0094                     l1161:
  1550                           
  1551                           ;interrupt.c: 129:                 errorType = 5;
  1552  0094  3005               	movlw	5
  1553  0095  00A4               	movwf	??_ADCProcessing
  1554  0096  0824               	movf	??_ADCProcessing,w
  1555  0097  00B0               	movwf	_errorType
  1556  0098                     l1163:
  1557                           
  1558                           ;interrupt.c: 132:      MuxVoltage();
  1559  0098  216F               	fcall	_MuxVoltage
  1560                           
  1561                           ;interrupt.c: 133:  break;
  1562  0099  28AA               	goto	l79
  1563  009A                     l1167:
  1564  009A  0831               	movf	_measureType,w
  1565  009B  00A4               	movwf	??_ADCProcessing
  1566  009C  01A5               	clrf	??_ADCProcessing+1
  1567                           
  1568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1569                           ; Switch size 1, requested type "simple"
  1570                           ; Number of cases is 1, Range of values is 0 to 0
  1571                           ; switch strategies available:
  1572                           ; Name         Instructions Cycles
  1573                           ; simple_byte            4     3 (average)
  1574                           ; direct_byte            7     6 (fixed)
  1575                           ; jumptable            260     6 (fixed)
  1576                           ;	Chosen strategy is simple_byte
  1577  009D  0825               	movf	??_ADCProcessing+1,w
  1578  009E  3A00               	xorlw	0	; case 0
  1579  009F  1903               	skipnz
  1580  00A0  28A2               	goto	l1385
  1581  00A1  28AA               	goto	l79
  1582  00A2                     l1385:
  1583                           
  1584                           ; Switch size 1, requested type "simple"
  1585                           ; Number of cases is 2, Range of values is 1 to 2
  1586                           ; switch strategies available:
  1587                           ; Name         Instructions Cycles
  1588                           ; simple_byte            7     4 (average)
  1589                           ; direct_byte           11     9 (fixed)
  1590                           ; jumptable            263     9 (fixed)
  1591                           ;	Chosen strategy is simple_byte
  1592  00A2  0824               	movf	??_ADCProcessing,w
  1593  00A3  3A01               	xorlw	1	; case 1
  1594  00A4  1903               	skipnz
  1595  00A5  2822               	goto	l1125
  1596  00A6  3A03               	xorlw	3	; case 2
  1597  00A7  1903               	skipnz
  1598  00A8  2858               	goto	l1145
  1599  00A9  28AA               	goto	l79
  1600  00AA                     l79:
  1601  00AA  0008               	return
  1602  00AB                     __end_of_ADCProcessing:
  1603                           
  1604                           	psect	text12
  1605  016F                     __ptext12:	
  1606 ;; *************** function _MuxVoltage *****************
  1607 ;; Defined at:
  1608 ;;		line 18 in file "interrupt.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      void 
  1615 ;; Registers used:
  1616 ;;		wreg, status,2
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMMON   BANK0
  1622 ;;      Params:         0       0
  1623 ;;      Locals:         0       0
  1624 ;;      Temps:          0       1
  1625 ;;      Totals:         0       1
  1626 ;;Total ram usage:        1 bytes
  1627 ;; Hardware stack levels used: 1
  1628 ;; Hardware stack levels required when called: 1
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_ADCProcessing
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636  016F                     _MuxVoltage:	
  1637                           ;psect for function _MuxVoltage
  1638                           
  1639  016F                     l1067:	
  1640                           ;incstack = 0
  1641                           ; Regs used in _MuxVoltage: [wreg+status,2]
  1642                           
  1643                           
  1644                           ;interrupt.c: 19:        ADCON0 = 0;
  1645  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1646  0170  019F               	clrf	31	;volatile
  1647  0171                     l1069:
  1648                           
  1649                           ;interrupt.c: 20:        ADON = 1;
  1650  0171  141F               	bsf	31,0	;volatile
  1651  0172                     l1071:
  1652                           
  1653                           ;interrupt.c: 21:        ADFM = 1;
  1654  0172  179F               	bsf	31,7	;volatile
  1655  0173                     l1073:
  1656                           
  1657                           ;interrupt.c: 22:        CHS1 = 0;
  1658  0173  119F               	bcf	31,3	;volatile
  1659  0174                     l1075:
  1660                           
  1661                           ;interrupt.c: 23:        CHS0 = 1;
  1662  0174  151F               	bsf	31,2	;volatile
  1663  0175                     l1077:
  1664                           
  1665                           ;interrupt.c: 24:        measureType = 1;
  1666  0175  01B1               	clrf	_measureType
  1667  0176  0AB1               	incf	_measureType,f
  1668  0177                     l1079:
  1669                           
  1670                           ;interrupt.c: 25:        ADIF = 0;
  1671  0177  130C               	bcf	12,6	;volatile
  1672  0178                     l1081:
  1673                           
  1674                           ;interrupt.c: 26:        _delay((unsigned long)((50)*(4000000/4000000.0)));
  1675  0178  3010               	movlw	16
  1676  0179  00A3               	movwf	??_MuxVoltage
  1677  017A                     u327:
  1678  017A  0BA3               	decfsz	??_MuxVoltage,f
  1679  017B  297A               	goto	u327
  1680  017C  0000               	nop
  1681  017D                     l1083:
  1682                           
  1683                           ;interrupt.c: 27:        GO = 1;
  1684  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1685  017E  149F               	bsf	31,1	;volatile
  1686  017F                     l49:
  1687  017F  0008               	return
  1688  0180                     __end_of_MuxVoltage:
  1689                           
  1690                           	psect	text13
  1691  015C                     __ptext13:	
  1692 ;; *************** function _MuxTemp *****************
  1693 ;; Defined at:
  1694 ;;		line 31 in file "interrupt.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;		None
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;		None
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  1    wreg      void 
  1701 ;; Registers used:
  1702 ;;		wreg, status,2
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMMON   BANK0
  1708 ;;      Params:         0       0
  1709 ;;      Locals:         0       0
  1710 ;;      Temps:          0       1
  1711 ;;      Totals:         0       1
  1712 ;;Total ram usage:        1 bytes
  1713 ;; Hardware stack levels used: 1
  1714 ;; Hardware stack levels required when called: 1
  1715 ;; This function calls:
  1716 ;;		Nothing
  1717 ;; This function is called by:
  1718 ;;		_ADCProcessing
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722  015C                     _MuxTemp:	
  1723                           ;psect for function _MuxTemp
  1724                           
  1725  015C                     l1085:	
  1726                           ;incstack = 0
  1727                           ; Regs used in _MuxTemp: [wreg+status,2]
  1728                           
  1729                           
  1730                           ;interrupt.c: 32:        ADCON0 = 0;
  1731  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1732  015D  019F               	clrf	31	;volatile
  1733  015E                     l1087:
  1734                           
  1735                           ;interrupt.c: 33:        ADON = 1;
  1736  015E  141F               	bsf	31,0	;volatile
  1737  015F                     l1089:
  1738                           
  1739                           ;interrupt.c: 34:        ADFM = 1;
  1740  015F  179F               	bsf	31,7	;volatile
  1741  0160                     l1091:
  1742                           
  1743                           ;interrupt.c: 35:        CHS1 = 0;
  1744  0160  119F               	bcf	31,3	;volatile
  1745  0161                     l1093:
  1746                           
  1747                           ;interrupt.c: 36:        CHS0 = 0;
  1748  0161  111F               	bcf	31,2	;volatile
  1749  0162                     l1095:
  1750                           
  1751                           ;interrupt.c: 37:        measureType = 2;
  1752  0162  3002               	movlw	2
  1753  0163  00A3               	movwf	??_MuxTemp
  1754  0164  0823               	movf	??_MuxTemp,w
  1755  0165  00B1               	movwf	_measureType
  1756  0166                     l1097:
  1757                           
  1758                           ;interrupt.c: 38:        ADIF = 0;
  1759  0166  130C               	bcf	12,6	;volatile
  1760  0167                     l1099:
  1761                           
  1762                           ;interrupt.c: 39:        _delay((unsigned long)((50)*(4000000/4000000.0)));
  1763  0167  3010               	movlw	16
  1764  0168  00A3               	movwf	??_MuxTemp
  1765  0169                     u337:
  1766  0169  0BA3               	decfsz	??_MuxTemp,f
  1767  016A  2969               	goto	u337
  1768  016B  0000               	nop
  1769  016C                     l1101:
  1770                           
  1771                           ;interrupt.c: 40:        GO = 1;
  1772  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1773  016D  149F               	bsf	31,1	;volatile
  1774  016E                     l52:
  1775  016E  0008               	return
  1776  016F                     __end_of_MuxTemp:
  1777                           
  1778                           	psect	text14
  1779  00D3                     __ptext14:	
  1780 ;; *************** function _ISR *****************
  1781 ;; Defined at:
  1782 ;;		line 43 in file "interrupt.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;		None
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;		None
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, status,2, status,0
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMMON   BANK0
  1796 ;;      Params:         0       0
  1797 ;;      Locals:         0       0
  1798 ;;      Temps:          0       3
  1799 ;;      Totals:         0       3
  1800 ;;Total ram usage:        3 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; This function calls:
  1803 ;;		Nothing
  1804 ;; This function is called by:
  1805 ;;		Interrupt level 1
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809  00D3                     _ISR:	
  1810                           ;psect for function _ISR
  1811                           
  1812  00D3                     i1l1253:
  1813                           
  1814                           ;interrupt.c: 47:     if (TMR0IF == 1){
  1815  00D3  1D0B               	btfss	11,2	;volatile
  1816  00D4  28D6               	goto	u25_21
  1817  00D5  28D7               	goto	u25_20
  1818  00D6                     u25_21:
  1819  00D6  28DE               	goto	i1l1261
  1820  00D7                     u25_20:
  1821  00D7                     i1l1255:
  1822                           
  1823                           ;interrupt.c: 49:     TMR0 = 6;
  1824  00D7  3006               	movlw	6
  1825  00D8  0081               	movwf	1	;volatile
  1826  00D9                     i1l1257:
  1827                           
  1828                           ;interrupt.c: 50:  cnt0++;
  1829  00D9  3001               	movlw	1
  1830  00DA  00A0               	movwf	??_ISR
  1831  00DB  0820               	movf	??_ISR,w
  1832  00DC  07AF               	addwf	_cnt0,f
  1833  00DD                     i1l1259:
  1834                           
  1835                           ;interrupt.c: 51:  TMR0IF = 0;
  1836  00DD  110B               	bcf	11,2	;volatile
  1837  00DE                     i1l1261:
  1838                           
  1839                           ;interrupt.c: 56:     if (TMR1IF == 1){
  1840  00DE  1C0C               	btfss	12,0	;volatile
  1841  00DF  28E1               	goto	u26_21
  1842  00E0  28E2               	goto	u26_20
  1843  00E1                     u26_21:
  1844  00E1  28ED               	goto	i1l59
  1845  00E2                     u26_20:
  1846  00E2                     i1l1263:
  1847                           
  1848                           ;interrupt.c: 58:   TMR1H = 0xFC;
  1849  00E2  30FC               	movlw	252
  1850  00E3  008F               	movwf	15	;volatile
  1851                           
  1852                           ;interrupt.c: 59:   TMR1L = 0x17;
  1853  00E4  3017               	movlw	23
  1854  00E5  008E               	movwf	14	;volatile
  1855                           
  1856                           ;interrupt.c: 61:          cnt1++;
  1857  00E6  3001               	movlw	1
  1858  00E7  07AD               	addwf	_cnt1,f
  1859  00E8  1803               	skipnc
  1860  00E9  0AAE               	incf	_cnt1+1,f
  1861  00EA  3000               	movlw	0
  1862  00EB  07AE               	addwf	_cnt1+1,f
  1863  00EC                     i1l1265:
  1864                           
  1865                           ;interrupt.c: 63:         TMR1IF = 0;
  1866  00EC  100C               	bcf	12,0	;volatile
  1867  00ED                     i1l59:
  1868  00ED  0822               	movf	??_ISR+2,w
  1869  00EE  008A               	movwf	10
  1870  00EF  0E21               	swapf	??_ISR+1,w
  1871  00F0  0083               	movwf	3
  1872  00F1  0EDE               	swapf	btemp,f
  1873  00F2  0E5E               	swapf	btemp,w
  1874  00F3  0009               	retfie
  1875  00F4                     __end_of_ISR:
  1876  005E                     btemp	set	94	;btemp
  1877  005E                     wtemp0	set	94
  1878                           
  1879                           	psect	intentry
  1880  0004                     __pintentry:	
  1881                           ;incstack = 0
  1882                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1883                           
  1884  0004                     interrupt_function:
  1885  005E                     saved_w	set	btemp
  1886  0004  00DE               	movwf	btemp
  1887  0005  0E03               	swapf	3,w
  1888  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1889  0007  00A1               	movwf	??_ISR+1
  1890  0008  080A               	movf	10,w
  1891  0009  00A2               	movwf	??_ISR+2
  1892  000A  28D3               	ljmp	_ISR
  1893                           
  1894                           	psect	config
  1895                           
  1896                           ;Config register CONFIG @ 0x2007
  1897                           ;	Oscillator Selection bits
  1898                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  1899                           ;	Watchdog Timer Enable bit
  1900                           ;	WDTE = OFF, WDT disabled
  1901                           ;	Power-Up Timer Enable bit
  1902                           ;	PWRTE = OFF, PWRT disabled
  1903                           ;	GP3/MCLR pin function select
  1904                           ;	MCLRE = ON, GP3/MCLR pin function is MCLR
  1905                           ;	Brown-out Detect Enable bit
  1906                           ;	BOREN = ON, BOD enabled
  1907                           ;	Code Protection bit
  1908                           ;	CP = OFF, Program Memory code protection is disabled
  1909                           ;	Data Code Protection bit
  1910                           ;	CPD = OFF, Data memory code protection is disabled
  1911  2007                     	org	8199
  1912  2007  31F4               	dw	12788

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     11      18

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_DataProcessing
    _Init_uC->_LongSound
    _TwoShortTwoLong->_LongSound
    _TwoShortOneLong->_LongSound
    _ThreeShort->_ShortSound
    _ADCProcessing->_MuxTemp
    _ADCProcessing->_MuxVoltage

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              8 BANK0      3     3      0
                      _ADCProcessing
                     _DataProcessing
                         _InitTimer0
                         _InitTimer1
                            _Init_uC
 ---------------------------------------------------------------------------------
 (1) _Init_uC                                              0     0      0       0
                          _LongSound
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DataProcessing                                       2     2      0       0
                                              6 BANK0      2     2      0
                         _ThreeShort
                    _TwoShortOneLong
                    _TwoShortTwoLong
 ---------------------------------------------------------------------------------
 (2) _TwoShortTwoLong                                      0     0      0       0
                          _LongSound
                         _ShortSound
                            _TimeOut
 ---------------------------------------------------------------------------------
 (2) _TwoShortOneLong                                      0     0      0       0
                          _LongSound
                         _ShortSound
                            _TimeOut
 ---------------------------------------------------------------------------------
 (2) _LongSound                                            3     3      0       0
                                              3 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _ThreeShort                                           0     0      0       0
                         _ShortSound
                            _TimeOut
 ---------------------------------------------------------------------------------
 (3) _TimeOut                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ShortSound                                           2     2      0       0
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADCProcessing                                        2     2      0       0
                                              4 BANK0      2     2      0
                            _MuxTemp
                         _MuxVoltage
 ---------------------------------------------------------------------------------
 (2) _MuxVoltage                                           1     1      0       0
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _MuxTemp                                              1     1      0       0
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCProcessing
     _MuxTemp
     _MuxVoltage
   _DataProcessing
     _ThreeShort
       _ShortSound
       _TimeOut
     _TwoShortOneLong
       _LongSound
       _ShortSound
       _TimeOut
     _TwoShortTwoLong
       _LongSound
       _ShortSound
       _TimeOut
   _InitTimer0
   _InitTimer1
   _Init_uC
     _LongSound

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               3E      B      12       4       29.0%
BITBANK0            3E      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      12       6        0.0%
ABS                  0      0      12       5        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Feb 10 20:07:34 2025

                     l52 016E                       l49 017F                       l76 0092  
                     l79 00AA                       _GO 00F9                      l133 0181  
                    l141 01A2                      l117 0112                      l221 00D2  
                    l126 015B                      l135 018E                      l215 01AA  
                    l144 01BA                      l129 012D                      l138 01B2  
                    l218 0199                      _GP2 002A                      _GP4 002C  
                    _GP5 002D                      _GIE 005F                      u200 0061  
                    u201 0060                      u210 006F                      u211 006E  
                    u220 0078                      u140 018C                      u221 0077  
                    u141 018B                      u230 0085                      u150 001B  
                    u231 0084                      u151 001A                      u240 008E  
                    u160 002B                      u241 008D                      u161 002A  
                    u170 0034                      u171 0033                      u307 014C  
                    u180 0042                      u181 0041                      u317 0156  
                    u190 0051                      u327 017A                      u191 0050  
                    u337 0169                      _ISR 00D3                      u277 0138  
                    u287 011B                      u297 0128        ??_TwoShortOneLong 0000  
                   ?_ISR 0020        ??_TwoShortTwoLong 0000                     l1101 016C  
                   l1103 01AB                     l1111 019E                     l1121 0016  
                   l1105 01AE                     l1113 01A1                     l1201 00B9  
                   l1131 0039                     l1123 001B                     l1051 0148  
                   l1115 01B3                     l1107 01B1                     l1211 00C2  
                   l1203 00BB                     l1141 0052                     l1133 0042  
                   l1125 0022                     l1053 0150                     l1061 0180  
                   l1117 01B6                     l1109 019A                     l1221 00C8  
                   l1213 00C3                     l1205 00BD                     l1071 0172  
                   l1151 006F                     l1135 0043                     l1143 0056  
                   l1127 002B                     l1063 0182                     l1119 01B9  
                   l1055 0113                     l1231 00CE                     l1223 00CA  
                   l1215 00C5                     l1207 00BF                     l1081 0178  
                   l1073 0173                     l1161 0094                     l1153 0078  
                   l1145 0058                     l1137 0048                     l1129 0034  
                   l1049 0146                     l1065 018C                     l1057 0115  
                   l1321 00F7                     l1233 00D0                     l1225 00CB  
                   l1217 00C6                     l1209 00C0                     l1091 0160  
                   l1083 017D                     l1075 0174                     l1067 016F  
                   l1155 007C                     l1163 0098                     l1147 0061  
                   l1139 0051                     l1059 0122                     l1323 00F9  
                   l1235 00D1                     l1227 00CC                     l1219 00C7  
                   l1093 0161                     l1085 015C                     l1077 0175  
                   l1069 0171                     l1157 0085                     l1149 0066  
                   l1317 00F4                     l1173 01A3                     l1181 018F  
                   l1229 00CD                     l1341 0143                     l1333 012E  
                   l1095 0162                     l1087 015E                     l1079 0177  
                   l1159 008E                     l1167 009A                     l1319 00F5  
                   l1327 00FB                     l1175 01A6                     l1183 0196  
                   l1191 00B0                     l1335 0131                     l1097 0166  
                   l1089 015F                     l1177 01A8                     l1185 0197  
                   l1193 00B1                     l1337 013F                     l1099 0167  
                   l1179 01A9                     l1195 00B3                     l1187 00AB  
                   l1339 0142                     l1197 00B5                     l1189 00AE  
                   l1383 0104                     l1199 00B7                     l1385 00A2  
                   _ADIF 0066                     _ADFM 00FF                     _ADON 00F8  
                   _CHS0 00FA                     _CHS1 00FB                     _GPIO 0005  
                   _PEIE 005E                     i1l59 00ED                     _VCFG 00FE  
                   _TMR0 0001                     _cnt0 002F                     _cnt1 002D  
                   _main 012E                     btemp 005E                     start 000B  
       ??_DataProcessing 0026          __end_of_Init_uC 00D3                    ??_ISR 0020  
        __end_of_TimeOut 018F          __end_of_MuxTemp 016F                    ?_main 0020  
                  _CMCON 0019                    _ANSEL 009F                    _T1CON 0010  
                  u25_20 00D7                    u25_21 00D6                    _TMR1H 000F  
                  _TMR1L 000E                    u26_20 00E2                    u26_21 00E1  
                  _VRCON 0099                    pclath 000A                    status 0003  
                  wtemp0 005E          __initialization 000C               _InitTimer0 01A3  
             _InitTimer1 018F             __end_of_main 0146                   ??_main 0028  
                 _ADCON0 001F                   _ADRESH 001E                   _ADRESL 009E  
                 i1l1261 00DE                   i1l1253 00D3                   i1l1263 00E2  
                 i1l1255 00D7                   i1l1265 00EC                   i1l1257 00D9  
                 i1l1259 00DD                   _TMR0IE 005D                   _TMR0IF 005A  
                 _TMR1IE 0460                   _TMR1IF 0060                   _TRISIO 0085  
              ??_Init_uC 0000                ??_TimeOut 0000                ??_MuxTemp 0023  
             _ThreeShort 01B3               _MuxVoltage 016F               _ShortSound 0146  
                 saved_w 005E  __end_of__initialization 0014              ?_InitTimer0 0020  
            ?_InitTimer1 0020           __pcstackCOMMON 0000             __pidataBANK0 01BB  
        _TwoShortOneLong 01AB          _TwoShortTwoLong 019A        __end_of_LongSound 012E  
             __pbssBANK0 002B            _ADCProcessing 0016               __pmaintext 012E  
             __pintentry 0004              ?_ThreeShort 0020              ?_MuxVoltage 0020  
            ?_ShortSound 0020                  _TRISIO0 0428                  _TRISIO1 0429  
                _TRISIO2 042A                  _TRISIO4 042C                  _TRISIO5 042D  
         ?_ADCProcessing 0020  __end_of_TwoShortOneLong 01B3                  _Init_uC 00AB  
                _TimeOut 0180                  _MuxTemp 015C  __end_of_TwoShortTwoLong 01A3  
                __ptext1 00AB                  __ptext2 018F                  __ptext3 01A3  
                __ptext4 00F4                  __ptext5 019A                  __ptext6 01AB  
                __ptext7 0113                  __ptext8 01B3                  __ptext9 0180  
   end_of_initialization 0014          ??_ADCProcessing 0024         ?_TwoShortOneLong 0020  
           ??_InitTimer0 0000             ??_InitTimer1 0000         ?_TwoShortTwoLong 0020  
    start_initialization 000C              __end_of_ISR 00F4       __end_of_InitTimer0 01AB  
     __end_of_InitTimer1 019A                _LongSound 0113             ??_ThreeShort 0000  
            __pdataBANK0 0031             ??_MuxVoltage 0023             ??_ShortSound 0023  
              ___latbits 0000            __pcstackBANK0 0020               ?_LongSound 0020  
     __end_of_ThreeShort 01BB       __end_of_MuxVoltage 0180                 ?_Init_uC 0020  
     __end_of_ShortSound 015C                 ?_TimeOut 0020                 ?_MuxTemp 0020  
         _DataProcessing 00F4                _errorType 0030        interrupt_function 0004  
 __end_of_DataProcessing 0113              ??_LongSound 0023              _measureType 0031  
        ?_DataProcessing 0020                 _adcValue 002B                 __ptext10 0146  
               __ptext11 0016                 __ptext12 016F                 __ptext13 015C  
               __ptext14 00D3    __end_of_ADCProcessing 00AB                 intlevel1 0000  
             _OPTION_REG 0081  
