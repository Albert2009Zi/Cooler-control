

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Jul 17 12:07:05 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,space=0,delta=2
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x5E,2
    29     0000                     
    30                           ; Generated 17/08/2023 GMT
    31                           ; 
    32                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC12F675 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64     0004                     fsr             equ	4
    65     0004                     fsr0            equ	4
    66     0000                     indf            equ	0
    67     0000                     indf0           equ	0
    68     0002                     pc              equ	2
    69     0002                     pcl             equ	2
    70     000A                     pclath          equ	10
    71     0003                     status          equ	3
    72     0000                     INDF            equ	0	;# 
    73     0001                     TMR0            equ	1	;# 
    74     0002                     PCL             equ	2	;# 
    75     0003                     STATUS          equ	3	;# 
    76     0004                     FSR             equ	4	;# 
    77     0005                     GPIO            equ	5	;# 
    78     000A                     PCLATH          equ	10	;# 
    79     000B                     INTCON          equ	11	;# 
    80     000C                     PIR1            equ	12	;# 
    81     000E                     TMR1            equ	14	;# 
    82     000E                     TMR1L           equ	14	;# 
    83     000F                     TMR1H           equ	15	;# 
    84     0010                     T1CON           equ	16	;# 
    85     0019                     CMCON           equ	25	;# 
    86     001E                     ADRESH          equ	30	;# 
    87     001F                     ADCON0          equ	31	;# 
    88     0081                     OPTION_REG      equ	129	;# 
    89     0085                     TRISIO          equ	133	;# 
    90     008C                     PIE1            equ	140	;# 
    91     008E                     PCON            equ	142	;# 
    92     0090                     OSCCAL          equ	144	;# 
    93     0095                     WPU             equ	149	;# 
    94     0096                     IOC             equ	150	;# 
    95     0096                     IOCB            equ	150	;# 
    96     0099                     VRCON           equ	153	;# 
    97     009A                     EEDATA          equ	154	;# 
    98     009A                     EEDAT           equ	154	;# 
    99     009B                     EEADR           equ	155	;# 
   100     009C                     EECON1          equ	156	;# 
   101     009D                     EECON2          equ	157	;# 
   102     009E                     ADRESL          equ	158	;# 
   103     009F                     ANSEL           equ	159	;# 
   104     0000                     INDF            equ	0	;# 
   105     0001                     TMR0            equ	1	;# 
   106     0002                     PCL             equ	2	;# 
   107     0003                     STATUS          equ	3	;# 
   108     0004                     FSR             equ	4	;# 
   109     0005                     GPIO            equ	5	;# 
   110     000A                     PCLATH          equ	10	;# 
   111     000B                     INTCON          equ	11	;# 
   112     000C                     PIR1            equ	12	;# 
   113     000E                     TMR1            equ	14	;# 
   114     000E                     TMR1L           equ	14	;# 
   115     000F                     TMR1H           equ	15	;# 
   116     0010                     T1CON           equ	16	;# 
   117     0019                     CMCON           equ	25	;# 
   118     001E                     ADRESH          equ	30	;# 
   119     001F                     ADCON0          equ	31	;# 
   120     0081                     OPTION_REG      equ	129	;# 
   121     0085                     TRISIO          equ	133	;# 
   122     008C                     PIE1            equ	140	;# 
   123     008E                     PCON            equ	142	;# 
   124     0090                     OSCCAL          equ	144	;# 
   125     0095                     WPU             equ	149	;# 
   126     0096                     IOC             equ	150	;# 
   127     0096                     IOCB            equ	150	;# 
   128     0099                     VRCON           equ	153	;# 
   129     009A                     EEDATA          equ	154	;# 
   130     009A                     EEDAT           equ	154	;# 
   131     009B                     EEADR           equ	155	;# 
   132     009C                     EECON1          equ	156	;# 
   133     009D                     EECON2          equ	157	;# 
   134     009E                     ADRESL          equ	158	;# 
   135     009F                     ANSEL           equ	159	;# 
   136     0000                     INDF            equ	0	;# 
   137     0001                     TMR0            equ	1	;# 
   138     0002                     PCL             equ	2	;# 
   139     0003                     STATUS          equ	3	;# 
   140     0004                     FSR             equ	4	;# 
   141     0005                     GPIO            equ	5	;# 
   142     000A                     PCLATH          equ	10	;# 
   143     000B                     INTCON          equ	11	;# 
   144     000C                     PIR1            equ	12	;# 
   145     000E                     TMR1            equ	14	;# 
   146     000E                     TMR1L           equ	14	;# 
   147     000F                     TMR1H           equ	15	;# 
   148     0010                     T1CON           equ	16	;# 
   149     0019                     CMCON           equ	25	;# 
   150     001E                     ADRESH          equ	30	;# 
   151     001F                     ADCON0          equ	31	;# 
   152     0081                     OPTION_REG      equ	129	;# 
   153     0085                     TRISIO          equ	133	;# 
   154     008C                     PIE1            equ	140	;# 
   155     008E                     PCON            equ	142	;# 
   156     0090                     OSCCAL          equ	144	;# 
   157     0095                     WPU             equ	149	;# 
   158     0096                     IOC             equ	150	;# 
   159     0096                     IOCB            equ	150	;# 
   160     0099                     VRCON           equ	153	;# 
   161     009A                     EEDATA          equ	154	;# 
   162     009A                     EEDAT           equ	154	;# 
   163     009B                     EEADR           equ	155	;# 
   164     009C                     EECON1          equ	156	;# 
   165     009D                     EECON2          equ	157	;# 
   166     009E                     ADRESL          equ	158	;# 
   167     009F                     ANSEL           equ	159	;# 
   168     0000                     INDF            equ	0	;# 
   169     0001                     TMR0            equ	1	;# 
   170     0002                     PCL             equ	2	;# 
   171     0003                     STATUS          equ	3	;# 
   172     0004                     FSR             equ	4	;# 
   173     0005                     GPIO            equ	5	;# 
   174     000A                     PCLATH          equ	10	;# 
   175     000B                     INTCON          equ	11	;# 
   176     000C                     PIR1            equ	12	;# 
   177     000E                     TMR1            equ	14	;# 
   178     000E                     TMR1L           equ	14	;# 
   179     000F                     TMR1H           equ	15	;# 
   180     0010                     T1CON           equ	16	;# 
   181     0019                     CMCON           equ	25	;# 
   182     001E                     ADRESH          equ	30	;# 
   183     001F                     ADCON0          equ	31	;# 
   184     0081                     OPTION_REG      equ	129	;# 
   185     0085                     TRISIO          equ	133	;# 
   186     008C                     PIE1            equ	140	;# 
   187     008E                     PCON            equ	142	;# 
   188     0090                     OSCCAL          equ	144	;# 
   189     0095                     WPU             equ	149	;# 
   190     0096                     IOC             equ	150	;# 
   191     0096                     IOCB            equ	150	;# 
   192     0099                     VRCON           equ	153	;# 
   193     009A                     EEDATA          equ	154	;# 
   194     009A                     EEDAT           equ	154	;# 
   195     009B                     EEADR           equ	155	;# 
   196     009C                     EECON1          equ	156	;# 
   197     009D                     EECON2          equ	157	;# 
   198     009E                     ADRESL          equ	158	;# 
   199     009F                     ANSEL           equ	159	;# 
   200     0000                     INDF            equ	0	;# 
   201     0001                     TMR0            equ	1	;# 
   202     0002                     PCL             equ	2	;# 
   203     0003                     STATUS          equ	3	;# 
   204     0004                     FSR             equ	4	;# 
   205     0005                     GPIO            equ	5	;# 
   206     000A                     PCLATH          equ	10	;# 
   207     000B                     INTCON          equ	11	;# 
   208     000C                     PIR1            equ	12	;# 
   209     000E                     TMR1            equ	14	;# 
   210     000E                     TMR1L           equ	14	;# 
   211     000F                     TMR1H           equ	15	;# 
   212     0010                     T1CON           equ	16	;# 
   213     0019                     CMCON           equ	25	;# 
   214     001E                     ADRESH          equ	30	;# 
   215     001F                     ADCON0          equ	31	;# 
   216     0081                     OPTION_REG      equ	129	;# 
   217     0085                     TRISIO          equ	133	;# 
   218     008C                     PIE1            equ	140	;# 
   219     008E                     PCON            equ	142	;# 
   220     0090                     OSCCAL          equ	144	;# 
   221     0095                     WPU             equ	149	;# 
   222     0096                     IOC             equ	150	;# 
   223     0096                     IOCB            equ	150	;# 
   224     0099                     VRCON           equ	153	;# 
   225     009A                     EEDATA          equ	154	;# 
   226     009A                     EEDAT           equ	154	;# 
   227     009B                     EEADR           equ	155	;# 
   228     009C                     EECON1          equ	156	;# 
   229     009D                     EECON2          equ	157	;# 
   230     009E                     ADRESL          equ	158	;# 
   231     009F                     ANSEL           equ	159	;# 
   232                           
   233                           	psect	idataBANK0
   234     0156                     __pidataBANK0:
   235                           
   236                           ;initializer for _measureType
   237     0156  3401               	retlw	1
   238     001E                     _ADRESH         set	30
   239     001F                     _ADCON0         set	31
   240     0005                     _GPIO           set	5
   241     0019                     _CMCON          set	25
   242     0010                     _T1CON          set	16
   243     000E                     _TMR1L          set	14
   244     000F                     _TMR1H          set	15
   245     0001                     _TMR0           set	1
   246     00F9                     _GO             set	249
   247     0066                     _ADIF           set	102
   248     00FA                     _CHS0           set	250
   249     00FB                     _CHS1           set	251
   250     00FF                     _ADFM           set	255
   251     00F8                     _ADON           set	248
   252     005F                     _GIE            set	95
   253     005E                     _PEIE           set	94
   254     00FE                     _VCFG           set	254
   255     002C                     _GP4            set	44
   256     002D                     _GP5            set	45
   257     0060                     _TMR1IF         set	96
   258     005D                     _TMR0IE         set	93
   259     005A                     _TMR0IF         set	90
   260     002A                     _GP2            set	42
   261     009E                     _ADRESL         set	158
   262     009F                     _ANSEL          set	159
   263     0085                     _TRISIO         set	133
   264     0099                     _VRCON          set	153
   265     0081                     _OPTION_REG     set	129
   266     0429                     _TRISIO1        set	1065
   267     0428                     _TRISIO0        set	1064
   268     042C                     _TRISIO4        set	1068
   269     042D                     _TRISIO5        set	1069
   270     042A                     _TRISIO2        set	1066
   271     0460                     _TMR1IE         set	1120
   272                           
   273                           	psect	cinit
   274     000C                     start_initialization:	
   275                           ; #config settings
   276                           
   277     000C                     __initialization:
   278                           
   279                           ; Initialize objects allocated to BANK0
   280     000C  2156               	fcall	__pidataBANK0	;fetch initializer
   281     000D  00AD               	movwf	__pdataBANK0& (0+127)
   282                           
   283                           ; Clear objects allocated to BANK0
   284     000E  01A7               	clrf	__pbssBANK0& (0+127)
   285     000F  01A8               	clrf	(__pbssBANK0+1)& (0+127)
   286     0010  01A9               	clrf	(__pbssBANK0+2)& (0+127)
   287     0011  01AA               	clrf	(__pbssBANK0+3)& (0+127)
   288     0012  01AB               	clrf	(__pbssBANK0+4)& (0+127)
   289     0013  01AC               	clrf	(__pbssBANK0+5)& (0+127)
   290     0014                     end_of_initialization:	
   291                           ;End of C runtime variable initialization code
   292                           
   293     0014                     __end_of__initialization:
   294     0014  0183               	clrf	3
   295     0015  28E5               	ljmp	_main	;jump to C main() function
   296                           
   297                           	psect	bssBANK0
   298     0027                     __pbssBANK0:
   299     0027                     _adcValue:
   300     0027                     	ds	2
   301     0029                     _cnt1:
   302     0029                     	ds	2
   303     002B                     _cnt0:
   304     002B                     	ds	1
   305     002C                     _errorType:
   306     002C                     	ds	1
   307                           
   308                           	psect	dataBANK0
   309     002D                     __pdataBANK0:
   310     002D                     _measureType:
   311     002D                     	ds	1
   312                           
   313                           	psect	cstackCOMMON
   314     0000                     __pcstackCOMMON:
   315     0000                     ??_Init_uC:
   316     0000                     ??_InitTimer0:	
   317                           ; 1 bytes @ 0x0
   318                           
   319     0000                     ??_InitTimer1:	
   320                           ; 1 bytes @ 0x0
   321                           
   322     0000                     ??_ADCProcessing:	
   323                           ; 1 bytes @ 0x0
   324                           
   325     0000                     ??_DataProcessing:	
   326                           ; 1 bytes @ 0x0
   327                           
   328     0000                     ??_TwoShortOneLong:	
   329                           ; 1 bytes @ 0x0
   330                           
   331     0000                     ??_TwoShortTwoLong:	
   332                           ; 1 bytes @ 0x0
   333                           
   334     0000                     ??_ThreeShort:	
   335                           ; 1 bytes @ 0x0
   336                           
   337     0000                     ??_TimeOut:	
   338                           ; 1 bytes @ 0x0
   339                           
   340                           
   341                           	psect	cstackBANK0
   342     0020                     __pcstackBANK0:	
   343                           ; 1 bytes @ 0x0
   344                           
   345     0020                     ?_Init_uC:
   346     0020                     ?_InitTimer0:	
   347                           ; 1 bytes @ 0x0
   348                           
   349     0020                     ?_InitTimer1:	
   350                           ; 1 bytes @ 0x0
   351                           
   352     0020                     ?_ADCProcessing:	
   353                           ; 1 bytes @ 0x0
   354                           
   355     0020                     ?_DataProcessing:	
   356                           ; 1 bytes @ 0x0
   357                           
   358     0020                     ?_TwoShortOneLong:	
   359                           ; 1 bytes @ 0x0
   360                           
   361     0020                     ?_TwoShortTwoLong:	
   362                           ; 1 bytes @ 0x0
   363                           
   364     0020                     ?_ThreeShort:	
   365                           ; 1 bytes @ 0x0
   366                           
   367     0020                     ?_MuxVoltage:	
   368                           ; 1 bytes @ 0x0
   369                           
   370     0020                     ?_main:	
   371                           ; 1 bytes @ 0x0
   372                           
   373     0020                     ?_ShortSound:	
   374                           ; 1 bytes @ 0x0
   375                           
   376     0020                     ?_LongSound:	
   377                           ; 1 bytes @ 0x0
   378                           
   379     0020                     ?_TimeOut:	
   380                           ; 1 bytes @ 0x0
   381                           
   382     0020                     ?_MuxTemp:	
   383                           ; 1 bytes @ 0x0
   384                           
   385     0020                     ?_ISR:	
   386                           ; 1 bytes @ 0x0
   387                           
   388     0020                     ??_ISR:	
   389                           ; 1 bytes @ 0x0
   390                           
   391                           
   392                           ; 1 bytes @ 0x0
   393     0020                     	ds	2
   394     0022                     ??_MuxVoltage:
   395     0022                     ??_ShortSound:	
   396                           ; 1 bytes @ 0x2
   397                           
   398     0022                     ??_LongSound:	
   399                           ; 1 bytes @ 0x2
   400                           
   401     0022                     ??_MuxTemp:	
   402                           ; 1 bytes @ 0x2
   403                           
   404                           
   405                           ; 1 bytes @ 0x2
   406     0022                     	ds	3
   407     0025                     ??_main:
   408                           
   409                           ; 1 bytes @ 0x5
   410     0025                     	ds	2
   411                           
   412                           	psect	maintext
   413     00E5                     __pmaintext:	
   414 ;;
   415 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   416 ;;
   417 ;; *************** function _main *****************
   418 ;; Defined at:
   419 ;;		line 70 in file "main.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   428 ;; Tracked objects:
   429 ;;		On entry : B00/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0
   433 ;;      Params:         0       0
   434 ;;      Locals:         0       0
   435 ;;      Temps:          0       2
   436 ;;      Totals:         0       2
   437 ;;Total ram usage:        2 bytes
   438 ;; Hardware stack levels required when called: 4
   439 ;; This function calls:
   440 ;;		_ADCProcessing
   441 ;;		_DataProcessing
   442 ;;		_InitTimer0
   443 ;;		_InitTimer1
   444 ;;		_Init_uC
   445 ;; This function is called by:
   446 ;;		Startup code after reset
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450     00E5                     _main:	
   451                           ;psect for function _main
   452                           
   453     00E5                     l1065:	
   454                           ;incstack = 0
   455                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   456                           
   457     00E5  3082               	movlw	130
   458     00E6  1283               	bcf	3,5	;RP0=0, select bank0
   459     00E7  00A6               	movwf	??_main+1
   460     00E8  30DD               	movlw	221
   461     00E9  00A5               	movwf	??_main
   462     00EA                     u167:
   463     00EA  0BA5               	decfsz	??_main,f
   464     00EB  28EA               	goto	u167
   465     00EC  0BA6               	decfsz	??_main+1,f
   466     00ED  28EA               	goto	u167
   467     00EE  28EF               	nop2
   468     00EF                     l1067:
   469     00EF  205F               	fcall	_Init_uC
   470     00F0  213E               	fcall	_InitTimer0
   471     00F1  212A               	fcall	_InitTimer1
   472     00F2                     l1069:
   473     00F2  3001               	movlw	1
   474     00F3  1283               	bcf	3,5	;RP0=0, select bank0
   475     00F4  00AC               	movwf	_errorType
   476     00F5                     l1071:
   477     00F5  2016               	fcall	_ADCProcessing
   478     00F6                     l1073:
   479     00F6  20B8               	fcall	_DataProcessing
   480     00F7  28F5               	goto	l1071
   481     00F8  280B               	ljmp	start
   482     00F9                     __end_of_main:
   483                           
   484                           	psect	text1
   485     005F                     __ptext1:	
   486 ;; *************** function _Init_uC *****************
   487 ;; Defined at:
   488 ;;		line 32 in file "initPeriphery.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;		None
   491 ;; Auto vars:     Size  Location     Type
   492 ;;		None
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg, status,2, status,0, pclath, cstack
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMMON   BANK0
   502 ;;      Params:         0       0
   503 ;;      Locals:         0       0
   504 ;;      Temps:          0       0
   505 ;;      Totals:         0       0
   506 ;;Total ram usage:        0 bytes
   507 ;; Hardware stack levels used: 1
   508 ;; Hardware stack levels required when called: 2
   509 ;; This function calls:
   510 ;;		_LongSound
   511 ;;		_MuxVoltage
   512 ;; This function is called by:
   513 ;;		_main
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517     005F                     _Init_uC:	
   518                           ;psect for function _Init_uC
   519                           
   520     005F                     l985:	
   521                           ;incstack = 0
   522                           ; Regs used in _Init_uC: [wreg+status,2+status,0+pclath+cstack]
   523                           
   524                           
   525                           ;initPeriphery.c: 33:     CMCON = 0x07;
   526     005F  3007               	movlw	7
   527     0060  1283               	bcf	3,5	;RP0=0, select bank0
   528     0061  0099               	movwf	25	;volatile
   529     0062                     l987:
   530                           
   531                           ;initPeriphery.c: 34:     VRCON = 0x00;
   532     0062  1683               	bsf	3,5	;RP0=1, select bank1
   533     0063  0199               	clrf	25	;volatile
   534                           
   535                           ;initPeriphery.c: 37:     TRISIO = 0;
   536     0064  0185               	clrf	5	;volatile
   537                           
   538                           ;initPeriphery.c: 38:     GPIO = 0;
   539     0065  1283               	bcf	3,5	;RP0=0, select bank0
   540     0066  0185               	clrf	5	;volatile
   541     0067                     l989:
   542                           
   543                           ;initPeriphery.c: 41:     TRISIO2 = 0;
   544     0067  1683               	bsf	3,5	;RP0=1, select bank1
   545     0068  1105               	bcf	5,2	;volatile
   546     0069                     l991:
   547                           
   548                           ;initPeriphery.c: 42:     GP2 = 0;
   549     0069  1283               	bcf	3,5	;RP0=0, select bank0
   550     006A  1105               	bcf	5,2	;volatile
   551     006B                     l993:
   552                           
   553                           ;initPeriphery.c: 45:     TRISIO5 = 0;
   554     006B  1683               	bsf	3,5	;RP0=1, select bank1
   555     006C  1285               	bcf	5,5	;volatile
   556     006D                     l995:
   557                           
   558                           ;initPeriphery.c: 46:     GP5 = 1;
   559     006D  1283               	bcf	3,5	;RP0=0, select bank0
   560     006E  1685               	bsf	5,5	;volatile
   561     006F                     l997:
   562                           
   563                           ;initPeriphery.c: 49:     TRISIO4 = 0;
   564     006F  1683               	bsf	3,5	;RP0=1, select bank1
   565     0070  1205               	bcf	5,4	;volatile
   566     0071                     l999:
   567                           
   568                           ;initPeriphery.c: 50:     GP4 = 1;
   569     0071  1283               	bcf	3,5	;RP0=0, select bank0
   570     0072  1605               	bsf	5,4	;volatile
   571     0073                     l1001:
   572                           
   573                           ;initPeriphery.c: 53:     VCFG = 1;
   574     0073  171F               	bsf	31,6	;volatile
   575     0074                     l1003:
   576                           
   577                           ;initPeriphery.c: 54:     TRISIO0 = 1;
   578     0074  1683               	bsf	3,5	;RP0=1, select bank1
   579     0075  1405               	bsf	5,0	;volatile
   580     0076                     l1005:
   581                           
   582                           ;initPeriphery.c: 55:     TRISIO1 = 1;
   583     0076  1485               	bsf	5,1	;volatile
   584     0077                     l1007:
   585                           
   586                           ;initPeriphery.c: 57:     ANSEL = 0b00110011;
   587     0077  3033               	movlw	51
   588     0078  009F               	movwf	31	;volatile
   589     0079                     l1009:
   590                           
   591                           ;initPeriphery.c: 59:     PEIE = 1;
   592     0079  170B               	bsf	11,6	;volatile
   593     007A                     l1011:
   594                           
   595                           ;initPeriphery.c: 60:     GIE = 1;
   596     007A  178B               	bsf	11,7	;volatile
   597     007B                     l1013:
   598                           
   599                           ;initPeriphery.c: 62:     LongSound();
   600     007B  209D               	fcall	_LongSound
   601     007C                     l1015:
   602                           
   603                           ;initPeriphery.c: 73:     MuxVoltage();
   604     007C  20F9               	fcall	_MuxVoltage
   605     007D                     l128:
   606     007D  0008               	return
   607     007E                     __end_of_Init_uC:
   608                           
   609                           	psect	text2
   610     012A                     __ptext2:	
   611 ;; *************** function _InitTimer1 *****************
   612 ;; Defined at:
   613 ;;		line 20 in file "initPeriphery.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		None
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMMON   BANK0
   627 ;;      Params:         0       0
   628 ;;      Locals:         0       0
   629 ;;      Temps:          0       0
   630 ;;      Totals:         0       0
   631 ;;Total ram usage:        0 bytes
   632 ;; Hardware stack levels used: 1
   633 ;; Hardware stack levels required when called: 1
   634 ;; This function calls:
   635 ;;		Nothing
   636 ;; This function is called by:
   637 ;;		_main
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641     012A                     _InitTimer1:	
   642                           ;psect for function _InitTimer1
   643                           
   644     012A                     l1025:	
   645                           ;incstack = 0
   646                           ; Regs used in _InitTimer1: []
   647                           
   648                           
   649                           ;initPeriphery.c: 22:      TMR1H = 0xFC;
   650     012A  30FC               	movlw	252
   651     012B  1283               	bcf	3,5	;RP0=0, select bank0
   652     012C  008F               	movwf	15	;volatile
   653                           
   654                           ;initPeriphery.c: 23:   TMR1L = 0x17;
   655     012D  3017               	movlw	23
   656     012E  008E               	movwf	14	;volatile
   657                           
   658                           ;initPeriphery.c: 25:   T1CON = 0x01;
   659     012F  3001               	movlw	1
   660     0130  0090               	movwf	16	;volatile
   661                           
   662                           ;initPeriphery.c: 27:   TMR1IF = 0;
   663     0131  100C               	bcf	12,0	;volatile
   664                           
   665                           ;initPeriphery.c: 28:   TMR1IE = 1;
   666     0132  1683               	bsf	3,5	;RP0=1, select bank1
   667     0133  140C               	bsf	12,0	;volatile
   668     0134                     l125:
   669     0134  0008               	return
   670     0135                     __end_of_InitTimer1:
   671                           
   672                           	psect	text3
   673     013E                     __ptext3:	
   674 ;; *************** function _InitTimer0 *****************
   675 ;; Defined at:
   676 ;;		line 11 in file "initPeriphery.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		status,2
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMMON   BANK0
   690 ;;      Params:         0       0
   691 ;;      Locals:         0       0
   692 ;;      Temps:          0       0
   693 ;;      Totals:         0       0
   694 ;;Total ram usage:        0 bytes
   695 ;; Hardware stack levels used: 1
   696 ;; Hardware stack levels required when called: 1
   697 ;; This function calls:
   698 ;;		Nothing
   699 ;; This function is called by:
   700 ;;		_main
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704     013E                     _InitTimer0:	
   705                           ;psect for function _InitTimer0
   706                           
   707     013E                     l1017:	
   708                           ;incstack = 0
   709                           ; Regs used in _InitTimer0: [status,2]
   710                           
   711                           
   712                           ;initPeriphery.c: 13:     OPTION_REG = 0b11000001;
   713     013E  30C1               	movlw	193
   714     013F  1683               	bsf	3,5	;RP0=1, select bank1
   715     0140  0081               	movwf	1	;volatile
   716     0141                     l1019:
   717                           
   718                           ;initPeriphery.c: 14:     TMR0 = 0;
   719     0141  1283               	bcf	3,5	;RP0=0, select bank0
   720     0142  0181               	clrf	1	;volatile
   721     0143                     l1021:
   722                           
   723                           ;initPeriphery.c: 15:     TMR0IF = 0;
   724     0143  110B               	bcf	11,2	;volatile
   725     0144                     l1023:
   726                           
   727                           ;initPeriphery.c: 16:     TMR0IE = 1;
   728     0144  168B               	bsf	11,5	;volatile
   729     0145                     l122:
   730     0145  0008               	return
   731     0146                     __end_of_InitTimer0:
   732                           
   733                           	psect	text4
   734     00B8                     __ptext4:	
   735 ;; *************** function _DataProcessing *****************
   736 ;; Defined at:
   737 ;;		line 84 in file "main.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;		None
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMMON   BANK0
   751 ;;      Params:         0       0
   752 ;;      Locals:         0       0
   753 ;;      Temps:          0       0
   754 ;;      Totals:         0       0
   755 ;;Total ram usage:        0 bytes
   756 ;; Hardware stack levels used: 1
   757 ;; Hardware stack levels required when called: 3
   758 ;; This function calls:
   759 ;;		_ThreeShort
   760 ;;		_TwoShortOneLong
   761 ;;		_TwoShortTwoLong
   762 ;; This function is called by:
   763 ;;		_main
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767     00B8                     _DataProcessing:	
   768                           ;psect for function _DataProcessing
   769                           
   770     00B8                     l1053:	
   771                           ;incstack = 0
   772                           ; Regs used in _DataProcessing: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   773                           
   774     00B8  28BF               	goto	l1063
   775     00B9                     l1055:
   776     00B9  2146               	fcall	_TwoShortOneLong
   777     00BA  28CE               	goto	l38
   778     00BB                     l1057:
   779     00BB  2135               	fcall	_TwoShortTwoLong
   780     00BC  28CE               	goto	l38
   781     00BD                     l1059:
   782     00BD  214E               	fcall	_ThreeShort
   783     00BE  28CE               	goto	l38
   784     00BF                     l1063:
   785     00BF  1283               	bcf	3,5	;RP0=0, select bank0
   786     00C0  082C               	movf	_errorType,w
   787                           
   788                           ; Switch size 1, requested type "simple"
   789                           ; Number of cases is 4, Range of values is 1 to 5
   790                           ; switch strategies available:
   791                           ; Name         Instructions Cycles
   792                           ; simple_byte           13     7 (average)
   793                           ; direct_byte           14     9 (fixed)
   794                           ; jumptable            263     9 (fixed)
   795                           ;	Chosen strategy is simple_byte
   796     00C1  3A01               	xorlw	1	; case 1
   797     00C2  1903               	skipnz
   798     00C3  28CE               	goto	l38
   799     00C4  3A03               	xorlw	3	; case 2
   800     00C5  1903               	skipnz
   801     00C6  28B9               	goto	l1055
   802     00C7  3A01               	xorlw	1	; case 3
   803     00C8  1903               	skipnz
   804     00C9  28BB               	goto	l1057
   805     00CA  3A06               	xorlw	6	; case 5
   806     00CB  1903               	skipnz
   807     00CC  28BD               	goto	l1059
   808     00CD  28CE               	goto	l38
   809     00CE                     l38:
   810     00CE  0008               	return
   811     00CF                     __end_of_DataProcessing:
   812                           
   813                           	psect	text5
   814     0135                     __ptext5:	
   815 ;; *************** function _TwoShortTwoLong *****************
   816 ;; Defined at:
   817 ;;		line 37 in file "sounds.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, status,2, status,0, pclath, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMMON   BANK0
   831 ;;      Params:         0       0
   832 ;;      Locals:         0       0
   833 ;;      Temps:          0       0
   834 ;;      Totals:         0       0
   835 ;;Total ram usage:        0 bytes
   836 ;; Hardware stack levels used: 1
   837 ;; Hardware stack levels required when called: 2
   838 ;; This function calls:
   839 ;;		_LongSound
   840 ;;		_ShortSound
   841 ;;		_TimeOut
   842 ;; This function is called by:
   843 ;;		_DataProcessing
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847     0135                     _TwoShortTwoLong:	
   848                           ;psect for function _TwoShortTwoLong
   849                           
   850     0135                     l937:	
   851                           ;incstack = 0
   852                           ; Regs used in _TwoShortTwoLong: [wreg+status,2+status,0+pclath+cstack]
   853                           
   854                           
   855                           ;sounds.c: 39:    ShortSound();
   856     0135  20CF               	fcall	_ShortSound
   857                           
   858                           ;sounds.c: 40:    ShortSound();
   859     0136  20CF               	fcall	_ShortSound
   860                           
   861                           ;sounds.c: 41:    LongSound();
   862     0137  209D               	fcall	_LongSound
   863                           
   864                           ;sounds.c: 42:    LongSound();
   865     0138  209D               	fcall	_LongSound
   866     0139                     l939:
   867                           
   868                           ;sounds.c: 43:    cnt1 = 0;
   869     0139  1283               	bcf	3,5	;RP0=0, select bank0
   870     013A  01A9               	clrf	_cnt1
   871     013B  01AA               	clrf	_cnt1+1
   872     013C                     l941:
   873                           
   874                           ;sounds.c: 44:    TimeOut();
   875     013C  211B               	fcall	_TimeOut
   876     013D                     l62:
   877     013D  0008               	return
   878     013E                     __end_of_TwoShortTwoLong:
   879                           
   880                           	psect	text6
   881     0146                     __ptext6:	
   882 ;; *************** function _TwoShortOneLong *****************
   883 ;; Defined at:
   884 ;;		line 29 in file "sounds.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;		None
   887 ;; Auto vars:     Size  Location     Type
   888 ;;		None
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1    wreg      void 
   891 ;; Registers used:
   892 ;;		wreg, status,2, status,0, pclath, cstack
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMMON   BANK0
   898 ;;      Params:         0       0
   899 ;;      Locals:         0       0
   900 ;;      Temps:          0       0
   901 ;;      Totals:         0       0
   902 ;;Total ram usage:        0 bytes
   903 ;; Hardware stack levels used: 1
   904 ;; Hardware stack levels required when called: 2
   905 ;; This function calls:
   906 ;;		_LongSound
   907 ;;		_ShortSound
   908 ;;		_TimeOut
   909 ;; This function is called by:
   910 ;;		_DataProcessing
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914     0146                     _TwoShortOneLong:	
   915                           ;psect for function _TwoShortOneLong
   916                           
   917     0146                     l931:	
   918                           ;incstack = 0
   919                           ; Regs used in _TwoShortOneLong: [wreg+status,2+status,0+pclath+cstack]
   920                           
   921                           
   922                           ;sounds.c: 30:    ShortSound();
   923     0146  20CF               	fcall	_ShortSound
   924                           
   925                           ;sounds.c: 31:    ShortSound();
   926     0147  20CF               	fcall	_ShortSound
   927                           
   928                           ;sounds.c: 32:    LongSound();
   929     0148  209D               	fcall	_LongSound
   930     0149                     l933:
   931                           
   932                           ;sounds.c: 33:    cnt1 = 0;
   933     0149  1283               	bcf	3,5	;RP0=0, select bank0
   934     014A  01A9               	clrf	_cnt1
   935     014B  01AA               	clrf	_cnt1+1
   936     014C                     l935:
   937                           
   938                           ;sounds.c: 34:    TimeOut();
   939     014C  211B               	fcall	_TimeOut
   940     014D                     l59:
   941     014D  0008               	return
   942     014E                     __end_of_TwoShortOneLong:
   943                           
   944                           	psect	text7
   945     009D                     __ptext7:	
   946 ;; *************** function _LongSound *****************
   947 ;; Defined at:
   948 ;;		line 16 in file "sounds.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0
   962 ;;      Params:         0       0
   963 ;;      Locals:         0       0
   964 ;;      Temps:          0       3
   965 ;;      Totals:         0       3
   966 ;;Total ram usage:        3 bytes
   967 ;; Hardware stack levels used: 1
   968 ;; Hardware stack levels required when called: 1
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_TwoShortOneLong
   973 ;;		_TwoShortTwoLong
   974 ;;		_Init_uC
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978     009D                     _LongSound:	
   979                           ;psect for function _LongSound
   980                           
   981     009D                     l919:	
   982                           ;incstack = 0
   983                           ; Regs used in _LongSound: [wreg]
   984                           
   985                           
   986                           ;sounds.c: 17:    GP2 = 1;
   987     009D  1283               	bcf	3,5	;RP0=0, select bank0
   988     009E  1505               	bsf	5,2	;volatile
   989     009F                     l921:
   990                           
   991                           ;sounds.c: 18:    _delay((unsigned long)((200)*(4000000/4000.0)));
   992     009F  3002               	movlw	2
   993     00A0  00A4               	movwf	??_LongSound+2
   994     00A1  3004               	movlw	4
   995     00A2  00A3               	movwf	??_LongSound+1
   996     00A3  30BA               	movlw	186
   997     00A4  00A2               	movwf	??_LongSound
   998     00A5                     u177:
   999     00A5  0BA2               	decfsz	??_LongSound,f
  1000     00A6  28A5               	goto	u177
  1001     00A7  0BA3               	decfsz	??_LongSound+1,f
  1002     00A8  28A5               	goto	u177
  1003     00A9  0BA4               	decfsz	??_LongSound+2,f
  1004     00AA  28A5               	goto	u177
  1005     00AB  0000               	nop
  1006     00AC                     l923:
  1007                           
  1008                           ;sounds.c: 19:    GP2 = 0;
  1009     00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1010     00AD  1105               	bcf	5,2	;volatile
  1011                           
  1012                           ;sounds.c: 20:    _delay((unsigned long)((80)*(4000000/4000.0)));
  1013     00AE  3068               	movlw	104
  1014     00AF  00A3               	movwf	??_LongSound+1
  1015     00B0  30E4               	movlw	228
  1016     00B1  00A2               	movwf	??_LongSound
  1017     00B2                     u187:
  1018     00B2  0BA2               	decfsz	??_LongSound,f
  1019     00B3  28B2               	goto	u187
  1020     00B4  0BA3               	decfsz	??_LongSound+1,f
  1021     00B5  28B2               	goto	u187
  1022     00B6  0000               	nop
  1023     00B7                     l50:
  1024     00B7  0008               	return
  1025     00B8                     __end_of_LongSound:
  1026                           
  1027                           	psect	text8
  1028     014E                     __ptext8:	
  1029 ;; *************** function _ThreeShort *****************
  1030 ;; Defined at:
  1031 ;;		line 47 in file "sounds.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;		None
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0, pclath, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0
  1045 ;;      Params:         0       0
  1046 ;;      Locals:         0       0
  1047 ;;      Temps:          0       0
  1048 ;;      Totals:         0       0
  1049 ;;Total ram usage:        0 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; Hardware stack levels required when called: 2
  1052 ;; This function calls:
  1053 ;;		_ShortSound
  1054 ;;		_TimeOut
  1055 ;; This function is called by:
  1056 ;;		_DataProcessing
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060     014E                     _ThreeShort:	
  1061                           ;psect for function _ThreeShort
  1062                           
  1063     014E                     l943:	
  1064                           ;incstack = 0
  1065                           ; Regs used in _ThreeShort: [wreg+status,2+status,0+pclath+cstack]
  1066                           
  1067                           
  1068                           ;sounds.c: 48:    ShortSound();
  1069     014E  20CF               	fcall	_ShortSound
  1070                           
  1071                           ;sounds.c: 49:    ShortSound();
  1072     014F  20CF               	fcall	_ShortSound
  1073                           
  1074                           ;sounds.c: 50:    ShortSound();
  1075     0150  20CF               	fcall	_ShortSound
  1076     0151                     l945:
  1077                           
  1078                           ;sounds.c: 51:    cnt1 = 0;
  1079     0151  1283               	bcf	3,5	;RP0=0, select bank0
  1080     0152  01A9               	clrf	_cnt1
  1081     0153  01AA               	clrf	_cnt1+1
  1082     0154                     l947:
  1083                           
  1084                           ;sounds.c: 52:    TimeOut();
  1085     0154  211B               	fcall	_TimeOut
  1086     0155                     l65:
  1087     0155  0008               	return
  1088     0156                     __end_of_ThreeShort:
  1089                           
  1090                           	psect	text9
  1091     011B                     __ptext9:	
  1092 ;; *************** function _TimeOut *****************
  1093 ;; Defined at:
  1094 ;;		line 23 in file "sounds.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;		None
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, status,2
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMMON   BANK0
  1108 ;;      Params:         0       0
  1109 ;;      Locals:         0       0
  1110 ;;      Temps:          0       0
  1111 ;;      Totals:         0       0
  1112 ;;Total ram usage:        0 bytes
  1113 ;; Hardware stack levels used: 1
  1114 ;; Hardware stack levels required when called: 1
  1115 ;; This function calls:
  1116 ;;		Nothing
  1117 ;; This function is called by:
  1118 ;;		_TwoShortOneLong
  1119 ;;		_TwoShortTwoLong
  1120 ;;		_ThreeShort
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124     011B                     _TimeOut:	
  1125                           ;psect for function _TimeOut
  1126                           
  1127     011B                     l925:	
  1128                           ;incstack = 0
  1129                           ; Regs used in _TimeOut: [wreg+status,2]
  1130                           
  1131                           
  1132                           ;sounds.c: 24:    while (cnt1 <= 1000) GP2 = 0;
  1133     011B  291D               	goto	l927
  1134     011C                     l54:
  1135     011C  1105               	bcf	5,2	;volatile
  1136     011D                     l927:
  1137     011D  3003               	movlw	3
  1138     011E  1283               	bcf	3,5	;RP0=0, select bank0
  1139     011F  022A               	subwf	_cnt1+1,w
  1140     0120  30E9               	movlw	233
  1141     0121  1903               	skipnz
  1142     0122  0229               	subwf	_cnt1,w
  1143     0123  1C03               	skipc
  1144     0124  2926               	goto	u81
  1145     0125  2927               	goto	u80
  1146     0126                     u81:
  1147     0126  291C               	goto	l54
  1148     0127                     u80:
  1149     0127                     l929:
  1150                           
  1151                           ;sounds.c: 25:     cnt1 = 0;
  1152     0127  01A9               	clrf	_cnt1
  1153     0128  01AA               	clrf	_cnt1+1
  1154     0129                     l56:
  1155     0129  0008               	return
  1156     012A                     __end_of_TimeOut:
  1157                           
  1158                           	psect	text10
  1159     00CF                     __ptext10:	
  1160 ;; *************** function _ShortSound *****************
  1161 ;; Defined at:
  1162 ;;		line 9 in file "sounds.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;		None
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;		None
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      void 
  1169 ;; Registers used:
  1170 ;;		wreg
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMMON   BANK0
  1176 ;;      Params:         0       0
  1177 ;;      Locals:         0       0
  1178 ;;      Temps:          0       2
  1179 ;;      Totals:         0       2
  1180 ;;Total ram usage:        2 bytes
  1181 ;; Hardware stack levels used: 1
  1182 ;; Hardware stack levels required when called: 1
  1183 ;; This function calls:
  1184 ;;		Nothing
  1185 ;; This function is called by:
  1186 ;;		_TwoShortOneLong
  1187 ;;		_TwoShortTwoLong
  1188 ;;		_ThreeShort
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192     00CF                     _ShortSound:	
  1193                           ;psect for function _ShortSound
  1194                           
  1195     00CF                     l913:	
  1196                           ;incstack = 0
  1197                           ; Regs used in _ShortSound: [wreg]
  1198                           
  1199                           
  1200                           ;sounds.c: 10:     GP2 = 1;
  1201     00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1202     00D0  1505               	bsf	5,2	;volatile
  1203     00D1                     l915:
  1204                           
  1205                           ;sounds.c: 11:     _delay((unsigned long)((120)*(4000000/4000.0)));
  1206     00D1  309C               	movlw	156
  1207     00D2  00A3               	movwf	??_ShortSound+1
  1208     00D3  30D7               	movlw	215
  1209     00D4  00A2               	movwf	??_ShortSound
  1210     00D5                     u197:
  1211     00D5  0BA2               	decfsz	??_ShortSound,f
  1212     00D6  28D5               	goto	u197
  1213     00D7  0BA3               	decfsz	??_ShortSound+1,f
  1214     00D8  28D5               	goto	u197
  1215     00D9                     l917:
  1216                           
  1217                           ;sounds.c: 12:     GP2 = 0;
  1218     00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1219     00DA  1105               	bcf	5,2	;volatile
  1220                           
  1221                           ;sounds.c: 13:     _delay((unsigned long)((80)*(4000000/4000.0)));
  1222     00DB  3068               	movlw	104
  1223     00DC  00A3               	movwf	??_ShortSound+1
  1224     00DD  30E4               	movlw	228
  1225     00DE  00A2               	movwf	??_ShortSound
  1226     00DF                     u207:
  1227     00DF  0BA2               	decfsz	??_ShortSound,f
  1228     00E0  28DF               	goto	u207
  1229     00E1  0BA3               	decfsz	??_ShortSound+1,f
  1230     00E2  28DF               	goto	u207
  1231     00E3  0000               	nop
  1232     00E4                     l47:
  1233     00E4  0008               	return
  1234     00E5                     __end_of_ShortSound:
  1235                           
  1236                           	psect	text11
  1237     0016                     __ptext11:	
  1238 ;; *************** function _ADCProcessing *****************
  1239 ;; Defined at:
  1240 ;;		line 69 in file "interrupts.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;		None
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;		None
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMMON   BANK0
  1254 ;;      Params:         0       0
  1255 ;;      Locals:         0       0
  1256 ;;      Temps:          0       0
  1257 ;;      Totals:         0       0
  1258 ;;Total ram usage:        0 bytes
  1259 ;; Hardware stack levels used: 1
  1260 ;; Hardware stack levels required when called: 2
  1261 ;; This function calls:
  1262 ;;		_MuxTemp
  1263 ;;		_MuxVoltage
  1264 ;; This function is called by:
  1265 ;;		_main
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269     0016                     _ADCProcessing:	
  1270                           ;psect for function _ADCProcessing
  1271                           
  1272     0016                     l1027:	
  1273                           ;incstack = 0
  1274                           ; Regs used in _ADCProcessing: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1275                           
  1276                           
  1277                           ;interrupts.c: 71:     if (ADIF == 1){
  1278     0016  1283               	bcf	3,5	;RP0=0, select bank0
  1279     0017  1F0C               	btfss	12,6	;volatile
  1280     0018  281A               	goto	u91
  1281     0019  281B               	goto	u90
  1282     001A                     u91:
  1283     001A  285E               	goto	l199
  1284     001B                     u90:
  1285     001B                     l1029:
  1286                           
  1287                           ;interrupts.c: 72:      adcValue = (uint16_t) ((ADRESH << 8) + ADRESL);
  1288     001B  081E               	movf	30,w	;volatile
  1289     001C  00A8               	movwf	_adcValue+1
  1290     001D  1683               	bsf	3,5	;RP0=1, select bank1
  1291     001E  081E               	movf	30,w	;volatile
  1292     001F  1283               	bcf	3,5	;RP0=0, select bank0
  1293     0020  00A7               	movwf	_adcValue
  1294                           
  1295                           ;interrupts.c: 74:      switch (measureType){
  1296     0021  2856               	goto	l1051
  1297     0022                     l1031:
  1298                           
  1299                           ;interrupts.c: 80:     if ((adcValue >= 95) && (adcValue <= 140)){
  1300     0022  3000               	movlw	0
  1301     0023  0228               	subwf	_adcValue+1,w
  1302     0024  305F               	movlw	95
  1303     0025  1903               	skipnz
  1304     0026  0227               	subwf	_adcValue,w
  1305     0027  1C03               	skipc
  1306     0028  282A               	goto	u101
  1307     0029  282B               	goto	u100
  1308     002A                     u101:
  1309     002A  2839               	goto	l1037
  1310     002B                     u100:
  1311     002B                     l1033:
  1312     002B  3000               	movlw	0
  1313     002C  0228               	subwf	_adcValue+1,w
  1314     002D  308D               	movlw	141
  1315     002E  1903               	skipnz
  1316     002F  0227               	subwf	_adcValue,w
  1317     0030  1803               	skipnc
  1318     0031  2833               	goto	u111
  1319     0032  2834               	goto	u110
  1320     0033                     u111:
  1321     0033  2839               	goto	l1037
  1322     0034                     u110:
  1323     0034                     l1035:
  1324                           
  1325                           ;interrupts.c: 82:            GP5 = 0;
  1326     0034  1285               	bcf	5,5	;volatile
  1327                           
  1328                           ;interrupts.c: 83:         GP2 = 0;
  1329     0035  1105               	bcf	5,2	;volatile
  1330                           
  1331                           ;interrupts.c: 84:            errorType = 1;
  1332     0036  3001               	movlw	1
  1333     0037  00AC               	movwf	_errorType
  1334                           
  1335                           ;interrupts.c: 85:            }
  1336     0038  2852               	goto	l1045
  1337     0039                     l1037:
  1338     0039  3000               	movlw	0
  1339     003A  0228               	subwf	_adcValue+1,w
  1340     003B  305F               	movlw	95
  1341     003C  1903               	skipnz
  1342     003D  0227               	subwf	_adcValue,w
  1343     003E  1803               	skipnc
  1344     003F  2841               	goto	u121
  1345     0040  2842               	goto	u120
  1346     0041                     u121:
  1347     0041  2846               	goto	l1041
  1348     0042                     u120:
  1349     0042                     l1039:
  1350                           
  1351                           ;interrupts.c: 92:         GP5 = 1;
  1352     0042  1685               	bsf	5,5	;volatile
  1353                           
  1354                           ;interrupts.c: 93:      errorType = 2;
  1355     0043  3002               	movlw	2
  1356     0044  00AC               	movwf	_errorType
  1357                           
  1358                           ;interrupts.c: 94:          }
  1359     0045  2852               	goto	l1045
  1360     0046                     l1041:
  1361     0046  3000               	movlw	0
  1362     0047  0228               	subwf	_adcValue+1,w
  1363     0048  308D               	movlw	141
  1364     0049  1903               	skipnz
  1365     004A  0227               	subwf	_adcValue,w
  1366     004B  1C03               	skipc
  1367     004C  284E               	goto	u131
  1368     004D  284F               	goto	u130
  1369     004E                     u131:
  1370     004E  2852               	goto	l1045
  1371     004F                     u130:
  1372     004F                     l1043:
  1373                           
  1374                           ;interrupts.c: 101:            GP5 = 1;
  1375     004F  1685               	bsf	5,5	;volatile
  1376                           
  1377                           ;interrupts.c: 102:         errorType = 3;
  1378     0050  3003               	movlw	3
  1379     0051  00AC               	movwf	_errorType
  1380     0052                     l1045:
  1381                           
  1382                           ;interrupts.c: 105:           MuxTemp();
  1383     0052  210A               	fcall	_MuxTemp
  1384                           
  1385                           ;interrupts.c: 106:         break;
  1386     0053  285E               	goto	l199
  1387     0054                     l1047:
  1388                           
  1389                           ;interrupts.c: 132:      MuxVoltage();
  1390     0054  20F9               	fcall	_MuxVoltage
  1391                           
  1392                           ;interrupts.c: 133:  break;
  1393     0055  285E               	goto	l199
  1394     0056                     l1051:
  1395     0056  082D               	movf	_measureType,w	;volatile
  1396                           
  1397                           ; Switch size 1, requested type "simple"
  1398                           ; Number of cases is 2, Range of values is 1 to 2
  1399                           ; switch strategies available:
  1400                           ; Name         Instructions Cycles
  1401                           ; simple_byte            7     4 (average)
  1402                           ; direct_byte           11     9 (fixed)
  1403                           ; jumptable            263     9 (fixed)
  1404                           ;	Chosen strategy is simple_byte
  1405     0057  3A01               	xorlw	1	; case 1
  1406     0058  1903               	skipnz
  1407     0059  2822               	goto	l1031
  1408     005A  3A03               	xorlw	3	; case 2
  1409     005B  1903               	skipnz
  1410     005C  2854               	goto	l1047
  1411     005D  285E               	goto	l199
  1412     005E                     l199:
  1413     005E  0008               	return
  1414     005F                     __end_of_ADCProcessing:
  1415                           
  1416                           	psect	text12
  1417     00F9                     __ptext12:	
  1418 ;; *************** function _MuxVoltage *****************
  1419 ;; Defined at:
  1420 ;;		line 18 in file "interrupts.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;		None
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;		None
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      void 
  1427 ;; Registers used:
  1428 ;;		wreg, status,2
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMMON   BANK0
  1434 ;;      Params:         0       0
  1435 ;;      Locals:         0       0
  1436 ;;      Temps:          0       1
  1437 ;;      Totals:         0       1
  1438 ;;Total ram usage:        1 bytes
  1439 ;; Hardware stack levels used: 1
  1440 ;; Hardware stack levels required when called: 1
  1441 ;; This function calls:
  1442 ;;		Nothing
  1443 ;; This function is called by:
  1444 ;;		_Init_uC
  1445 ;;		_ADCProcessing
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449     00F9                     _MuxVoltage:	
  1450                           ;psect for function _MuxVoltage
  1451                           
  1452     00F9                     l949:	
  1453                           ;incstack = 0
  1454                           ; Regs used in _MuxVoltage: [wreg+status,2]
  1455                           
  1456                           
  1457                           ;interrupts.c: 19:        ADCON0 = 0;
  1458     00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1459     00FA  019F               	clrf	31	;volatile
  1460     00FB                     l951:
  1461                           
  1462                           ;interrupts.c: 20:        ADON = 1;
  1463     00FB  141F               	bsf	31,0	;volatile
  1464     00FC                     l953:
  1465                           
  1466                           ;interrupts.c: 21:        ADFM = 1;
  1467     00FC  179F               	bsf	31,7	;volatile
  1468     00FD                     l955:
  1469                           
  1470                           ;interrupts.c: 22:        CHS1 = 0;
  1471     00FD  119F               	bcf	31,3	;volatile
  1472     00FE                     l957:
  1473                           
  1474                           ;interrupts.c: 23:        CHS0 = 1;
  1475     00FE  151F               	bsf	31,2	;volatile
  1476     00FF                     l959:
  1477                           
  1478                           ;interrupts.c: 24:        measureType = 1;
  1479     00FF  3001               	movlw	1
  1480     0100  00AD               	movwf	_measureType	;volatile
  1481     0101                     l961:
  1482                           
  1483                           ;interrupts.c: 25:        ADIF = 0;
  1484     0101  130C               	bcf	12,6	;volatile
  1485     0102                     l963:
  1486                           
  1487                           ;interrupts.c: 26:        _delay((unsigned long)((50)*(4000000/4000000.0)));
  1488     0102  3010               	movlw	16
  1489     0103  00A2               	movwf	??_MuxVoltage
  1490     0104                     u217:
  1491     0104  0BA2               	decfsz	??_MuxVoltage,f
  1492     0105  2904               	goto	u217
  1493     0106  0000               	nop
  1494     0107                     l965:
  1495                           
  1496                           ;interrupts.c: 27:        GO = 1;
  1497     0107  1283               	bcf	3,5	;RP0=0, select bank0
  1498     0108  149F               	bsf	31,1	;volatile
  1499     0109                     l175:
  1500     0109  0008               	return
  1501     010A                     __end_of_MuxVoltage:
  1502                           
  1503                           	psect	text13
  1504     010A                     __ptext13:	
  1505 ;; *************** function _MuxTemp *****************
  1506 ;; Defined at:
  1507 ;;		line 31 in file "interrupts.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;		None
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;		None
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg, status,2
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMMON   BANK0
  1521 ;;      Params:         0       0
  1522 ;;      Locals:         0       0
  1523 ;;      Temps:          0       1
  1524 ;;      Totals:         0       1
  1525 ;;Total ram usage:        1 bytes
  1526 ;; Hardware stack levels used: 1
  1527 ;; Hardware stack levels required when called: 1
  1528 ;; This function calls:
  1529 ;;		Nothing
  1530 ;; This function is called by:
  1531 ;;		_ADCProcessing
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535     010A                     _MuxTemp:	
  1536                           ;psect for function _MuxTemp
  1537                           
  1538     010A                     l967:	
  1539                           ;incstack = 0
  1540                           ; Regs used in _MuxTemp: [wreg+status,2]
  1541                           
  1542                           
  1543                           ;interrupts.c: 32:        ADCON0 = 0;
  1544     010A  1283               	bcf	3,5	;RP0=0, select bank0
  1545     010B  019F               	clrf	31	;volatile
  1546     010C                     l969:
  1547                           
  1548                           ;interrupts.c: 33:        ADON = 1;
  1549     010C  141F               	bsf	31,0	;volatile
  1550     010D                     l971:
  1551                           
  1552                           ;interrupts.c: 34:        ADFM = 1;
  1553     010D  179F               	bsf	31,7	;volatile
  1554     010E                     l973:
  1555                           
  1556                           ;interrupts.c: 35:        CHS1 = 0;
  1557     010E  119F               	bcf	31,3	;volatile
  1558     010F                     l975:
  1559                           
  1560                           ;interrupts.c: 36:        CHS0 = 0;
  1561     010F  111F               	bcf	31,2	;volatile
  1562     0110                     l977:
  1563                           
  1564                           ;interrupts.c: 37:        measureType = 2;
  1565     0110  3002               	movlw	2
  1566     0111  00AD               	movwf	_measureType	;volatile
  1567     0112                     l979:
  1568                           
  1569                           ;interrupts.c: 38:        ADIF = 0;
  1570     0112  130C               	bcf	12,6	;volatile
  1571     0113                     l981:
  1572                           
  1573                           ;interrupts.c: 39:        _delay((unsigned long)((50)*(4000000/4000000.0)));
  1574     0113  3010               	movlw	16
  1575     0114  00A2               	movwf	??_MuxTemp
  1576     0115                     u227:
  1577     0115  0BA2               	decfsz	??_MuxTemp,f
  1578     0116  2915               	goto	u227
  1579     0117  0000               	nop
  1580     0118                     l983:
  1581                           
  1582                           ;interrupts.c: 40:        GO = 1;
  1583     0118  1283               	bcf	3,5	;RP0=0, select bank0
  1584     0119  149F               	bsf	31,1	;volatile
  1585     011A                     l178:
  1586     011A  0008               	return
  1587     011B                     __end_of_MuxTemp:
  1588                           
  1589                           	psect	text14
  1590     007E                     __ptext14:	
  1591 ;; *************** function _ISR *****************
  1592 ;; Defined at:
  1593 ;;		line 43 in file "interrupts.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;		None
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;		None
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      void 
  1600 ;; Registers used:
  1601 ;;		wreg, status,2, status,0
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMMON   BANK0
  1607 ;;      Params:         0       0
  1608 ;;      Locals:         0       0
  1609 ;;      Temps:          0       2
  1610 ;;      Totals:         0       2
  1611 ;;Total ram usage:        2 bytes
  1612 ;; Hardware stack levels used: 1
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		Interrupt level 1
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620     007E                     _ISR:	
  1621                           ;psect for function _ISR
  1622                           
  1623     007E                     i1l1075:
  1624                           
  1625                           ;interrupts.c: 47:     if (TMR0IF == 1){
  1626     007E  1D0B               	btfss	11,2	;volatile
  1627     007F  2881               	goto	u14_21
  1628     0080  2882               	goto	u14_20
  1629     0081                     u14_21:
  1630     0081  2887               	goto	i1l1083
  1631     0082                     u14_20:
  1632     0082                     i1l1077:
  1633                           
  1634                           ;interrupts.c: 49:     TMR0 = 6;
  1635     0082  3006               	movlw	6
  1636     0083  0081               	movwf	1	;volatile
  1637     0084                     i1l1079:
  1638                           
  1639                           ;interrupts.c: 50:  cnt0++;
  1640     0084  3001               	movlw	1
  1641     0085  07AB               	addwf	_cnt0,f	;volatile
  1642     0086                     i1l1081:
  1643                           
  1644                           ;interrupts.c: 51:  TMR0IF = 0;
  1645     0086  110B               	bcf	11,2	;volatile
  1646     0087                     i1l1083:
  1647                           
  1648                           ;interrupts.c: 56:     if (TMR1IF == 1){
  1649     0087  1C0C               	btfss	12,0	;volatile
  1650     0088  288A               	goto	u15_21
  1651     0089  288B               	goto	u15_20
  1652     008A                     u15_21:
  1653     008A  2896               	goto	i1l185
  1654     008B                     u15_20:
  1655     008B                     i1l1085:
  1656                           
  1657                           ;interrupts.c: 58:   TMR1H = 0xFC;
  1658     008B  30FC               	movlw	252
  1659     008C  008F               	movwf	15	;volatile
  1660                           
  1661                           ;interrupts.c: 59:   TMR1L = 0x17;
  1662     008D  3017               	movlw	23
  1663     008E  008E               	movwf	14	;volatile
  1664     008F                     i1l1087:
  1665                           
  1666                           ;interrupts.c: 61:          cnt1++;
  1667     008F  3001               	movlw	1
  1668     0090  07A9               	addwf	_cnt1,f	;volatile
  1669     0091  1803               	skipnc
  1670     0092  0AAA               	incf	_cnt1+1,f	;volatile
  1671     0093  3000               	movlw	0
  1672     0094  07AA               	addwf	_cnt1+1,f	;volatile
  1673     0095                     i1l1089:
  1674                           
  1675                           ;interrupts.c: 63:         TMR1IF = 0;
  1676     0095  100C               	bcf	12,0	;volatile
  1677     0096                     i1l185:
  1678     0096  0821               	movf	??_ISR+1,w
  1679     0097  008A               	movwf	10
  1680     0098  0E20               	swapf	??_ISR,w
  1681     0099  0083               	movwf	3
  1682     009A  0EDE               	swapf	btemp,f
  1683     009B  0E5E               	swapf	btemp,w
  1684     009C  0009               	retfie
  1685     009D                     __end_of_ISR:
  1686     0000                     ___latbits      equ	0
  1687     005E                     btemp           set	94	;btemp
  1688     005E                     wtemp0          set	94
  1689                           
  1690                           	psect	intentry
  1691     0004                     __pintentry:	
  1692                           ;incstack = 0
  1693                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1694                           
  1695     0004                     interrupt_function:
  1696     005E                     saved_w         set	btemp
  1697     0004  00DE               	movwf	btemp
  1698     0005  0E03               	swapf	3,w
  1699     0006  1283               	bcf	3,5	;RP0=0, select bank0
  1700     0007  00A0               	movwf	??_ISR
  1701     0008  080A               	movf	10,w
  1702     0009  00A1               	movwf	??_ISR+1
  1703     000A  287E               	ljmp	_ISR
  1704                           
  1705                           	psect	idloc
  1706                           
  1707                           ;Config register IDLOC0 @ 0x2000
  1708                           ;	unspecified, using default values
  1709     2000                     	org	8192
  1710     2000  3FFF               	dw	16383
  1711                           
  1712                           ;Config register IDLOC1 @ 0x2001
  1713                           ;	unspecified, using default values
  1714     2001                     	org	8193
  1715     2001  3FFF               	dw	16383
  1716                           
  1717                           ;Config register IDLOC2 @ 0x2002
  1718                           ;	unspecified, using default values
  1719     2002                     	org	8194
  1720     2002  3FFF               	dw	16383
  1721                           
  1722                           ;Config register IDLOC3 @ 0x2003
  1723                           ;	unspecified, using default values
  1724     2003                     	org	8195
  1725     2003  3FFF               	dw	16383
  1726                           
  1727                           	psect	config
  1728                           
  1729                           ;Config register CONFIG @ 0x2007
  1730                           ;	Oscillator Selection bits
  1731                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  1732                           ;	Watchdog Timer Enable bit
  1733                           ;	WDTE = OFF, WDT disabled
  1734                           ;	Power-Up Timer Enable bit
  1735                           ;	PWRTE = OFF, PWRT disabled
  1736                           ;	GP3/MCLR pin function select
  1737                           ;	MCLRE = ON, GP3/MCLR pin function is MCLR
  1738                           ;	Brown-out Detect Enable bit
  1739                           ;	BOREN = ON, BOD enabled
  1740                           ;	Code Protection bit
  1741                           ;	CP = OFF, Program Memory code protection is disabled
  1742                           ;	Data Code Protection bit
  1743                           ;	CPD = OFF, Data memory code protection is disabled
  1744     2007                     	org	8199
  1745     2007  31F4               	dw	12788

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      7      14

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _Init_uC->_LongSound
    _TwoShortTwoLong->_LongSound
    _TwoShortOneLong->_LongSound
    _ThreeShort->_ShortSound
    _ADCProcessing->_MuxTemp
    _ADCProcessing->_MuxVoltage

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              5 BANK0      2     2      0
                      _ADCProcessing
                     _DataProcessing
                         _InitTimer0
                         _InitTimer1
                            _Init_uC
 ---------------------------------------------------------------------------------
 (1) _Init_uC                                              0     0      0       0
                          _LongSound
                         _MuxVoltage
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DataProcessing                                       0     0      0       0
                         _ThreeShort
                    _TwoShortOneLong
                    _TwoShortTwoLong
 ---------------------------------------------------------------------------------
 (2) _TwoShortTwoLong                                      0     0      0       0
                          _LongSound
                         _ShortSound
                            _TimeOut
 ---------------------------------------------------------------------------------
 (2) _TwoShortOneLong                                      0     0      0       0
                          _LongSound
                         _ShortSound
                            _TimeOut
 ---------------------------------------------------------------------------------
 (2) _LongSound                                            3     3      0       0
                                              2 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _ThreeShort                                           0     0      0       0
                         _ShortSound
                            _TimeOut
 ---------------------------------------------------------------------------------
 (3) _TimeOut                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ShortSound                                           2     2      0       0
                                              2 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADCProcessing                                        0     0      0       0
                            _MuxTemp
                         _MuxVoltage
 ---------------------------------------------------------------------------------
 (2) _MuxVoltage                                           1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _MuxTemp                                              1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCProcessing
     _MuxTemp
     _MuxVoltage
   _DataProcessing
     _ThreeShort
       _ShortSound
       _TimeOut
     _TwoShortOneLong
       _LongSound
       _ShortSound
       _TimeOut
     _TwoShortTwoLong
       _LongSound
       _ShortSound
       _TimeOut
   _InitTimer0
   _InitTimer1
   _Init_uC
     _LongSound
     _MuxVoltage

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK0               62      7      14     22.6%
BITBANK0            62      0       0      0.0%
COMMON               0      0       0      0.0%
BITCOMMON            0      0       0      0.0%
DATA                 0      0      14      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Jul 17 12:07:05 2025

                     l50 00B7                       l54 011C                       l62 013D  
                     l38 00CE                       l47 00E4                       l56 0129  
                     l65 0155                       l59 014D                       _GO 00F9  
                     u80 0127                       u81 0126                       u90 001B  
                     u91 001A                      l122 0145                      l125 0134  
                    l128 007D                      l175 0109                      l178 011A  
                    l199 005E                      l913 00CF                      l921 009F  
                    l915 00D1                      l923 00AC                      l931 0146  
                    l917 00D9                      l925 011B                      l933 0149  
                    l941 013C                      l951 00FB                      l927 011D  
                    l943 014E                      l919 009D                      l935 014C  
                    l961 0101                      l953 00FC                      l929 0127  
                    l945 0151                      l937 0135                      l971 010D  
                    l963 0102                      l955 00FD                      l947 0154  
                    l939 0139                      l981 0113                      l973 010E  
                    l965 0107                      l957 00FE                      l949 00F9  
                    _GP2 002A                      l983 0118                      l975 010F  
                    l967 010A                      l959 00FF                      l991 0069  
                    _GP4 002C                      l977 0110                      l969 010C  
                    l993 006B                      l985 005F                      _GP5 002D  
                    l979 0112                      l995 006D                      l987 0062  
                    _GIE 005F                      l997 006F                      l989 0067  
                    l999 0071                      u100 002B                      u101 002A  
                    u110 0034                      u111 0033                      u120 0042  
                    u121 0041                      u130 004F                      u131 004E  
                    u207 00DF                      u217 0104                      u227 0115  
                    u167 00EA                      u177 00A5                      u187 00B2  
                    _ISR 007E                      u197 00D5        ??_TwoShortOneLong 0000  
                   ?_ISR 0020        ??_TwoShortTwoLong 0000                     l1001 0073  
                   l1011 007A                     l1003 0074                     l1021 0143  
                   l1013 007B                     l1005 0076                     l1031 0022  
                   l1023 0144                     l1015 007C                     l1007 0077  
                   l1041 0046                     l1033 002B                     l1017 013E  
                   l1025 012A                     l1009 0079                     l1043 004F  
                   l1035 0034                     l1051 0056                     l1027 0016  
                   l1019 0141                     l1045 0052                     l1037 0039  
                   l1029 001B                     l1053 00B8                     l1047 0054  
                   l1039 0042                     l1055 00B9                     l1063 00BF  
                   l1071 00F5                     l1057 00BB                     l1073 00F6  
                   l1065 00E5                     l1059 00BD                     l1067 00EF  
                   l1069 00F2                     _ADIF 0066                     _ADFM 00FF  
                   _ADON 00F8                     _CHS0 00FA                     _CHS1 00FB  
                   _GPIO 0005                     _PEIE 005E                     _VCFG 00FE  
                   _TMR0 0001                     _cnt0 002B                     _cnt1 0029  
                   _main 00E5                     btemp 005E                     start 000B  
       ??_DataProcessing 0000          __end_of_Init_uC 007E                    ??_ISR 0020  
        __end_of_TimeOut 012A          __end_of_MuxTemp 011B                    ?_main 0020  
                  _CMCON 0019                    _ANSEL 009F                    _T1CON 0010  
                  i1l185 0096                    u14_20 0082                    u14_21 0081  
                  u15_20 008B                    u15_21 008A                    _TMR1H 000F  
                  _TMR1L 000E                    _VRCON 0099                    pclath 000A  
                  status 0003                    wtemp0 005E          __initialization 000C  
             _InitTimer0 013E               _InitTimer1 012A             __end_of_main 00F9  
                 ??_main 0025                   _ADCON0 001F                   _ADRESH 001E  
                 _ADRESL 009E                   i1l1081 0086                   i1l1083 0087  
                 i1l1075 007E                   i1l1085 008B                   i1l1077 0082  
                 i1l1087 008F                   i1l1079 0084                   i1l1089 0095  
                 _TMR0IE 005D                   _TMR0IF 005A                   _TMR1IE 0460  
                 _TMR1IF 0060                   _TRISIO 0085                ??_Init_uC 0000  
              ??_TimeOut 0000                ??_MuxTemp 0022               _ThreeShort 014E  
             _MuxVoltage 00F9               _ShortSound 00CF                   saved_w 005E  
__end_of__initialization 0014              ?_InitTimer0 0020              ?_InitTimer1 0020  
         __pcstackCOMMON 0000             __pidataBANK0 0156          _TwoShortOneLong 0146  
        _TwoShortTwoLong 0135        __end_of_LongSound 00B8               __pbssBANK0 0027  
          _ADCProcessing 0016               __pmaintext 00E5               __pintentry 0004  
            ?_ThreeShort 0020              ?_MuxVoltage 0020              ?_ShortSound 0020  
                _TRISIO0 0428                  _TRISIO1 0429                  _TRISIO2 042A  
                _TRISIO4 042C                  _TRISIO5 042D           ?_ADCProcessing 0020  
__end_of_TwoShortOneLong 014E                  _Init_uC 005F                  _TimeOut 011B  
                _MuxTemp 010A  __end_of_TwoShortTwoLong 013E                  __ptext1 005F  
                __ptext2 012A                  __ptext3 013E                  __ptext4 00B8  
                __ptext5 0135                  __ptext6 0146                  __ptext7 009D  
                __ptext8 014E                  __ptext9 011B     end_of_initialization 0014  
        ??_ADCProcessing 0000         ?_TwoShortOneLong 0020             ??_InitTimer0 0000  
           ??_InitTimer1 0000         ?_TwoShortTwoLong 0020      start_initialization 000C  
            __end_of_ISR 009D       __end_of_InitTimer0 0146       __end_of_InitTimer1 0135  
              _LongSound 009D             ??_ThreeShort 0000              __pdataBANK0 002D  
           ??_MuxVoltage 0022             ??_ShortSound 0022                ___latbits 0000  
          __pcstackBANK0 0020               ?_LongSound 0020       __end_of_ThreeShort 0156  
     __end_of_MuxVoltage 010A                 ?_Init_uC 0020       __end_of_ShortSound 00E5  
               ?_TimeOut 0020                 ?_MuxTemp 0020           _DataProcessing 00B8  
              _errorType 002C        interrupt_function 0004   __end_of_DataProcessing 00CF  
            ??_LongSound 0022              _measureType 002D          ?_DataProcessing 0020  
               _adcValue 0027                 __ptext10 00CF                 __ptext11 0016  
               __ptext12 00F9                 __ptext13 010A                 __ptext14 007E  
  __end_of_ADCProcessing 005F                 intlevel1 0000               _OPTION_REG 0081  
